openapi: 3.1.0
info:
  title: UniFi Network API
  description: Network Application internal API
  license: {}
  version: 9.3.43
servers:
- url: /v2
paths:
  /api/site/{siteName}/wireguard/{networkId}/users/batch:
    put:
      tags:
      - Wireguard VPN
      summary: Batch update Wireguard users
      operationId: batchUpdateUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/WireguardUserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WireguardUserDto"
    post:
      tags:
      - Wireguard VPN
      summary: Batch create Wireguard users
      operationId: batchCreateUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/WireguardUserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WireguardUserDto"
  /api/site/{siteName}/wifiman/{clientIp}/feedback/{feedbackId}/wifi_experience:
    put:
      tags:
      - WiFiman
      summary: Report Incorrect WiFi Experience
      operationId: reportIncorrectWifiExperience
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      - name: feedbackId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncorrectWifiExperience"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/wan/magic/configuration:
    get:
      tags:
      - WAN Magic
      summary: Get WAN Magic configuration
      description: Since 9.3
      operationId: getWanMagicConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN Magic configuration"
    put:
      tags:
      - WAN Magic
      summary: Update WAN Magic configuration
      description: Since 9.3
      operationId: updateWanMagicWanNetworkGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAN Magic configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN Magic configuration"
  /api/site/{siteName}/wan/load-balancing/configuration:
    get:
      tags:
      - WAN Load Balancing
      summary: Get WAN load balancing configuration
      description: Since 7.1.36
      operationId: getWanLoadBalancingConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN load balancing configuration"
    put:
      tags:
      - WAN Load Balancing
      summary: Update WAN load balancing configuration
      description: Since 7.1.36
      operationId: updateWanLoadBalancingConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAN load balancing configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN load balancing configuration"
  /api/site/{siteName}/wan-slas/{id}:
    get:
      tags:
      - WAN Service Level Agreements
      summary: Get WAN SLA
      operationId: getWanSla
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanSlaDto"
    put:
      tags:
      - WAN Service Level Agreements
      summary: Update a WAN SLA
      operationId: updateWanSla
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WanSlaDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanSlaDto"
    delete:
      tags:
      - WAN Service Level Agreements
      summary: Delete a WAN SLA
      operationId: deleteWanSla
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/visual-programming/virtual-network/{networkId}:
    put:
      tags:
      - Visual Programming
      operationId: updateVirtualNetwork
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisualProgrammingParametersDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisualProgrammingResponseDto"
  /api/site/{siteName}/uid/wlan/{wlanId}:
    put:
      tags:
      - UID
      summary: Update an UID Wireless Network
      operationId: updateWlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: wlanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WLAN Configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WLAN Configuration"
    delete:
      tags:
      - UID
      summary: Delete an UID Wireless Network
      operationId: deleteWlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: wlanId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/trafficrules/{ruleId}:
    put:
      tags:
      - Traffic Rules
      summary: Update Traffic Rule
      operationId: updateTrafficRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficRuleDto"
    delete:
      tags:
      - Traffic Rules
      summary: Delete Traffic Rule
      operationId: deleteTrafficRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/trafficroutes/{routeId}:
    put:
      tags:
      - Traffic Routes
      summary: Update Traffic Route
      operationId: updateTrafficRoute
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: routeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficRouteDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficRouteDto"
    delete:
      tags:
      - Traffic Routes
      summary: Delete Traffic Route
      operationId: deleteTrafficRoute
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: routeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/trafficroutes/{routeId}/enable:
    put:
      tags:
      - Traffic Routes
      summary: Enable Traffic Route
      operationId: enableTrafficRoute
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: routeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/trafficroutes/{routeId}/disable:
    put:
      tags:
      - Traffic Routes
      summary: Disable Traffic Route
      operationId: disableTrafficRoute
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: routeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/system-log/setting:
    get:
      tags:
      - System Log
      summary: Get System log settings
      operationId: getSystemLogSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System Log Settings"
    put:
      tags:
      - System Log
      summary: Update System log settings
      operationId: updateSystemLogSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Alert setting update payload"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System Log Settings"
  /api/site/{siteName}/system-log/critical/{alertId}/mark-as-read:
    put:
      tags:
      - System Log
      summary: Mark as read a single aggregated critical log. It means that marking
        as read should mark also another from the same group
      operationId: markCriticalLogsAsRead
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: alertId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/system-log/critical/mark-all-as-read:
    put:
      tags:
      - System Log
      summary: Mark as read aggregated Critical logs. It means that marking one of
        them as read should mark also another from the same group
      operationId: markAllCriticalLogsAsRead
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/station/{mac}/missing_fingerprint:
    put:
      tags:
      - Fingerprint Override
      operationId: missingFingerprint
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MissingFingerprint"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingFingerprint"
  /api/site/{siteName}/station/{mac}/fingerprint_override:
    put:
      tags:
      - Fingerprint Override
      operationId: overrideFingerprint
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FingerprintOverride"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FingerprintOverride"
    delete:
      tags:
      - Fingerprint Override
      operationId: deleteOverride
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/static-dns/{id}:
    put:
      tags:
      - Static DNS
      operationId: updateStaticDnsEntry
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Static DNS"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Static DNS"
    delete:
      tags:
      - Static DNS
      operationId: deleteStaticDnsEntry
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/stacking/{stackingGroupId}:
    get:
      tags:
      - Stacking
      summary: Get stacking group
      operationId: getStackingGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: stackingGroupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackingGroupDto"
    put:
      tags:
      - Stacking
      summary: Update stacking group
      operationId: updateStackingGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: stackingGroupId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackingGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackingGroupDto"
    delete:
      tags:
      - Stacking
      summary: Delete stacking group
      operationId: deleteStackingGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: stackingGroupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/settings/shortcuts:
    get:
      tags:
      - ShortcutsController
      summary: Get admins shortcut settings
      operationId: getShortcutSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShortcutDto"
    put:
      tags:
      - ShortcutsController
      summary: Update admins shortcut settings
      operationId: putShortcutSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShortcutsDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/radius/profiles/{profileId}:
    put:
      tags:
      - RADIUS
      summary: Update RADIUS profile
      operationId: updateRadiusProfile
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: profileId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RadiusProfileDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RadiusProfileDto"
    delete:
      tags:
      - RADIUS
      summary: Delete RADIUS profile
      operationId: deleteRadiusProfile
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: profileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/qos-rules/{id}:
    get:
      tags:
      - QoS Rules
      summary: Get QoS Rule
      operationId: getQosRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QosRuleDto"
    put:
      tags:
      - QoS Rules
      summary: Update QoS Rule
      operationId: updateQosRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QosRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QosRuleDto"
    delete:
      tags:
      - QoS Rules
      summary: Delete QoS Rule
      operationId: deleteQosRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/qos-rules/batch:
    put:
      tags:
      - QoS Rules
      summary: Batch update QoS Rules
      operationId: batchUpdateQosRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/QosRuleUpdateDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QosRuleDto"
  /api/site/{siteName}/qos-rules/batch-reorder:
    put:
      tags:
      - QoS Rules
      summary: Batch update QoS Rules
      operationId: batchReorderQosRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QosRuleDto"
  /api/site/{siteName}/ospf/router/{id}:
    put:
      tags:
      - OSPF Routing
      summary: Update OSPF Router
      description: Since 8.1
      operationId: updateOspfRouter
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSPF Router"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSPF Router"
    delete:
      tags:
      - OSPF Routing
      summary: Delete OSPF Router
      operationId: deleteOspfRouter
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/next-ai/{category}/mark-all-as-read:
    put:
      tags:
      - NextAi
      summary: Mark as read aggregated next AI logs. It means that marking one of
        them as read should mark also another from the same group
      operationId: Ó00000
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: category
        in: path
        required: true
        schema:
          type: string
          enum:
          - DEVICE
          - CLIENT
          - INTERNET
          - VPN
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
      deprecated: true
  /api/site/{siteName}/next-ai/{alertId}/mark-as-read:
    put:
      tags:
      - NextAi
      summary: Mark as read aggregated next AI logs. It means that marking one of
        them as read should mark also another from the same group
      operationId: return
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: alertId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
      deprecated: true
  /api/site/{siteName}/next-ai/mark-all-as-read:
    put:
      tags:
      - NextAi
      summary: Mark as read aggregated next AI logs. It means that marking one of
        them as read should mark also another from the same group
      operationId: Ô00000
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
      deprecated: true
  /api/site/{siteName}/network-members-group/{id}:
    get:
      tags:
      - NetworkMembersGroup
      summary: Get a network members group by the id
      operationId: getNetworkMembersGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkMembersGroupDto"
    put:
      tags:
      - NetworkMembersGroup
      summary: Update the existing network members group
      operationId: updateNetworkMembersGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkMembersGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkMembersGroupDto"
    delete:
      tags:
      - NetworkMembersGroup
      summary: Delete the network members group
      operationId: deleteNetworkMembersGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/nat:
    get:
      tags:
      - NAT Rules
      summary: Get all NAT rules
      operationId: getNatRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NAT Rules"
    put:
      tags:
      - NAT Rules
      summary: Batch update NAT rules
      operationId: batchUpdateNatRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/BatchNatRuleUpdatePartDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NAT Rules"
    post:
      tags:
      - NAT Rules
      summary: Create a NAT rule
      operationId: createNatRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NAT Rules"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NAT Rules"
  /api/site/{siteName}/nat/{id}:
    get:
      tags:
      - NAT Rules
      summary: Get a single NAT rule
      operationId: getNatRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NAT Rules"
    put:
      tags:
      - NAT Rules
      summary: Update a NAT rule
      operationId: updateNatRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NAT Rules"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NAT Rules"
    delete:
      tags:
      - NAT Rules
      summary: Delete a NAT rule
      operationId: deleteNatRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/micro-segment-group/{id}:
    get:
      tags:
      - MicroSegmentation
      summary: Get a microsegment by the id
      operationId: getMicroSegmentGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MicroSegmentGroupDto"
    put:
      tags:
      - MicroSegmentation
      summary: Update the existing microsegment
      operationId: updateMicroSegmentGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MicroSegmentGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MicroSegmentGroupDto"
    delete:
      tags:
      - MicroSegmentation
      summary: Delete the microsegment
      operationId: deleteMicroSegmentGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/mclag-groups/{mclagGroupId}:
    put:
      tags:
      - MC-LAG Groups
      summary: Update MC-LAG Group
      operationId: updateMcLagGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mclagGroupId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/McLagGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/McLagGroupDto"
    delete:
      tags:
      - MC-LAG Groups
      summary: Delete MC-LAG Group
      operationId: deleteMcLagGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mclagGroupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/lcm/wakeup:
    put:
      tags:
      - LCM
      operationId: wakeUpLcmOnAllDevicesInSite
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/lan/enable-lte-failover:
    put:
      tags:
      - LAN Configuration
      summary: "Batch enable LTE failover for LANs, disable for other LANs"
      operationId: enableLteFailoverForNetworks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableLteFailoverRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/global/config/network:
    get:
      tags:
      - Global Network Config
      summary: Get Global Network config
      description: 7.2.61
      operationId: getGlobalConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalNetworkConfigDto"
    put:
      tags:
      - Global Network Config
      summary: Update Global Network config
      description: 7.2.61
      operationId: updateGlobalConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalNetworkConfigDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalNetworkConfigDto"
  /api/site/{siteName}/floorplan/{planId}:
    put:
      tags:
      - Floor Plan
      summary: Update Floor Plan
      description: Since 8.1.84
      operationId: updateFloorPlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: planId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FloorPlanDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPlanDto"
    delete:
      tags:
      - Floor Plan
      summary: Delete Floor Plan
      description: Since 8.1.87
      operationId: deleteFloorPlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: planId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/floorplan/shape/{shapeId}:
    put:
      tags:
      - Floor Plan
      summary: Update Shape
      description: Since 8.1.87
      operationId: updateShape
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: shapeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FloorPlanShapeDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPlanShapeDto"
    delete:
      tags:
      - Floor Plan
      summary: Delete Shape
      description: Since 8.1.87
      operationId: deleteShape
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: shapeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall/zone/{zoneId}:
    put:
      tags:
      - Firewall zone
      summary: Update Firewall Zone
      operationId: updateFirewallZone
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: zoneId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallZoneRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallZoneDto"
    delete:
      tags:
      - Firewall zone
      summary: Delete Firewall Zone
      operationId: deleteFirewallZone
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: zoneId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall-policies/{id}:
    get:
      tags:
      - Firewall Policies
      summary: Get Firewall Policy
      operationId: getFirewallPolicy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallPolicyDto"
    put:
      tags:
      - Firewall Policies
      summary: Update Firewall Policy
      operationId: updateFirewallPolicy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallPolicyDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallPolicyDto"
    delete:
      tags:
      - Firewall Policies
      summary: Delete Firewall Policy
      operationId: deleteFirewallPolicy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall-policies/predefined/{id}:
    put:
      tags:
      - Firewall Policies
      summary: Update PreDefined Firewall Policy
      operationId: updatePreDefinedFirewallPolicy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreDefinedFirewallRuleUpdateDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreDefinedFirewallRuleUpdateDto"
  /api/site/{siteName}/firewall-policies/batch:
    put:
      tags:
      - Firewall Policies
      summary: Batch update Firewall Policies
      operationId: batchUpdateFirewallPolicies
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/FirewallPolicyUpdateDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallPolicyDto"
  /api/site/{siteName}/firewall-policies/batch-reorder:
    put:
      tags:
      - Firewall Policies
      summary: Reorder Firewall Policies
      operationId: reorderFirewallPolicies
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallPolicyReorderDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallPolicyDto"
  /api/site/{siteName}/firewall-app-blocks/{id}:
    put:
      tags:
      - Simple App Blocking
      summary: Update Simple App Block Rule
      operationId: updateSimpleAppBlockRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Simple App Blocking"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Simple App Blocking"
    delete:
      tags:
      - Simple App Blocking
      summary: Delete Simple App Block Rule
      operationId: deleteSimpleAppBlockRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/device/{mac}/ble:
    put:
      tags:
      - Devices
      summary: Update device BLE settings
      operationId: updateBleSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device BLE settings update payload"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/content-filtering/{id}:
    put:
      tags:
      - Content Filtering
      summary: Update Content Filtering Rule
      operationId: updateContentFilteringRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Content Filtering"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Content Filtering"
    delete:
      tags:
      - Content Filtering
      summary: Delete Content Filtering Rule
      operationId: deleteContentFilteringRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/apgroups/{id}:
    put:
      tags:
      - AP Groups
      summary: Update AP Group
      operationId: updateApGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Access Points Group"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Access Points Group"
    delete:
      tags:
      - AP Groups
      summary: Delete AP Group
      operationId: deleteApGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/acl-rules:
    get:
      tags:
      - Switch ACL Rules
      summary: List ACL Rules
      operationId: listAclRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AclRuleDto"
    put:
      tags:
      - Switch ACL Rules
      summary: Update Selected Properties of ACL Rules in Batch
      operationId: batchUpdateAclRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/BatchAclRuleUpdatePartDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AclRuleDto"
    post:
      tags:
      - Switch ACL Rules
      summary: Create a new ACL Rule
      operationId: createAclRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AclRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AclRuleDto"
  /api/site/{siteName}/acl-rules/{ruleId}:
    put:
      tags:
      - Switch ACL Rules
      summary: Update ACL Rule
      operationId: updateAclRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AclRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AclRuleDto"
    delete:
      tags:
      - Switch ACL Rules
      summary: Delete ACL Rule
      operationId: deleteAclRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/notifications:
    put:
      tags:
      - Notifications
      summary: Update admins notification
      operationId: updateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UI Notification"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UI Notification"
    post:
      tags:
      - Notifications
      summary: Create a notification for admin
      operationId: createNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UI Notification"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UI Notification"
  /api/ucore/support-dump:
    post:
      tags:
      - Support File
      operationId: generateSupportFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerationParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/ucore/devices/update:
    post:
      tags:
      - Device upgrade
      operationId: upgradeDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalDeviceUpdateRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/ucore/devices/update/all:
    post:
      tags:
      - Device upgrade
      operationId: upgradeAllDevice
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
  /api/ucore/backup/import:
    post:
      tags:
      - Backups
      operationId: importBackupFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/ucore/backup/export:
    post:
      tags:
      - Backups
      operationId: generateBackupFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/ucore/backup-archive/import:
    post:
      tags:
      - Backups
      operationId: importBackupArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/ucore/backup-archive/export:
    post:
      tags:
      - Backups
      operationId: generateBackupArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupResponseDto"
  /api/sites/overview:
    post:
      tags:
      - Site Overview
      summary: List sites overview
      description: Since 8.0.1
      operationId: listSitesOverview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site Overview list parameter"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteOverviewListDto"
  /api/site/{siteName}/wireguard/{networkId}/users/batch_delete:
    post:
      tags:
      - Wireguard VPN
      summary: Batch remove Wireguard users
      operationId: batchDeleteUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/wifiman/{clientIp}/feedback:
    post:
      tags:
      - WiFiman
      summary: Send WiFiman Speed Test Feedback
      operationId: sendFeedback
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WifiManFeedbackRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WifiManFeedbackResponse"
  /api/site/{siteName}/wifi-stats/channelization:
    get:
      tags:
      - WiFi Statistics
      summary: WiFi Radio statistics for channelization
      operationId: wifiChannelizationStatistics_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: apMac
        in: query
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WiFi Channelization statistics"
    post:
      tags:
      - WiFi Statistics
      summary: WiFi Radio statistics for channel efficiency optimization
      operationId: wifiChannelizationStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WifiChannelizationStatisticsRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WiFi Channelization statistics"
  /api/site/{siteName}/wan/provider-capabilities:
    post:
      tags:
      - WAN Configuration
      operationId: setActiveWanProviderCapabilities
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAN provider capability update request"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/wan/provider-capabilities/legacy:
    post:
      tags:
      - WAN Configuration
      operationId: setActiveWanProviderCapabilitiesLegacy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAN provider capability update request"
          text/plain:
            schema:
              $ref: "#/components/schemas/WAN provider capability update request"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/wan/magic/speedtest:
    post:
      tags:
      - WAN Magic
      summary: Run WAN Magic Speed test
      description: Since 9.3
      operationId: runWanMagicSpeedTest
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAN Magic configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/wan-slas:
    get:
      tags:
      - WAN Service Level Agreements
      summary: List WAN SLAs
      operationId: listWanSlas
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WanSlaDto"
    post:
      tags:
      - WAN Service Level Agreements
      summary: Create a new WAN SLA
      operationId: createWanSla
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WanSlaDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanSlaDto"
  /api/site/{siteName}/wan-slas/batch-delete:
    post:
      tags:
      - WAN Service Level Agreements
      summary: Batch delete WAN SLAs
      operationId: batchDeleteWanSlas
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/vpn/{networkId}/restart:
    post:
      tags:
      - VPN Connection Status
      summary: Restart VPN Site To Site Connection
      description: Since 7.5.95
      operationId: restartVpnConnection
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/vpn/openvpn/configuration:
    post:
      tags:
      - Open VPN
      summary: Generate OpenVPN configuration
      description: Since 7.4.61
      operationId: generateOpenVpnConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenVpnConfigurationRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/vpn/openvpn/certificates:
    post:
      tags:
      - Open VPN
      summary: Generate OpenVPN Certificates
      description: Since 7.4.61
      operationId: generateOpenVpnCertificates
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenVpnCertificatesDto"
  /api/site/{siteName}/visual-programming/virtual-network:
    post:
      tags:
      - Visual Programming
      operationId: createVirtualNetwork
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisualProgrammingParametersDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisualProgrammingResponseDto"
  /api/site/{siteName}/uid/wlan:
    get:
      tags:
      - UID
      summary: Get Wireless Networks
      operationId: getUidWiFiNetworks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WLAN Configuration"
    post:
      tags:
      - UID
      summary: Create an UID Wireless Network
      operationId: createWlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WLAN Configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WLAN Configuration"
  /api/site/{siteName}/uid/vpn-server:
    get:
      tags:
      - UID
      summary: Get UID VPN Server Configuration
      operationId: getVpnConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UID VPN Server Configuration"
    post:
      tags:
      - UID
      summary: Create or update UID VPN Server Configuration
      operationId: updateVpnConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UID VPN Server Configuration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UID VPN Server Configuration"
    delete:
      tags:
      - UID
      summary: Delete UID VPN Server Configuration
      operationId: deleteVpnConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/uid/vpn-server/kick/{username}:
    post:
      tags:
      - UID
      summary: Disconnect UID VPN Client
      operationId: disconnectVpnClient
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "202":
          description: Accepted
  /api/site/{siteName}/uid/radius-server:
    get:
      tags:
      - UID
      summary: Get default (UDAPI) RADIUS Server Configuration
      operationId: getDefaultRadiusConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UidRadiusConfiguration"
    post:
      tags:
      - UID
      summary: Update default (UDAPI) RADIUS Server Configuration
      operationId: updateDefaultRadiusConfiguration
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UidRadiusConfiguration"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UidRadiusConfiguration"
  /api/site/{siteName}/trafficrules:
    get:
      tags:
      - Traffic Rules
      summary: List Traffic Rules
      operationId: listTrafficRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TrafficRuleDto"
    post:
      tags:
      - Traffic Rules
      summary: Create a new Traffic Rule
      operationId: createTrafficRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficRuleDto"
  /api/site/{siteName}/trafficroutes:
    get:
      tags:
      - Traffic Routes
      summary: List Traffic Routes
      operationId: listTrafficRoutes
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TrafficRouteDto"
    post:
      tags:
      - Traffic Routes
      summary: Create a new Traffic Routes
      operationId: createTrafficRoute
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficRouteDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficRouteDto"
  /api/site/{siteName}/traffic-flows:
    post:
      tags:
      - Traffic Flow
      summary: List Traffic Flows
      description: Since 9.1.64
      operationId: listTrafficFlows
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficFlowParametersDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Traffic Flow list with paging info"
  /api/site/{siteName}/traffic-flows/export:
    post:
      tags:
      - Traffic Flow
      summary: Export Traffic Flows in CSV format
      description: Since 9.1.93
      operationId: exportTrafficFlows
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrafficFlowParametersDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseBodyEmitter"
  /api/site/{siteName}/teleport/token:
    get:
      tags:
      - Teleport
      summary: Return paginated list of Teleport active short-term tokens
      description: Since 7.1.2
      operationId: searchActiveShortTermTokens
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: listParameterDto
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ModifiableTeleportTokenListParameter"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teleport token list with paging info"
      deprecated: true
    post:
      tags:
      - Teleport
      summary: Create new Teleport short-term token
      operationId: createNewToken
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeleportTokenDto"
  /api/site/{siteName}/teleport/invitation-history:
    get:
      tags:
      - Teleport
      summary: Return paginated list of Teleport invitation history
      description: Since 7.2.67
      operationId: searchInvitationHistory
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: listParameterDto
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ModifiableTeleportTokenListParameter"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teleport invitation history list with\
                  \ paging info"
    post:
      tags:
      - Teleport
      summary: Return paginated list of Teleport invitation history
      description: Since 8.0.22
      operationId: postSearchInvitationHistory
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifiableTeleportTokenListParameter"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teleport invitation history list with\
                  \ paging info"
  /api/site/{siteName}/teleport/disconnect-client/{clientId}:
    post:
      tags:
      - Teleport
      summary: Disconnect Teleport client
      description: Since 7.1.2
      operationId: disconnectClient
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/teleport/access-request:
    post:
      tags:
      - Teleport
      summary: Create new Teleport long-term token
      description: Since 7.2.6
      operationId: createNewLongTermTokenForOwner
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeleportAccessRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeleportAccessResponseDto"
  /api/site/{siteName}/system-log/vpn-alert:
    post:
      tags:
      - Alerts
      operationId: listVpnAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VpnAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/update-alert:
    post:
      tags:
      - Alerts
      operationId: listUpdateAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/triggers:
    post:
      tags:
      - Trigger Log
      summary: List all Triggers
      operationId: listTriggerLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerLogListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerLogListDto"
  /api/site/{siteName}/system-log/threats:
    post:
      tags:
      - Threat System Logs
      operationId: getThreatLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Threat Log search parameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/E"
      deprecated: true
  /api/site/{siteName}/system-log/threat-alert:
    post:
      tags:
      - Alerts
      operationId: listThreatAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThreatAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/system-critical-alert:
    post:
      tags:
      - Alerts
      operationId: listSystemCriticalAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemCriticalAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
      deprecated: true
  /api/site/{siteName}/system-log/next-ai-alert:
    post:
      tags:
      - Alerts
      operationId: listNextAiAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NextAiAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/network-ai/logs:
    post:
      tags:
      - Network AI System Logs
      operationId: getNetworkAiLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Threat Log search parameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/network-ai/clear-all:
    post:
      tags:
      - Network AI System Logs
      operationId: clearAllNetworkAiLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/system-log/device-alert:
    post:
      tags:
      - Alerts
      operationId: listDeviceAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/critical:
    post:
      tags:
      - System Log
      operationId: listCriticalSystemLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriticalSystemLogListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AlertDto"
  /api/site/{siteName}/system-log/client-alert:
    post:
      tags:
      - Alerts
      operationId: listClientAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientAlertListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/ap-logs:
    post:
      tags:
      - Device Log
      summary: List all AP logs
      operationId: listApLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApLogListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLogDtoList"
      deprecated: true
  /api/site/{siteName}/system-log/all:
    post:
      tags:
      - System Log
      operationId: listAllSystemLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllSystemLogListParameterDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
  /api/site/{siteName}/system-log/admin-activity:
    post:
      tags:
      - Admin Activity Log
      summary: List Admin Activity log
      description: Since 7.5.119
      operationId: listAdminActivity
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Admin activity log list parameter"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActivityLogListDto"
  /api/site/{siteName}/system-log/admin-access:
    post:
      tags:
      - Admin Activity Log
      summary: List Admin Access log
      description: Since 7.2.42
      operationId: listAdminAccess
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Admin activity log list parameter"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActivityLogListDto"
      deprecated: true
  /api/site/{siteName}/station/{mac}/wifi_experience/incorrect:
    post:
      tags:
      - WiFi Experience
      summary: Report wifi issues for client
      operationId: incorrectStationScore
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncorrectWifiExperience"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectWifiExperience"
  /api/site/{siteName}/static-dns:
    get:
      tags:
      - Static DNS
      operationId: getStaticDnsEntries
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Static DNS"
    post:
      tags:
      - Static DNS
      operationId: createStaticDnsEntry
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Static DNS"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Static DNS"
  /api/site/{siteName}/stacking:
    get:
      tags:
      - Stacking
      summary: List stacking groups
      operationId: listStackingGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StackingGroupDto"
    post:
      tags:
      - Stacking
      summary: Create a new stack group
      operationId: createStackingGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackingGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackingGroupDto"
  /api/site/{siteName}/smart-subnet:
    get:
      tags:
      - smart-subnet-controller
      summary: Return learned subnet from user's existing network during initial setup
      description: Since 7.2.52
      operationId: findPreviousSubnet
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviousSubnetDto"
    post:
      tags:
      - smart-subnet-controller
      summary: Set subnet on default LAN network as smart detected
      description: Since 7.2.52
      operationId: setPreviousSubnet
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmartSubnetRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/shadowmode/rollback:
    post:
      tags:
      - Console Shadow Mode
      summary: Initiate shadow mode rollback
      description: Since 8.1.112
      operationId: rollback
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/shadowmode/override:
    post:
      tags:
      - Console Shadow Mode
      summary: Set shadow mode overrides
      description: Since 8.1.105
      operationId: overrideSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShadowModeOverrideDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/shadowmode/managed/rollback:
    post:
      tags:
      - Console Shadow Mode
      operationId: rollbackManaged
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Managed Shadow Mode"
  /api/site/{siteName}/shadowmode/managed/complete-adoption:
    post:
      tags:
      - Console Shadow Mode
      operationId: completeSetup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Managed Shadow Mode"
  /api/site/{siteName}/shadowmode/managed/begin-adoption:
    post:
      tags:
      - Console Shadow Mode
      operationId: beginSetup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Managed Shadow Mode"
  /api/site/{siteName}/settings/mgmt/direct_connect/enable:
    post:
      tags:
      - Management Setting
      summary: Enable direct remote connection
      description: Since 7.4.135
      operationId: enableDirectRemoteConnection
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/settings/mgmt/direct_connect/disable:
    post:
      tags:
      - Management Setting
      summary: Disable direct remote connection
      description: Since 7.4.135
      operationId: disableDirectRemoteConnection
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/settings/mgmt/device_upgrade/enable:
    post:
      tags:
      - Management Setting
      summary: Enable device auto upgrade
      description: Since 6.6.39
      operationId: deviceAutoUpgradeEnable
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enable device auto upgrade setting update\
                \ payload"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/settings/mgmt/device_upgrade/disable:
    post:
      tags:
      - Management Setting
      summary: Disable device auto upgrade
      description: Since 7.0.6
      operationId: deviceAutoUpgradeDisable
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/settings/guest-access/reset:
    post:
      tags:
      - Guest Access Setting
      summary: Reset Guest Access settings to defaults
      description: Since 7.4.70
      operationId: resetToDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
  /api/site/{siteName}/radius/users/batch_update:
    post:
      tags:
      - RADIUS
      summary: Batch update RADIUS users
      operationId: batchUpdateUsers_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RadiusUserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RadiusUserDto"
  /api/site/{siteName}/radius/users/batch_delete:
    post:
      tags:
      - RADIUS
      summary: Batch remove RADIUS users
      operationId: batchDeleteUsers_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/radius/users/batch_add:
    post:
      tags:
      - RADIUS
      summary: Batch add RADIUS users
      operationId: batchAddUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RadiusUserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RadiusUserDto"
  /api/site/{siteName}/radius/profiles:
    get:
      tags:
      - RADIUS
      summary: List RADIUS profiles
      operationId: listRadiusProfiles
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RadiusProfileDto"
    post:
      tags:
      - RADIUS
      summary: Create RADIUS profile
      operationId: createRadiusProfile
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RadiusProfileDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RadiusProfileDto"
  /api/site/{siteName}/radio-ai/optimize/{calculationId}:
    post:
      tags:
      - WiFi Radio AI
      summary: Apply previous optimization preview by giving calculation id
      operationId: applyRadioAi
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: calculationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/radio-ai/optimize/preview:
    post:
      tags:
      - WiFi Radio AI
      summary: "Run optimization without actually applying the result, the result\
        \ will be sent through websocket"
      operationId: previewRadioAi
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RadioAiRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/qos-rules:
    get:
      tags:
      - QoS Rules
      summary: List QoS Rules
      operationId: listQosRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QosRuleDto"
    post:
      tags:
      - QoS Rules
      summary: Create a new QoS Rule
      operationId: createQosRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QosRuleDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QosRuleDto"
  /api/site/{siteName}/qos-rules/batch-delete:
    post:
      tags:
      - QoS Rules
      summary: Batch delete QoS Rules
      operationId: batchDeleteQosRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/port-forward/batch-delete:
    post:
      tags:
      - Port forward rules
      summary: Batch remove Port forwards
      operationId: batchDeletePortForwards
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/ping-stop/{mac}:
    post:
      tags:
      - Ping Test
      operationId: pingStop
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/ping-start/{mac}:
    post:
      tags:
      - Ping Test
      operationId: pingStart
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/pcap-upload/{mac}:
    post:
      tags:
      - Packet Capture
      summary: Upload packet capture file to the NETWORK server
      operationId: uploadCapture
      parameters:
      - name: siteName
        in: path
        description: Site Name
        required: true
        schema:
          description: Site Name
      - name: mac
        in: path
        description: MAC address of the captured device
        required: true
        schema:
          description: MAC address of the captured device
          example: 00:11:22:33:44:55
        example: 00:11:22:33:44:55
      requestBody:
        content:
          application/json:
            schema:
              description: Result of Packet Capture
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
  /api/site/{siteName}/pcap-stop/{mac}:
    post:
      tags:
      - Packet Capture
      summary: Stop packet capture on the device
      operationId: stopCapture
      parameters:
      - name: siteName
        in: path
        description: Site Name
        required: true
        schema:
          description: Site Name
      - name: mac
        in: path
        description: MAC address of the capturing device
        required: true
        schema:
          description: MAC address of the capturing device
          example: 00:11:22:33:44:55
        example: 00:11:22:33:44:55
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/pcap-start:
    post:
      tags:
      - Packet Capture
      summary: Run packet capture on the device
      operationId: startCapture
      parameters:
      - name: siteName
        in: path
        description: Site Name
        required: true
        schema:
          description: Site Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Packet Capture Start Request"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/ospf/router:
    get:
      tags:
      - OSPF Routing
      summary: Get OSPF Routers
      description: Since 8.1
      operationId: getOspfRouters
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSPF Router"
    post:
      tags:
      - OSPF Routing
      summary: Create OSPF Router
      description: Since 8.1
      operationId: createOspfRouter
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSPF Router"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSPF Router"
  /api/site/{siteName}/network/generate-vlans:
    post:
      tags:
      - Network management
      operationId: generateVlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VlanGeneratorRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VlanGeneratorResponseDto"
  /api/site/{siteName}/network-members-group:
    post:
      tags:
      - NetworkMembersGroup
      summary: Create a new network members group
      operationId: createNetworkMembersGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkMembersGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkMembersGroupDto"
  /api/site/{siteName}/missing_fingerprint:
    post:
      tags:
      - Fingerprint Override
      operationId: missingFingerprintBatch
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaginatedResponseMissingFingerprint"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseMissingFingerprint"
  /api/site/{siteName}/micro-segment-group:
    post:
      tags:
      - MicroSegmentation
      summary: Create a new microsegment
      operationId: createMicroSegmentGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MicroSegmentGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MicroSegmentGroupDto"
  /api/site/{siteName}/mclag-groups:
    get:
      tags:
      - MC-LAG Groups
      summary: List MC-LAG Groups
      operationId: listMcLagGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/McLagGroupDto"
    post:
      tags:
      - MC-LAG Groups
      summary: Create a new MC-LAG Group
      operationId: createMcLagGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/McLagGroupDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/McLagGroupDto"
  /api/site/{siteName}/mclag-groups/batch-delete:
    post:
      tags:
      - MC-LAG Groups
      summary: Delete MC-LAG Groups in Batch
      operationId: deleteMcLagGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/loop-detection/recover-all-ports:
    post:
      tags:
      - Network Loop Detection Info
      operationId: recoverAllKeepaliveDetectionPorts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/lan/migrate-to-layer3/{networkConfId}:
    post:
      tags:
      - LAN Configuration
      summary: Migrate Local Network to Layer3 Network
      description: Since 7.2.45
      operationId: migrateNetworkToLayer3
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkConfId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MigrateNetworkToLayer3Request"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enriched LAN Configuration"
  /api/site/{siteName}/insights/filtering/overview:
    post:
      tags:
      - Filtering Insights
      summary: Get time-series statistics for Insights Filtering Overview
      description: Since 7.3.40
      operationId: getInsightsFilteringOverview
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilteringInsightsOverviewQueryParams"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filtering Insights statistics"
  /api/site/{siteName}/floorplan:
    get:
      tags:
      - Floor Plan
      summary: Get Floor Plans
      description: Since 8.1.87
      operationId: getFloorPlans
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FloorPlanDto"
    post:
      tags:
      - Floor Plan
      summary: Create Floor Plan
      description: Since 8.1.84
      operationId: createFloorPlan
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FloorPlanDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPlanDto"
  /api/site/{siteName}/floorplan/shape:
    get:
      tags:
      - Floor Plan
      summary: Get Shapes
      description: Since 8.1.84
      operationId: getAllShapes
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FloorPlanShapeDto"
    post:
      tags:
      - Floor Plan
      summary: Create Shape
      description: Since 8.1.87
      operationId: createShape
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FloorPlanShapeDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPlanShapeDto"
  /api/site/{siteName}/floorplan/shape/batch:
    post:
      tags:
      - Floor Plan
      summary: Batch create or update shapes
      description: 8.1.91
      operationId: batchUpdate
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FloorPlanShapeBatchDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPlanShapeBatchDto"
  /api/site/{siteName}/firewall/zone:
    get:
      tags:
      - Firewall zone
      summary: List Firewall Zones
      operationId: listFirewallZones
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallZoneDto"
    post:
      tags:
      - Firewall zone
      summary: Create Firewall Zone
      operationId: createFirewallZone
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallZoneRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallZoneDto"
  /api/site/{siteName}/firewall/zone/batch-delete:
    post:
      tags:
      - Firewall zone
      summary: Batch delete Firewall Zone
      operationId: batchDeleteFirewallZones
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall/migrate:
    post:
      tags:
      - Zone-Based Firewall Migration
      summary: Migrate Firewall to Zone-Based
      operationId: migrate
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall-rules/batch-delete:
    post:
      tags:
      - Firewall Rules
      summary: Batch remove Firewall rules
      operationId: batchDeleteFirewallRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/firewall-policies:
    get:
      tags:
      - Firewall Policies
      summary: List Firewall Policies
      operationId: listFirewallPolicies
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallPolicyDto"
    post:
      tags:
      - Firewall Policies
      summary: Create a new Firewall Policy
      operationId: createFirewallPolicy
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallPolicyDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallPolicyDto"
  /api/site/{siteName}/firewall-policies/batch-delete:
    post:
      tags:
      - Firewall Policies
      summary: Batch delete Firewall Policies
      operationId: batchDeleteFirewallPolicies
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/firewall-app-blocks:
    get:
      tags:
      - Simple App Blocking
      summary: Get all Simple App Blocking rules
      operationId: getSimpleAppBlockRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Simple App Blocking"
    post:
      tags:
      - Simple App Blocking
      summary: Update all Simple App Blocking rules
      operationId: updateSimpleAppBlockRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Simple App Blocking"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Simple App Blocking"
  /api/site/{siteName}/firewall-app-blocks/create:
    post:
      tags:
      - Simple App Blocking
      summary: Create Simple App Block Rule
      operationId: createSimpleAppBlockRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Simple App Blocking"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Simple App Blocking"
  /api/site/{siteName}/fingerprint_override:
    post:
      tags:
      - Fingerprint Override
      operationId: overrideFingerprintBatch
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaginatedResponseFingerprintOverride"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseFingerprintOverride"
  /api/site/{siteName}/fingerprint/assets:
    post:
      tags:
      - Fingerprint Assets
      operationId: requestAwsS3FingerprintAssetUploadUrl
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FingerprintAssetRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FingerprintAssetResponse"
  /api/site/{siteName}/dhcp/resolve-wan-subnet-conflict:
    post:
      tags:
      - Resolve subnet conflict
      summary: Resolve wan/lan subnet conflict
      operationId: resolveWanSubnetConflict
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WanLanConflictRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanLanConflictResponseDto"
  /api/site/{siteName}/dhcp-import:
    post:
      tags:
      - Dhcp Leases
      operationId: importDhcp
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/DHCP Leases"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DHCP Leases"
  /api/site/{siteName}/device/{mac}/wifi_experience/incorrect:
    post:
      tags:
      - WiFi Experience
      summary: Report wifi issues for Access Point
      operationId: incorrectDeviceScore
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncorrectWifiExperience"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectWifiExperience"
  /api/site/{siteName}/device/{mac}/gateway/adopt-as-secondary:
    post:
      tags:
      - Devices
      summary: Adopt gateway device as secondary one
      operationId: adoptSecondaryGateway
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/device/{deviceMac}/replace:
    post:
      tags:
      - Device management
      operationId: replaceDevice
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      - name: replacementDeviceMac
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceDeviceResultDto"
    delete:
      tags:
      - Device management
      operationId: unsetDeviceReplacement
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "202":
          description: Accepted
  /api/site/{siteName}/device/{deviceMac}/battery/update:
    post:
      tags:
      - Batteries
      summary: Upgrade batteries that are plugged into the host device
      operationId: upgradeBatteries
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatteryUpgradeActionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/device/{deviceMac}/battery/action:
    post:
      tags:
      - Batteries
      summary: Send an action command to batteries that are plugged into the host
        device device
      operationId: sendActionCommand
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatteryActionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/content-filtering/create:
    post:
      tags:
      - Content Filtering
      summary: Create Content Filtering Rule
      operationId: createContentFilteringRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Content Filtering"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Content Filtering"
  /api/site/{siteName}/content-filtering/bulk:
    post:
      tags:
      - Content Filtering
      summary: Update all Simple App Blocking rules
      operationId: updateContentFilteringRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Content Filtering"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Content Filtering"
  /api/site/{siteName}/clients/metadata:
    post:
      tags:
      - Clients
      summary: Get UX metadata of clients
      operationId: listClientMetadata
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/super"
  /api/site/{siteName}/client/{clientMac}/experience/incorrect:
    post:
      tags:
      - WiFi Experience
      summary: Report wifi issues for client by MAC
      operationId: incorrectStationScoreByClientMac
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncorrectWifiExperience"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectWifiExperience"
  /api/site/{siteName}/client/{clientIp}/wifi_experience/incorrect:
    post:
      tags:
      - WiFi Experience
      summary: Report wifi issues for client by clients local IP
      operationId: incorrectStationScoreByClientIp
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncorrectWifiExperience"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectWifiExperience"
  /api/site/{siteName}/bgp/config:
    get:
      tags:
      - BGP
      operationId: getGatewayBgpConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BGP"
    post:
      tags:
      - BGP
      summary: Upload Gateway BGP config
      operationId: createOrUpdateGatewayBgpConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BGP"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BGP"
    delete:
      tags:
      - BGP
      summary: Delete Gateway BGP config
      operationId: deleteGatewayBgpConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/bgp/config/{deviceMac}:
    post:
      tags:
      - BGP
      summary: Upload Device BGP config
      operationId: createOrUpdateDeviceBgpConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BGP"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BGP"
    delete:
      tags:
      - BGP
      summary: Delete Device BGP config
      operationId: deleteDeviceBgpConfig
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/app-traffic-rate:
    post:
      tags:
      - Traffic Overview
      summary: Get historical traffic usage
      description: Since 7.1.55
      operationId: getHistoricalSiteTrafficUsageByApps
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: includeUnidentified
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HistoricalDpiQueryParameters"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoricalTrafficUsageDto"
  /api/site/{siteName}/apgroups:
    get:
      tags:
      - AP Groups
      summary: List AP groups
      operationId: listApGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Access Points Group"
    post:
      tags:
      - AP Groups
      operationId: createApGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Access Points Group"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Access Points Group"
  /api/site/{siteName}/alias:
    post:
      tags:
      - List Device and Clients aliases
      summary: Get map of MAC to existing device or client name.
      description: Since 7.1.54
      operationId: getAliases
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestedMacsDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Map of MAC to Alias"
  /api/site/{siteName}/acl-rules/batch-delete:
    post:
      tags:
      - Switch ACL Rules
      summary: Delete ACL Rules in Batch
      operationId: deleteAclRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/notifications/dismiss-global:
    post:
      tags:
      - Notifications
      summary: Dismiss all related notifications
      operationId: dismissRelatedNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UI Notification"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UI Notification"
  /api/mfa/sms/{id}/send:
    post:
      tags:
      - Multi-Factor Authentication
      summary: Send MFA SMS
      description: Since 7.0.7
      operationId: sendMfaSms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: UBIC_2FA
        in: cookie
        required: false
        schema:
          type: string
      - name: User-Agent
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MfaRequestDto"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/mfa/push/{id}/send:
    post:
      tags:
      - Multi-Factor Authentication
      summary: Send MFA Push
      description: Since 7.0.7
      operationId: sendMfaPush
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: UBIC_2FA
        in: cookie
        required: false
        schema:
          type: string
      - name: User-Agent
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MfaRequestDto"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MfaPushResponseDto"
  /api/mfa/email/{id}/send:
    post:
      tags:
      - Multi-Factor Authentication
      summary: Send MFA Email
      description: Since 7.0.7
      operationId: sendMfaEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: UBIC_2FA
        in: cookie
        required: false
        schema:
          type: string
      - name: User-Agent
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MfaRequestDto"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/magicsitetositevpn/speedtest/stop:
    post:
      tags:
      - Magic Site-to-Site VPN
      summary: Stop Speed Test for Magic Site-to-Site VPN connection
      operationId: stopSpeedTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/magicsitetositevpn/speedtest/start:
    post:
      tags:
      - Magic Site-to-Site VPN
      summary: Start Speed Test for Magic Site-to-Site VPN connection
      operationId: startSpeedTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/cloud/application/event/{eventName}:
    post:
      tags:
      - Proxy for Cloud Application Events
      operationId: acceptCloudApplicationEvent
      parameters:
      - name: eventName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonNode"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/alarm-manager/publish-log:
    post:
      tags:
      - alarm-manager-action-controller
      operationId: publishLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlarmManagerNotifyActionEvent"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/alarm-manager/modify-alarms:
    post:
      tags:
      - alarm-manager-rules-controller
      operationId: modifyAlarms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlarmManagerAlarmModify"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /docs/system-log/sections:
    get:
      tags:
      - System Log Docs
      summary: Get Admin Change Log sections
      operationId: getAdminChangeLogSections
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /docs/system-log/messages:
    get:
      tags:
      - System Log Docs
      summary: Get System Log Messages
      operationId: getSystemLogMessages
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /docs/system-log/events:
    get:
      tags:
      - System Log Docs
      summary: Get System Log events
      operationId: getSystemLogEvents
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/vpn/auto/sites:
    get:
      tags:
      - Site-to-Site Auto IPSec
      summary: Get compatible sites for Auto IPSec
      description: Since 8.0.2
      operationId: listCompatibleSites
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MinimalSiteDto"
  /api/unifi-core/general-info:
    get:
      tags:
      - UniFi Core Info
      summary: Get UniFi Core general info
      operationId: getUcoreInfo
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UniFi-Core API info"
  /api/uisp/status:
    get:
      tags:
      - UISP
      summary: UISP status
      description: Since 7.4.145
      operationId: getIspStatus
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UispStatusDto"
  /api/timezones:
    get:
      tags:
      - Timezone
      operationId: getTimezones
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Timezone"
  /api/system/event/{eventType}/first:
    get:
      tags:
      - Persisted System Events
      summary: Find the (optional) first event of the given type
      operationId: findFirstEventByType
      parameters:
      - name: eventType
        in: path
        required: true
        schema:
          type: string
          enum:
          - SETUP_COMPLETED
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersistedSystemEvent"
  /api/sites:
    get:
      tags:
      - Site
      summary: List all sites
      description: Since 7.4.105
      operationId: listAllSites
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MinimalSiteDto"
  /api/site/{siteName}/{mac}/acl-entry-count:
    get:
      tags:
      - Switch ACL Rules
      summary: ACL Entry Count
      operationId: getAclEntryCount
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AclEntryCount"
  /api/site/{siteName}/wlan/{wlanId}/statistics/hourly:
    get:
      tags:
      - WLAN Configuration
      operationId: getWlanStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: wlanId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WlanStatisticsPeriodDto"
  /api/site/{siteName}/wlan/enriched-configuration:
    get:
      tags:
      - WLAN Configuration
      operationId: getWlanConfigurations
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrichedWlanConfiguration"
  /api/site/{siteName}/wlan/defaults:
    get:
      tags:
      - WLAN Configuration
      summary: Get default WiFi settings.
      description: Since 6.6.17
      operationId: getDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WLAN Configuration"
  /api/site/{siteName}/wlan-capabilities:
    get:
      tags:
      - WLAN Configuration
      operationId: getWlanCapabilities
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WlanCapabilitiesDto"
  /api/site/{siteName}/wireguard/{networkId}/users:
    get:
      tags:
      - Wireguard VPN
      summary: List Wireguard users
      operationId: listWireguardUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WireguardUserDto"
  /api/site/{siteName}/wireguard/users:
    get:
      tags:
      - Wireguard VPN
      summary: List Wireguard users
      operationId: listWireguardUsers_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WireguardUserDto"
  /api/site/{siteName}/wireguard/users/existing-subnets:
    get:
      tags:
      - Wireguard VPN
      summary: List all used subnets that would conflict with new WireGuard Client
        Allowed IP assignment
      operationId: getWireguardUsersExistingSubnets
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WireguardSubnetDto"
  /api/site/{siteName}/wifiman:
    get:
      tags:
      - WiFiman
      summary: Get WiFiman Feedback
      operationId: getFeedbackList
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WifiManFeedback"
  /api/site/{siteName}/wifiman/{clientIp}:
    get:
      tags:
      - WiFiman
      summary: Get WiFiman Client Info
      operationId: getClientInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WifiManClientInfo"
  /api/site/{siteName}/wifiman/{clientIp}/devices:
    get:
      tags:
      - WiFiman
      summary: Get list of connected devices and clients
      operationId: getDevices
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WifiManDevice"
  /api/site/{siteName}/wifi-stats/radios:
    get:
      tags:
      - WiFi Statistics
      summary: WiFi Radio statistics
      description: Since 7.6.24
      operationId: wifiRadioStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WiFi Radio statistics"
  /api/site/{siteName}/wifi-stats/details:
    get:
      tags:
      - WiFi Statistics
      summary: WiFi Client statistics
      description: Since 7.1
      operationId: wifiClientStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: apMac
        in: query
        required: false
        schema:
          type: string
      - name: Size of top user list returned
        in: query
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WiFi client statistics"
  /api/site/{siteName}/wifi-stats/aps:
    get:
      tags:
      - WiFi Statistics
      summary: WiFi Access Point statistics
      description: Since 7.3
      operationId: wifiApStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: Size of top APs list returned
        in: query
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WiFi AP statistics"
  /api/site/{siteName}/wifi-connectivity:
    get:
      tags:
      - WiFi Connectivity
      summary: Get WiFi connectivity statistics
      description: Since 7.2.0
      operationId: wifiConnectivity
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: Filter start in unix epoch seconds
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          default: Current timestamp
      - name: clientMac
        in: query
        required: false
        schema:
          type: string
      - name: apMac
        in: query
        required: false
        schema:
          type: string
      - name: radioBand
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - na
          - ng
          - 6e
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wifi Connectivity Statistics"
  /api/site/{siteName}/warnings:
    get:
      tags:
      - Warnings
      summary: Get all ongoing warnings
      description: Since 7.1.46
      operationId: getAllWarnings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WarningsDto"
  /api/site/{siteName}/wan/{wanNetworkGroup}/isp-status:
    get:
      tags:
      - Internet Service Provider
      summary: ISP status with specific WAN network group
      description: Since 9.1
      operationId: getIspStatus_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: wanNetworkGroup
        in: path
        required: true
        schema:
          type: string
      - name: include_isp_alerts
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IspStatusDto"
  /api/site/{siteName}/wan/networkgroups:
    get:
      tags:
      - WAN Network Group
      summary: Get Current WAN Network Group in site
      operationId: getWanNetworkGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: uptime
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanNetworkGroupListDto"
  /api/site/{siteName}/wan/magic/subscription:
    get:
      tags:
      - WAN Magic
      summary: Get WAN Magic subscription
      description: Since 9.3
      operationId: getWanMagicSubscription
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN Magic Subscription"
  /api/site/{siteName}/wan/load-balancing/status:
    get:
      tags:
      - WAN Load Balancing
      summary: Get WAN load balancing status
      description: Since 7.1.36
      operationId: getWanLoadBalancingStatus
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN load balancing status"
  /api/site/{siteName}/wan/enriched-configuration:
    get:
      tags:
      - WAN Configuration
      operationId: getConfigurations
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enriched WAN Configuration"
  /api/site/{siteName}/wan/defaults:
    get:
      tags:
      - WAN Configuration
      summary: Get default WAN Network settings
      description: Since 6.6.27
      operationId: getDefaults_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAN Configuration"
  /api/site/{siteName}/wan/ddns:
    get:
      tags:
      - WAN DynamicDns
      summary: Get compatible WAN Dynamic DNS list
      description: Since 8.0.7
      operationId: listCompatibleDynamicDns
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WanDynamicDnsDto"
  /api/site/{siteName}/vpn/openvpn/{networkId}/configuration:
    get:
      tags:
      - Open VPN
      summary: Generate OpenVPN configuration
      description: Since 7.4.61
      operationId: generateOpenVpnConfiguration_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/site/{siteName}/vpn/l2tp/defaults:
    get:
      tags:
      - VPN Configuration
      summary: Get default L2TP VPN Network settings
      description: Since 7.0.11
      operationId: getL2tpServerDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/L2TP VPN Configuration"
  /api/site/{siteName}/vpn/connections:
    get:
      tags:
      - VPN Connection Status
      summary: Get VPN connections
      description: Since 7.5.95
      operationId: getVpnConnections
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPN connections"
  /api/site/{siteName}/vpn/client-connections:
    get:
      tags:
      - VPN Connection Status
      summary: Get VPN Client connections
      description: Since 7.2.52
      operationId: getVpnClientConnections
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPN connections"
      deprecated: true
  /api/site/{siteName}/vendor-ids:
    get:
      tags:
      - Dhcp Leases
      operationId: getVendorIds
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/site/{siteName}/utilization/time_range:
    get:
      tags:
      - Utilization Info
      summary: Get system utilization info for time range
      operationId: getTimeRangedStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utilization information"
  /api/site/{siteName}/utilization/last_days:
    get:
      tags:
      - Utilization Info
      summary: Get system utilization info for given last days
      operationId: getLastDaysStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: days
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
          maximum: 31
          minimum: 1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utilization information"
  /api/site/{siteName}/uid/client-info/{clientMac}:
    get:
      tags:
      - UID
      summary: Get UID WiFi Client Info
      operationId: getClientInfo_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UidClientInfoDto"
  /api/site/{siteName}/trafficrule/{ruleId}:
    get:
      tags:
      - Traffic Rules
      summary: Get Traffic Rule
      operationId: getTrafficRule
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficRuleDto"
  /api/site/{siteName}/traffic:
    get:
      tags:
      - Traffic Overview
      summary: Get traffic stats
      operationId: getSiteTraffic
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: includeUnidentified
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficTotalUsageStatsDto"
  /api/site/{siteName}/traffic/{mac}:
    get:
      tags:
      - Traffic Overview
      summary: Get traffic stats for a specific client
      operationId: getSiteTrafficByMac
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: includeUnidentified
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficClientStatsDto"
  /api/site/{siteName}/traffic-rate:
    get:
      tags:
      - Traffic Overview
      summary: Get historical traffic usage
      description: Since 7.1.55
      operationId: getHistoricalSiteTrafficUsage
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: includeUnidentified
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoricalTrafficUsageDto"
  /api/site/{siteName}/traffic-flows/{id}:
    get:
      tags:
      - Traffic Flow
      summary: Get Traffic Flow by ID
      description: Since 9.2.60
      operationId: getTrafficFlowById
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficFlowDto"
  /api/site/{siteName}/traffic-flows/filter-data:
    get:
      tags:
      - Traffic Flow
      summary: Get Traffic Flows filter data
      description: Since 9.1.100
      operationId: getTrafficFlowFilterData
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: parameters
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/TrafficFlowFilterDataParametersDto"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficFlowFilterDataDto"
  /api/site/{siteName}/traffic-flows/alarm/{alarmId}:
    get:
      tags:
      - Traffic Flow
      summary: Get Traffic Flow by IPS alarm ID
      description: Since 9.1.98
      operationId: getTrafficFlowByAlarmId
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: alarmId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficFlowDto"
  /api/site/{siteName}/traffic-flow-latest-statistics:
    get:
      tags:
      - Traffic Flow
      summary: Get traffic flow stats for the last 1H/1D/1W/1M
      description: Since 9.1.82
      operationId: getTrafficFlowStats
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: period
        in: query
        required: true
        schema:
          type: string
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
      - name: top
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficFlowStatisticsDto"
  /api/site/{siteName}/topology:
    get:
      tags:
      - Topology
      operationId: getTopologyGraph
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: includeClientModelData
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopologyGraphDto"
  /api/site/{siteName}/system-log/{id}/cef:
    get:
      tags:
      - System Log
      operationId: getCefLog
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CefLogDto"
  /api/site/{siteName}/system-log/triggers/display-options/hosts:
    get:
      tags:
      - Trigger Log
      summary: List all host fingerprints
      operationId: listAllSourceHostFingerprints
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HostFingerprintDto"
  /api/site/{siteName}/system-log/threat/display-options/clients:
    get:
      tags:
      - Threat System Logs
      operationId: getUniqueThreatLogClients
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/site/{siteName}/system-log/setting/defaults:
    get:
      tags:
      - System Log
      summary: Get System log setting defaults
      operationId: getSystemLogSettingDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System Log Settings"
  /api/site/{siteName}/system-log/remote-settings:
    get:
      tags:
      - Remote System Log Settings
      summary: List Traffic Flows
      description: 9.1.64
      operationId: getRemoteSystemLogSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteSystemLogSettingsDto"
  /api/site/{siteName}/system-log/ips_alert/{alertId}:
    get:
      tags:
      - IPS Alerts
      operationId: getIpsAlert
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: alertId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IpsAlert"
  /api/site/{siteName}/system-log/display-options/admins:
    get:
      tags:
      - Admin Activity Log
      summary: List all Admins
      operationId: listAllAdmins
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdminLogAdminDto"
  /api/site/{siteName}/system-log/device/{deviceMac}:
    get:
      tags:
      - Device Log
      summary: List all device logs
      operationId: listDeviceLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      - name: scope
        in: query
        required: false
        schema:
          type: string
          default: DEVICE
          enum:
          - DEVICE
          - CLIENTS
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
          minimum: 1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceLogDto"
  /api/site/{siteName}/system-log/client-connection/{clientMac}:
    get:
      tags:
      - Client Connection Log
      summary: List all device logs
      operationId: listClientConnectionLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
          minimum: 1
      - name: separateConnectionSignalParam
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClientConnectionLogDto"
  /api/site/{siteName}/system-log/ap-logs/display-options/aps:
    get:
      tags:
      - Device Log
      summary: List unique MAC addresses of APs for which we have logs
      operationId: getUniqueApMacsInApLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/site/{siteName}/system-log/alarm/{alarmId}:
    get:
      tags:
      - IPS Alerts
      operationId: getAlarm
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: alarmId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alarm"
  /api/site/{siteName}/system-log/admin-activity/{id}:
    get:
      tags:
      - Admin Activity Log
      summary: Get Admin Activity log
      description: Since 9.2.74
      operationId: getAdminActivity
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActivityLogDto"
  /api/site/{siteName}/static-dns/devices:
    get:
      tags:
      - Static DNS
      operationId: getDeviceLocalDnsEntries
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Local DNS"
  /api/site/{siteName}/speedtest:
    get:
      tags:
      - Speed Test
      summary: List historical speed test results
      operationId: getHistoricalSpeedTestResults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: timestampFrom
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: timestampTo
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Historical speedtest results"
  /api/site/{siteName}/speedtest/latest:
    get:
      tags:
      - Speed Test
      summary: Get last speed test result
      description: Since 7.2.51
      operationId: getLastSpeedTestResult
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LastSpeedTestDto"
  /api/site/{siteName}/speedtest/latest-per-wan:
    get:
      tags:
      - Speed Test
      summary: Get last speed test result for all network groups
      description: Since 8.4.48
      operationId: getSpeedTestDataResult
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpeedTestOverviewDto"
  /api/site/{siteName}/speedtest/csv:
    get:
      tags:
      - Speed Test
      summary: List historical speed test results as csv document
      operationId: getHistoricalSpeedTestResultsAsCsv
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
  /api/site/{siteName}/site-feature-migration:
    get:
      tags:
      - Site Feature Migration
      summary: Lists all migrated features
      operationId: getMigratedFeatures
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site Feature Migration"
  /api/site/{siteName}/shadowmode/status:
    get:
      tags:
      - Console Shadow Mode
      summary: Get shadow mode status
      description: Since 8.1.105
      operationId: getShadowModeStatus
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShadowModeStatusDto"
  /api/site/{siteName}/shadowmode/managed/group:
    get:
      tags:
      - Console Shadow Mode
      operationId: getGroup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Managed Shadow Mode"
  /api/site/{siteName}/shadowmode/managed/check-vrrp:
    get:
      tags:
      - Console Shadow Mode
      operationId: checkCanFinishSetup
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /api/site/{siteName}/shadowmode/info:
    get:
      tags:
      - Console Shadow Mode
      operationId: getShadowModeInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShadowModeInfoDto"
  /api/site/{siteName}/settings/wifiai/defaults:
    get:
      tags:
      - WiFi AI Setting
      summary: Get default WiFi AI settings.
      description: Since 6.6.25
      operationId: getDefaults_2
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WifiAiSettingDto"
  /api/site/{siteName}/settings/usg/defaults:
    get:
      tags:
      - USG Setting
      summary: Get default USG settings
      description: Since 6.6.25
      operationId: getDefaults_3
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsgSettingDto"
  /api/site/{siteName}/settings/traffic_flow/defaults:
    get:
      tags:
      - Traffic Flow Setting
      summary: Get default Traffic Flow settings
      description: Since 9.1.117
      operationId: getDefaults_4
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficFlowSettingDto"
  /api/site/{siteName}/settings/teleport/defaults:
    get:
      tags:
      - Teleport Setting
      summary: Get default Teleport settings.
      description: Since 7.1.55
      operationId: getDefaults_5
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeleportSettingDto"
  /api/site/{siteName}/settings/roaming_assistant/defaults:
    get:
      tags:
      - Roaming Assistant Setting
      summary: Get default Roaming Assistant settings
      description: Since 9.2.62
      operationId: getDefaults_6
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoamingAssistantSettingDto"
  /api/site/{siteName}/settings/ntp/defaults:
    get:
      tags:
      - NTP Setting
      summary: Get default NTP settings
      description: Since 7.0.5
      operationId: getDefaults_7
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NtpSettingDto"
  /api/site/{siteName}/settings/netflow/defaults:
    get:
      tags:
      - Netflow
      summary: Get Defaults for Netflow
      operationId: getNetflowDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetflowSettingDto"
  /api/site/{siteName}/settings/mgmt:
    get:
      tags:
      - Management Setting
      summary: Get management settings
      description: Since 7.0.6
      operationId: getSettings
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagementSettingDto"
  /api/site/{siteName}/settings/ips/available-categories:
    get:
      tags:
      - Ips Setting
      summary: Get available ids ips categories
      operationId: getAvailableIdsIpsCategories
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: memoryOptimized
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IdsIpsCategoryDto"
  /api/site/{siteName}/settings/ips/advanced-filtering-defaults:
    get:
      tags:
      - Ips Setting
      summary: Get advanced internet filter default values
      operationId: getManualAdvancedFilteringDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
  /api/site/{siteName}/settings/ips/advanced-filtering-auto-values:
    get:
      tags:
      - Ips Setting
      summary: Get advanced internet filter auto default values
      operationId: getAutoAdvancedFilteringDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
  /api/site/{siteName}/settings/global_switch/defaults:
    get:
      tags:
      - Global Switch Setting
      summary: Get default Global Switch settings
      description: 7.2.52
      operationId: getDefaults_8
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSwitchSettingDto"
  /api/site/{siteName}/settings/global_nat/defaults:
    get:
      tags:
      - Global Nat Setting
      summary: Get default Global NAT settings
      description: Since 8.2.76
      operationId: getDefaults_9
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalNatSettingDto"
  /api/site/{siteName}/settings/element_adopt/defaults:
    get:
      tags:
      - New Device Auto-Link (aka Element Adopt) Setting
      summary: Get default Device Auto-Link settings
      description: Since 7.1.35
      operationId: getDefaults_10
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementAdoptSettingDto"
  /api/site/{siteName}/settings/doh/defaults:
    get:
      tags:
      - DoH (DNS over HTTPS) Setting
      summary: Get default DoH settings
      description: Since 7.5.59
      operationId: getDefaults_11
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoH (DNS over HTTPS) Setting"
  /api/site/{siteName}/settings/doh/available-server-names:
    get:
      tags:
      - DoH (DNS over HTTPS) Setting
      summary: Get available DoH server names
      description: Since 7.5.59
      operationId: getAvailableServerNames
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Available Server Names for DoH (DNS over\
                  \ HTTPS) Setting"
  /api/site/{siteName}/settings/connectivity/defaults:
    get:
      tags:
      - Connectivity Setting
      summary: Get default Connectivity settings
      description: Since 7.1.35
      operationId: getDefaults_12
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivitySettingDto"
  /api/site/{siteName}/search:
    get:
      tags:
      - Search
      operationId: search
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: models
        in: query
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseSearchResult"
  /api/site/{siteName}/score:
    get:
      tags:
      - Evaluation Score
      summary: Get setup evaluation score with subscores
      description: Since 8.1.58
      operationId: getScore
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluationScoreDto"
  /api/site/{siteName}/score/details/{scoreId}:
    get:
      tags:
      - Evaluation Score
      summary: Get setup evaluation score details
      description: Since 8.1.71
      operationId: getScoreDetails
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: scoreId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluationSubScoreDto"
  /api/site/{siteName}/radius/users:
    get:
      tags:
      - RADIUS
      summary: List RADIUS users
      operationId: listRadiusUsers
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RadiusUserDto"
  /api/site/{siteName}/port-profiles/defaults:
    get:
      tags:
      - Port Profiles
      summary: Get default Port Profile settings
      description: Since 6.6.28
      operationId: getDefaults_13
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortProfileDto"
  /api/site/{siteName}/poe-info:
    get:
      tags:
      - PoE
      summary: PoE Host info
      operationId: poeInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoeDeviceInfoDto"
  /api/site/{siteName}/ping/{mac}:
    get:
      tags:
      - Ping Test
      operationId: getPingLatencyResult
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client Ping Latency Result"
  /api/site/{siteName}/pcap-status/{mac}:
    get:
      tags:
      - Packet Capture
      summary: Get packet capture status
      operationId: getCaptureStatus
      parameters:
      - name: siteName
        in: path
        description: Site Name
        required: true
        schema:
          description: Site Name
      - name: mac
        in: path
        description: MAC address of the captured device
        required: true
        schema:
          description: MAC address of the captured device
          example: 00:11:22:33:44:55
        example: 00:11:22:33:44:55
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                enum:
                - CAPTURING
                - STOP_CAPTURING
                - UPLOADING
                - FAILED_TO_UPLOAD
                - READY_TO_DOWNLOAD
                - TIMEOUT
                - NOT_FOUND
                - PCAP_FILE_DELETED
  /api/site/{siteName}/pcap-get/{mac}:
    get:
      tags:
      - Packet Capture
      summary: Download packet capture file
      operationId: getCapture
      parameters:
      - name: siteName
        in: path
        description: Site Name
        required: true
        schema:
          description: Site Name
      - name: mac
        in: path
        description: MAC address of the captured device
        required: true
        schema:
          description: MAC address of the captured device
          example: 00:11:22:33:44:55
        example: 00:11:22:33:44:55
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/site/{siteName}/ospf/neighbors:
    get:
      tags:
      - OSPF Routing
      operationId: getOspfNeighbors
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSPF Router"
  /api/site/{siteName}/notifications:
    get:
      tags:
      - Notifications
      summary: Get all  site and controller scope notifications for admin
      operationId: getAdminNotificationsByScope
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UI Notification"
  /api/site/{siteName}/next-ai/logs:
    get:
      tags:
      - NextAi
      operationId: Õ00000
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NextAiLogDto"
      deprecated: true
  /api/site/{siteName}/network_status:
    get:
      tags:
      - Network Status
      operationId: getNetworkStatus
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkStatus"
  /api/site/{siteName}/network/suggest:
    get:
      tags:
      - Network and port Suggest
      operationId: suggestUnusedSubnets
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: masks
        in: query
        required: false
        schema:
          type: array
          default:
          - 24
          - 22
          - 20
          items:
            type: integer
            format: int32
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Unused subnet suggestion"
  /api/site/{siteName}/network/port-suggest:
    get:
      tags:
      - Network and port Suggest
      operationId: suggestAvailablePorts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: protocol
        in: query
        required: false
        schema:
          type: string
          default: tcp_udp
          enum:
          - tcp
          - udp
          - tcp_udp
          - icmp
      - name: service
        in: query
        required: false
        schema:
          type: string
          default: any
          enum:
          - any
          - openvpn
          - wireguard
          - sdwan
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
          maximum: 10
          minimum: 1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unused port suggestion"
  /api/site/{siteName}/network-members-groups:
    get:
      tags:
      - NetworkMembersGroup
      summary: Get all network members groups
      operationId: getNetworkMembersGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NetworkMembersGroupDto"
  /api/site/{siteName}/models:
    get:
      tags:
      - Device model meta-data
      summary: Get icon info for all present models
      operationId: listModels
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteModelMetaDto"
  /api/site/{siteName}/models/{modelName}:
    get:
      tags:
      - Device model meta-data
      summary: Get model information
      operationId: getModelInformation
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: modelName
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelMetaDto"
  /api/site/{siteName}/micro-segment-groups:
    get:
      tags:
      - MicroSegmentation
      summary: Get all micro segment groups
      operationId: getMicroSegmentGroups
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MicroSegmentGroupDto"
  /api/site/{siteName}/magicsitetositevpn/configs:
    get:
      tags:
      - Magic Site-to-Site VPN
      summary: Return list of Magic Site-to-Site VPNs for site
      description: Since 7.4.77
      operationId: listConfigsForSite
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MagicSiteToSiteVpnConfigDto"
  /api/site/{siteName}/loop-detection/info:
    get:
      tags:
      - Network Loop Detection Info
      operationId: getCurrentLoopDetectionInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: query
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoopDetectionListDto"
  /api/site/{siteName}/lan/mdns:
    get:
      tags:
      - LAN Configuration
      summary: Get pre-defined Multicast DNS services list
      operationId: getPredefineMulticastDnsServices
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Multicast DNS Service Name"
  /api/site/{siteName}/lan/enriched-configuration:
    get:
      tags:
      - LAN Configuration
      operationId: getConfigurations_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enriched LAN Configuration"
  /api/site/{siteName}/lan/defaults:
    get:
      tags:
      - LAN Configuration
      summary: Get default LAN Network settings
      description: Since 6.6.31
      operationId: getDefaults_14
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LAN Configuration"
  /api/site/{siteName}/isp/status:
    get:
      tags:
      - Internet Service Provider
      summary: ISP status
      description: Since 7.2.50
      operationId: getIspStatus_2
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: include_isp_alerts
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IspStatusDto"
      deprecated: true
  /api/site/{siteName}/isp/health:
    get:
      tags:
      - Internet Service Provider
      summary: ISP health status for last 24 hours
      description: Since 7.2.59
      operationId: getIspHealth
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IspHealthStatusDto"
  /api/site/{siteName}/isp/health/compact:
    get:
      tags:
      - Internet Service Provider
      summary: Compacted ISP health status for last 24 hours or time range
      description: Since 7.3.57
      operationId: getIspHealthCompact
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IspHealthStatusCompactedDto"
  /api/site/{siteName}/ips_alerts:
    get:
      tags:
      - IPS Alerts
      operationId: getIpsAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 3000
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: startDate
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: endDate
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseIpsAlert"
  /api/site/{siteName}/insights/filtering/watchlist:
    get:
      tags:
      - Filtering Insights
      summary: Get clients with statistics for Insights Filtering Watchlist
      description: Since 7.3.33
      operationId: getInsightsFilteringWatchlist
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filtering Insights watchlist"
  /api/site/{siteName}/hotspot/info:
    get:
      tags:
      - Hotspot
      summary: Get hotspot info
      description: Since 7.4.77
      operationId: getHotspotInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotspotInfoDto"
  /api/site/{siteName}/hotspot/clients:
    get:
      tags:
      - Hotspot
      summary: Get active and historical guest clients. Advanced search parameters
        applicable to historical clients only
      description: Since 7.4.77
      operationId: listHotspotClients
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: withinHours
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 24
          minimum: 0
      - name: onlyBlocked
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: onlyNonBlocked
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /api/site/{siteName}/gateway/engine/utilization:
    get:
      tags:
      - Gateway Engine
      summary: Return utilization of Gateway
      description: Since 7.6.40
      operationId: getUtilization
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gateway Engine Utilization"
  /api/site/{siteName}/gateway/engine/most-active-networks:
    get:
      tags:
      - Gateway Engine
      summary: Return list of Most Active Networks
      description: Since 7.6.41
      operationId: listMostActiveNetworks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 3
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GatewayEngineNetworkDto"
  /api/site/{siteName}/gateway/engine/logs:
    get:
      tags:
      - Gateway Engine
      summary: Return gateway engine logs
      description: Since 8.0.1
      operationId: getLogs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Gateway Engine Log"
  /api/site/{siteName}/gateway/engine/features:
    get:
      tags:
      - Gateway Engine
      summary: Return list of Gateway Engine features
      description: Since 7.6.43
      operationId: listFeatures
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GatewayEngineFeatureDto"
  /api/site/{siteName}/firewall/zone/defaults:
    get:
      tags:
      - Firewall zone
      summary: List Firewall Zone defaults
      operationId: listFirewallZoneDefaults
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallZoneDto"
  /api/site/{siteName}/firewall/zone-matrix:
    get:
      tags:
      - Firewall zone
      summary: Returns firewall zone matrix
      operationId: getFirewallZoneMatrix
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallMatrixSourceZoneDto"
  /api/site/{siteName}/firewall-rules/defaults:
    get:
      tags:
      - Firewall Rules
      summary: Get default Firewall Rule settings
      description: Since 6.6.41
      operationId: getDefaults_15
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FirewallRuleDto"
  /api/site/{siteName}/firewall-rules/combined-traffic-firewall-rules:
    get:
      tags:
      - Firewall Rules
      summary: Get combined traffic and firewall rules
      description: Since 8.1.86
      operationId: getCombinedTrafficFirewallRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: originType
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - traffic_rule
          - custom_firewall_rule
          - hidden_predefined_rule
          - predefined_firewall_rule
          - simple_app_block
          - network_config
          - nat_rule
          - console_setting_direct_connection
          - wan_config
          - port_forward
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CombinedTrafficFirewallRuleDto"
  /api/site/{siteName}/firewall-policies/defaults:
    get:
      tags:
      - Firewall Policies
      summary: Get default Firewall Policy settings
      operationId: getDefaults_16
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallPolicyDto"
  /api/site/{siteName}/features:
    get:
      tags:
      - Features
      summary: List site features
      operationId: listSiteFeatures
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: includeSystemFeatures
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/site/{siteName}/features/{featureName}/exists:
    get:
      tags:
      - Features
      summary: Verify existence of specific site feature
      operationId: siteFeatureExists
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: featureName
        in: path
        required: true
        schema:
          enum:
          - WIFI_CONFIG_CREATED
          example: WIFI_CONFIG_CREATED
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature verification response"
  /api/site/{siteName}/excluded-ips:
    get:
      tags:
      - Dhcp Leases
      operationId: excludedDhcpIpsAllNetworks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExcludedIpDto"
  /api/site/{siteName}/excluded-ips/{networkId}:
    get:
      tags:
      - Dhcp Leases
      operationId: excludedDhcpIps
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExcludedIpDto"
  /api/site/{siteName}/downtime:
    get:
      tags:
      - Downtime
      summary: List all downtime statistics for primary WAN
      operationId: listAllDowntimeStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: timestampFrom
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: timestampTo
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DowntimeDto"
  /api/site/{siteName}/downtime/{wanNetworkGroup}:
    get:
      tags:
      - Downtime
      summary: List all downtime statistics by specific WAN
      operationId: listWanDowntimeStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: wanNetworkGroup
        in: path
        required: true
        schema:
          type: string
      - name: timestampFrom
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: timestampTo
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DowntimeDto"
  /api/site/{siteName}/device:
    get:
      tags:
      - Devices
      summary: List devices from all UniFi controllers
      description: '"separateUnmanaged" query param available since 7.1.46'
      operationId: listDevices
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: separateUnmanaged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: includeTrafficUsage
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceListDto"
  /api/site/{siteName}/device/{mac}/wireless-links:
    get:
      tags:
      - Devices
      operationId: getDeviceWirelessLinks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/void"
  /api/site/{siteName}/device/{deviceMac}/replacement-candidates:
    get:
      tags:
      - Device management
      operationId: listReplaceableDevices
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceableDevicesDto"
  /api/site/{siteName}/device/{deviceMac}/clone-candidates:
    get:
      tags:
      - Clone Device Config
      summary: List cloneable devices for the specified device
      operationId: listCloneableDevices
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloneableDeviceListDto"
  /api/site/{siteName}/device/{deviceMac}/24hr-tx-retries:
    get:
      tags:
      - Device Statistics
      operationId: getLast24HrTxRetries
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalScoreResponseHistoricalTxRetryDto"
  /api/site/{siteName}/device/{deviceMac}/24hr-satisfaction:
    get:
      tags:
      - Device Statistics
      operationId: getLast24HrSatisfactionScores
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalScoreResponseHistoricalSatisfactionDto"
  /api/site/{siteName}/device/wireless-links:
    get:
      tags:
      - Devices
      operationId: getSiteDevicesWirelessLinks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/void"
  /api/site/{siteName}/described-features:
    get:
      tags:
      - Features
      summary: List site features with description
      operationId: listSiteFeaturesWithDescription
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: includeSystemFeatures
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feature with description"
  /api/site/{siteName}/dashboard:
    get:
      tags:
      - Dashboard
      operationId: getDashboardData
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: scale
        in: query
        required: true
        schema:
          type: string
          enum:
          - minute
          - 5minutes
          - hourly
          - daily
          - monthly
          - life
          - archive
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: tzone
        in: query
        required: false
        schema:
          type: string
      - name: squashScale
        in: query
        required: false
        schema:
          type: string
          enum:
          - minute
          - 5minutes
          - hourly
          - daily
          - monthly
          - life
          - archive
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardResponse"
  /api/site/{siteName}/country-traffic:
    get:
      tags:
      - Traffic Overview
      summary: Get site country traffic usage
      operationId: getSiteCountryTrafficUsage
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountryTrafficStatsDto"
  /api/site/{siteName}/content-filtering:
    get:
      tags:
      - Content Filtering
      summary: Get all Content Filtering rules
      operationId: getContentFilteringRules
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Content Filtering"
  /api/site/{siteName}/content-filtering/categories:
    get:
      tags:
      - Content Filtering
      summary: Get all Content Filtering categories
      operationId: getContentFilteringCategories
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - FAMILY
                  - ADVERTISEMENT
                  - ADULT
                  - ALCOHOL
                  - ANONYMIZERS
                  - APIS
                  - ART
                  - ARTIFICIAL_INTELLIGENCE
                  - ARTS_AND_CRAFTS
                  - ASTROLOGY
                  - AUCTIONS_AND_MARKETPLACES
                  - AUDIO_STREAMING
                  - BODY_ART
                  - BOTNETS
                  - BUSINESS
                  - CARTOONS_AND_ANIME
                  - CHAT
                  - CHILD_ABUSE
                  - CIPA
                  - CLOTHING
                  - COMIC_BOOKS
                  - COUNTERFEIT_BRANDS
                  - COUPONS
                  - CRYPTOCURRENCY
                  - CRYPTOMINING
                  - DATING_AND_RELATIONSHIPS
                  - DECEPTIVE_ADS
                  - DGA_DOMAINS
                  - DIGITAL_POSTCARDS
                  - DIGITAL_SAFETY
                  - DNS_TUNNELING
                  - DRUGS
                  - ECOMMERCE
                  - ECONOMY_AND_FINANCE
                  - EDUCATION
                  - EDUCATIONAL_INSTITUTIONS
                  - EMPTY_DOMAINS
                  - ENTERTAINMENT
                  - FASHION
                  - FILE_SHARING
                  - FINE_ARTS
                  - FOOD_AND_DRINK
                  - FORUMS
                  - GAMBLING
                  - GAMING
                  - GOVERNMENT
                  - HACKING
                  - HATE_SPEECH_AND_EXTREMISM
                  - HEALTH_AND_FITNESS
                  - HOBBIES_AND_INTERESTS
                  - HOME_AND_GARDEN
                  - HOME_VIDEO
                  - HUMOR
                  - INSTANT_MESSENGERS
                  - INTERNET_CALLING_AND_VOIP
                  - IT_SERVICES
                  - JOB_SEARCH_AND_CAREERS
                  - LIFESTYLE
                  - LINGERIE_AND_BIKINI
                  - LOGIN_SCREENS
                  - MAGAZINES
                  - MALWARE
                  - MEDIA_AND_FILE_HOSTING
                  - MESSAGING
                  - MISCELLANEOUS
                  - MOVIES
                  - MUSIC
                  - NEWLY_DISCOVERED_DOMAINS
                  - NEWLY_REGISTERED_DOMAINS
                  - NEWS_AND_MEDIA
                  - NUDITY
                  - PARANORMAL
                  - PARENTING
                  - PARKED_DOMAINS
                  - PEER_TO_PEER
                  - BLOGS
                  - PETS
                  - PHISHING
                  - PHOTO_SHARING
                  - PHOTOGRAPHY
                  - POLITICS
                  - PORNOGRAPHY
                  - PORTALS
                  - PRIVATE_IP_ADDRESSES
                  - PROFANITY
                  - PROFESSIONAL_NETWORKING
                  - QUESTIONABLE_ACTIVITIES
                  - RADIO
                  - REAL_ESTATE
                  - REDIRECTORS
                  - RELIGION
                  - SAFE_FOR_KIDS
                  - SCIENCE
                  - SEARCH_ENGINES
                  - SEX_EDUCATION
                  - SEXUALITY
                  - SHOPPING
                  - SOCIAL_NETWORKS
                  - SPACE_AND_ASTRONOMY
                  - SPAM
                  - SPORTS
                  - SPYWARE
                  - SWIMSUITS
                  - TECHNOLOGY
                  - TELEVISION
                  - TOBACCO
                  - TRANSLATORS
                  - TRAVEL
                  - UNREACHABLE_DOMAINS
                  - UNRELIABLE_INFORMATION
                  - VEHICLES
                  - VIDEO_STREAMING
                  - VIOLENCE
                  - WEAPONS
                  - WEATHER
                  - WEBMAIL
  /api/site/{siteName}/clients/{clientMac}/power:
    get:
      tags:
      - Clients
      summary: Get current power consumption data for client
      operationId: getClientPower
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientPowerDto"
  /api/site/{siteName}/clients/traffic-control:
    get:
      tags:
      - Client Statistics
      operationId: getTrafficControl
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientTrafficControlDto"
  /api/site/{siteName}/clients/local/{clientMac}:
    get:
      tags:
      - Clients
      summary: "Get active or historical local client (wireless or wired). No VPN,\
        \ Teleport clients. From version 6.6"
      operationId: getLocalClient
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/W"
  /api/site/{siteName}/clients/history:
    get:
      tags:
      - Clients
      operationId: listClientsHistory
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: withinHours
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 24
          minimum: 0
      - name: onlyBlocked
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: onlyNonBlocked
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: includeUnifiDevices
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /api/site/{siteName}/clients/active:
    get:
      tags:
      - Clients
      operationId: listClients
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: includeTrafficUsage
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: includeUnifiDevices
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/W"
  /api/site/{siteName}/clients/active/{clientMac}:
    get:
      tags:
      - Clients
      operationId: getClient
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      - name: includeTrafficUsage
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/W"
  /api/site/{siteName}/client/{clientMac}/traffic-insights:
    get:
      tags:
      - Client Statistics
      operationId: getTrafficInsights
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficInsightsResponse"
  /api/site/{siteName}/client/{clientMac}/experience:
    get:
      tags:
      - WiFi Experience
      summary: Get Client experience by MAC
      operationId: getStationScoreByClientMac
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WifiExperienceScoreDto"
  /api/site/{siteName}/client/{clientMac}/ap-stats:
    get:
      tags:
      - Client Statistics
      operationId: getClientApStatistics
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        schema:
          default: Last 24 hours
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientApStatisticsResponseDto"
  /api/site/{siteName}/client/{clientMac}/24hr-satisfaction:
    get:
      tags:
      - Client Statistics
      operationId: getLast24HrSatisfactionScores_1
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalScoreResponseHistoricalSatisfactionDto"
  /api/site/{siteName}/client/{clientMac}/24hr-activity:
    get:
      tags:
      - Client Statistics
      operationId: getLast24HrActivity
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalActivityResponse"
  /api/site/{siteName}/client/{clientIp}/wifi_experience:
    get:
      tags:
      - WiFi Experience
      summary: Get WiFi Experience Score for client by clients local IP
      operationId: getStationScoreByClientIp
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientIp
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WifiExperienceScoreDto"
  /api/site/{siteName}/client/stats/fingerprint-os:
    get:
      tags:
      - Client Statistics
      operationId: getClientCount
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCount"
  /api/site/{siteName}/bgp/config/all:
    get:
      tags:
      - BGP
      operationId: getAllBgpConfigs
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BGP"
  /api/site/{siteName}/ap/{apMac}/neighbors:
    get:
      tags:
      - WiFi Scan
      summary: Get Nearest Neighbors and Rogues for a specific AP
      operationId: getApNeighbors
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: apMac
        in: path
        required: true
        schema:
          type: string
      - name: Whether to include rogues in the response
        in: query
        required: false
        schema:
          type: boolean
      - name: Filter start in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: Filter end in unix epoch seconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AP scan neighbors"
  /api/site/{siteName}/ap/{apMac}/last-scans:
    get:
      tags:
      - WiFi Scan
      summary: Get Last hour Available AP scans
      operationId: getApScans
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: apMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AP scan"
  /api/site/{siteName}/alert:
    get:
      tags:
      - Alerts
      summary: List Alerts
      operationId: listAlerts
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: listParameterDto
        in: query
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert list with paging info"
      deprecated: true
  /api/site/{siteName}/ai-fingerprint/fingerprint_overrides:
    get:
      tags:
      - Fingerprint Override
      operationId: getAllFingerprintOverridesForAi
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FingerprintOverridesListDto"
  /api/site/{siteName}/aggregated-dashboard:
    get:
      tags:
      - Aggregated Dashboard
      operationId: getAggregatedDashboard
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: historySeconds
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: widgets
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
            - connection_types
            - internet
            - device_client_count
            - wireless_experience
            - most_active_clients
            - most_active_aps
            - meshing
            - ap_density
            - next_ai
            - gateway
            - connectivity_status
            - server_ip
            - system_status
            - wan
            - speed_test
            - wifi_channel_preset_configuration
            - device_capacity
            - admin_activity
            - network_activity
            - wifi_activity
            - wan_history
            - critical_traffic_prioritization
            - most_active_apps_aps_clients
            - most_active_apps_clients
            - most_active_aps_clients
            - most_active_apps_aps
            - most_active_apps
            - v2_most_active_aps
            - v2_most_active_clients
            - wifi_channels
            - wifi_tx_retries
            - wifi_connectivity
            - wifi_client_experience
            - ap_radio_density
            - traffic_identification
            - wifi_technology
            - cybersecure
            - shortcuts
            - traffic_flow_stats
      - name: widgetVersion
        in: query
        required: false
        schema:
          type: string
          enum:
          - V1
          - V2
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregatedDashboardDto"
  /api/site/{siteName}/adopt-info/{deviceMac}:
    get:
      tags:
      - Adopt
      summary: Get adopt info
      operationId: getAdoptInfo
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdoptInfoDto"
  /api/site/{siteName}/active-leases:
    get:
      tags:
      - Dhcp Leases
      operationId: activeDhcpLeasesAllNetworks
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DhcpLeasesDto"
  /api/site/{siteName}/active-leases/{networkId}:
    get:
      tags:
      - Dhcp Leases
      operationId: activeDhcpLeases
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: networkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DhcpLeasesDto"
  /api/site/{siteName}/access-points/{apMac}/wifi-stats:
    get:
      tags:
      - Dashboard
      operationId: getApWirelessExperienceStats
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: apMac
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WirelessExperienceWidgetDto"
  /api/site/{siteName}/access-points/{apMac}/wifi-activity:
    get:
      tags:
      - Dashboard
      operationId: getApWirelessActivityStats
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: apMac
        in: path
        required: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WifiActivityWidgetDto"
  /api/site/default/ips_alerts:
    get:
      tags:
      - IPS Alerts
      operationId: getIpsAlerts_1
      parameters:
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: startDate
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: endDate
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseIpsAlert"
  /api/settings/super-mgmt/defaults:
    get:
      tags:
      - Super Management Setting
      summary: Get default Super Management settings
      description: Since 7.0.5
      operationId: getDefaults_17
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuperMgmtSettingDto"
  /api/radio-ai/optimize/{calculationId}:
    get:
      tags:
      - WiFi Radio AI
      summary: Apply previous optimization preview by giving calculation id
      operationId: getRadioAiResult
      parameters:
      - name: calculationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutoChannelUpdateInfoDto"
  /api/notifications/{name}:
    get:
      tags:
      - Notifications
      summary: "Find one notification for admin by notification name, scope and site\
        \ id"
      operationId: getAdminNotification
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: scope
        in: query
        required: true
        schema:
          type: string
          enum:
          - controller
          - site
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UI Notification"
  /api/magicsitetositevpn/configs:
    get:
      tags:
      - Magic Site-to-Site VPN
      summary: Return list of Magic Site-to-Site VPNs
      description: Since 7.4.141
      operationId: listConfigs
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MagicSiteToSiteVpnConfigDto"
    delete:
      tags:
      - Magic Site-to-Site VPN
      summary: Remove Console from all Magic Site-to-Site and SD-WAN VPNs
      description: Since 7.4.143
      operationId: removeConsoleFromAllConfigs
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/log-levels/defaults:
    get:
      tags:
      - Logging Configuration
      summary: Get default Log Level configuration
      description: Since 6.6.30
      operationId: getDefaults_18
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogLevelsDto"
  /api/info:
    get:
      tags:
      - Info
      summary: "Retrieve self (admin), sites and system info"
      operationId: getInfo
      parameters:
      - name: preferred_site_name
        in: query
        required: false
        schema:
          type: string
      - name: ui_settings_version
        in: query
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Info"
  /api/fingerprint_devices/{imageFolder}:
    get:
      tags:
      - Fingerprint Devices
      operationId: fetchFingerprintResources
      parameters:
      - name: imageFolder
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FingerprintEngineDefinitionsDto"
  /api/features:
    get:
      tags:
      - Features
      summary: List application features
      operationId: listFeatures_1
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/features/{featureName}/exists:
    get:
      tags:
      - Features
      summary: Verify existence of specific feature
      operationId: featureExists
      parameters:
      - name: featureName
        in: path
        required: true
        schema:
          enum:
          - "ALL_UNIFI_DEVICES_PAGE, RADIUS_BATCH_USERS, RADIUS_PROFILES, UID_RADIUS,\
            \ UID_RADIUS_GROUP_POLICY, UID_VPN, UID_VPN_ALLOW_WAN_LOCAL, UID_VPN_OVERRIDE_DNS,\
            \ UID_VPN_STRICT_CLIENT_COMMON_NAME, UID_VPN_SUPPORT_UDP, UID_WIFI, UID_WIFI_IOT,\
            \ UID_WIFI_RADIUS_GROUP_POLICY, LIVE_DEVICE_UPDATES"
        example: LIVE_DEVICE_UPDATES
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature verification response"
  /api/devices/{deviceMac}/details:
    get:
      tags:
      - Devices
      summary: Get details for a Unifi device
      operationId: getUnifiDeviceDetails
      parameters:
      - name: deviceMac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnifiDeviceDetailsDto"
  /api/device_info:
    get:
      tags:
      - Device Info
      operationId: getDeviceInfo
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Device Info is not supported on the device running the controller
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceInfo"
  /api/alarm-manager/scope/sites:
    get:
      tags:
      - alarm-manager-controller
      operationId: getSiteScope
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AlarmManagerSiteData"
  /api/alarm-manager/scope/devices:
    get:
      tags:
      - alarm-manager-controller
      operationId: getDeviceScope
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AlarmManagerScopePickListEntry"
  /api/alarm-manager/scope/clients:
    get:
      tags:
      - alarm-manager-controller
      operationId: getClientScope
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AlarmManagerScopePickListEntry"
  /api/alarm-manager/reset-alarms:
    get:
      tags:
      - alarm-manager-controller
      operationId: resetAlarms
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
  /api/ai-fingerprint/site/{siteName}/station/{mac}/fingerprint_override:
    get:
      tags:
      - Fingerprint Override
      operationId: getFingerprintOverrideForAi
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: mac
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FingerprintOverride"
  /api/site/{siteName}/teleport/token/{tokenId}:
    delete:
      tags:
      - Teleport
      summary: Remove Teleport short-term token
      description: Since 7.1.2
      operationId: removeShortTermToken
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: tokenId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/teleport/client/{clientId}:
    delete:
      tags:
      - Teleport
      summary: Remove client and their token
      operationId: removeClientAndToken
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      - name: clientId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
  /api/site/{siteName}/dpi:
    delete:
      tags:
      - DPI
      summary: Delete site DPI stats
      operationId: deleteSiteDpiStats
      parameters:
      - name: siteName
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Site"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "501":
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "207":
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalDeviceUpdateStatusDto"
        "204":
          description: No Content
components:
  schemas:
    ErrorMessage:
      properties:
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        code:
          type: string
        details:
          type: object
          additionalProperties: {}
    GlobalDeviceUpdateErrorDto:
      properties:
        code:
          type: string
          enum:
          - NO_ADMIN_ACCESS
          - UPGRADE_IN_PROGRESS
          - DOWNLINKS_NOT_UPGRADED
          - GENERIC_UPGRADE_ERROR
          - UNKNOWN
        message:
          type: string
        device:
          type: string
    GlobalDeviceUpdateStatusDto:
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/GlobalDeviceUpdateErrorDto"
        success:
          type: array
          items:
            type: string
    P: {}
    Site:
      type: object
      additionalProperties: {}
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        collectionName:
          type: string
        externalId:
          type: string
          format: uuid
        changeKey:
          type: string
          enum:
          - CLIENT
          - DEVICE
          - HOTSPOT
          - INTERNET
          - NETWORK
          - PROFILE
          - ROUTING
          - SECURITY
          - SYSTEM
          - VPN
          - WIFI
          - UNKNOWN
        section:
          type: string
          enum:
          - ADMIN
          - AP_GROUP
          - CLIENT
          - DEVICE
          - DEVICE_UPDATE_SCHEDULE
          - DHCP_OPTION
          - DPI_APP
          - DPI_GROUP
          - DYNAMIC_DNS
          - STATIC_DNS
          - CONTENT_FILTERING
          - FIREWALL_GROUP
          - FIREWALL_RULE
          - FIREWALL_POLICY
          - FIREWALL_ZONE
          - HOTSPOT2_CONFIGURATION
          - HOTSPOT_OPERATOR
          - HOTSPOT_PACKAGE
          - NETWORK
          - NETWORK_LOCAL
          - NETWORK_SITE_VPN
          - NETWORK_VLAN_ONLY
          - NETWORK_VPN_CLIENT
          - NETWORK_VPN_SERVER
          - NETWORK_WAN
          - OSPF_ROUTE
          - BGP_ROUTE
          - PORT_CONFIGURATION
          - PORT_FORWARD
          - QOS_RULE
          - RADIUS_PROFILE
          - RADIUS_USER
          - SITE
          - STATIC_ROUTE
          - SWITCH_ACL_RULE
          - SWITCH_STACKING
          - TELEPORT_TOKEN
          - TRAFFIC_ROUTE
          - TRAFFIC_RULE
          - USER_GROUP
          - VOUCHER
          - WAN_SLA
          - WLAN_CONFIGURATION
          - WIREGUARD_VPN_USER
          - NAT
          - NEXT_AI
          - MICROSEGMENTATION
          - SETTINGS_HOTSPOT
          - SETTINGS_INTERNET
          - SETTINGS_RADIUS
          - SETTINGS_SECURITY
          - SETTINGS_SYSTEM
          - SETTINGS_VPN
          - SETTINGS_WIFI
          - SETTINGS_UNKNOWN_SITE_SETTINGS
          - SETTINGS_SUPER_SYSTEM
          - UNKNOWN
        depiction:
          $ref: "#/components/schemas/P"
        defaultSite:
          type: boolean
        superSite:
          type: boolean
        anonymousId:
          type: string
        optionalTimezone:
          type: string
        timezone:
          type: string
        deviceCount:
          type: integer
          format: int64
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        changes:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        originalFieldValues:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
    X:
      type: object
      additionalProperties: {}
      properties:
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        empty:
          type: boolean
    WireguardUserDto:
      properties:
        _id:
          type: string
        network_id:
          type: string
        name:
          type: string
        interface_ip:
          type: string
        allowed_ips:
          type: array
          items:
            type: string
        public_key:
          type: string
        preshared_key:
          type: string
      required:
      - interface_ip
      - name
      - public_key
    IncorrectWifiExperience:
      properties:
        reason:
          type: string
          enum:
          - DROPPED_CONNECTIVITY
          - POOR_LATENCY
          - POOR_THROUGHPUT
          - NOT_AS_EXPECTED
        comment:
          type: string
          maxLength: 1000
          minLength: 0
      required:
      - reason
    TrafficDomainDto:
      properties:
        domain:
          type: string
        ports:
          type: array
          items:
            type: integer
            format: int32
        port_ranges:
          type: array
          items:
            $ref: "#/components/schemas/TrafficPortRangeDto"
      required:
      - domain
    TrafficIpDto:
      properties:
        ip_version:
          type: string
          enum:
          - v4
          - v6
        ip_or_subnet:
          type: string
        ports:
          type: array
          items:
            type: integer
            format: int32
        port_ranges:
          type: array
          items:
            $ref: "#/components/schemas/TrafficPortRangeDto"
      required:
      - ip_or_subnet
      - ip_version
    TrafficIpRangeDto:
      properties:
        ip_version:
          type: string
          enum:
          - v4
          - v6
        ip_start:
          type: string
        ip_stop:
          type: string
      required:
      - ip_start
      - ip_stop
      - ip_version
    TrafficPortRangeDto:
      properties:
        port_start:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        port_stop:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
    TrafficRouteDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
        description:
          type: string
        matching_target:
          type: string
          enum:
          - DOMAIN
          - INTERNET
          - IP
          - REGION
        domains:
          type: array
          items:
            $ref: "#/components/schemas/TrafficDomainDto"
        ip_addresses:
          type: array
          items:
            $ref: "#/components/schemas/TrafficIpDto"
        ip_ranges:
          type: array
          items:
            $ref: "#/components/schemas/TrafficIpRangeDto"
        regions:
          type: array
          items:
            type: string
        target_devices:
          type: array
          items:
            $ref: "#/components/schemas/TrafficTargetDeviceDto"
        network_id:
          type: string
        next_hop:
          type: string
        kill_switch_enabled:
          type: boolean
        hidden_id:
          type: string
      required:
      - matching_target
      - network_id
      - target_devices
    TrafficTargetDeviceDto:
      properties:
        type:
          type: string
          enum:
          - ALL_CLIENTS
          - CLIENT
          - NETWORK
        client_mac:
          type: string
        network_id:
          type: string
      required:
      - type
    WAN Magic configuration:
      properties:
        enabled:
          type: boolean
        wan_networkgroup:
          type: array
          items:
            type: string
            enum:
            - WAN
            - WAN2
            - WAN3
            - WAN4
            - WAN5
            - WAN6
            - WAN7
            - WAN8
            - WAN9
            - WAN_LTE_FAILOVER
            - WAN_MAGIC
        route:
          $ref: "#/components/schemas/TrafficRouteDto"
    WAN load balancing configuration:
      properties:
        mode:
          type: string
          enum:
          - FAILOVER_ONLY
          - DISTRIBUTED
        wan_interfaces:
          type: array
          items:
            $ref: "#/components/schemas/WanInterfaceConfigurationDto"
    WanInterfaceConfigurationDto:
      properties:
        name:
          type: string
        wan_networkgroup:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        mode:
          type: string
          enum:
          - FAILOVER_ONLY
          - DISTRIBUTED
        weight:
          type: integer
          format: int32
        wan_sla:
          type: string
        priority:
          type: integer
          format: int32
    WanAlertThresholdDto:
      properties:
        threshold_policy:
          type: string
          enum:
          - any
          - all
          - any-two
          - loss-or-all-others
          - latency-or-all-others
          - jitter-or-all-others
          - loss-plus-one
          - latency-plus-one
          - jitter-plus-one
        latency_threshold:
          type: integer
          format: int32
        jitter_threshold:
          type: integer
          format: int32
        loss_threshold:
          type: integer
          format: int32
    WanMonitorDto:
      properties:
        alert:
          $ref: "#/components/schemas/WanAlertThresholdDto"
        type:
          type: string
          enum:
          - ICMP
          - SPEED_LIMIT
          - DNS
        target:
          type: string
        monitor_id:
          properties:
            empty:
              type: boolean
            present:
              type: boolean
            asInt:
              type: integer
              format: int32
        domain:
          type: string
        interval:
          type: integer
          format: int32
          maximum: 3600
          minimum: 1
        time_period:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
      required:
      - alert
    WanSlaDto:
      properties:
        name:
          type: string
        _id:
          type: string
        monitors:
          type: array
          items:
            $ref: "#/components/schemas/WanMonitorDto"
        monitor_health_type:
          type: string
          enum:
          - ALL
          - ANY
          - MAJORITY
          - CUSTOM
        monitor_down_threshold:
          type: integer
          format: int32
    VisualProgrammingParametersDto:
      properties:
        Network name:
          type: string
        Enable Internet access for this network:
          type: boolean
        Enable access to user defined networks:
          type: boolean
        List of MAC addresses of clients in this network:
          type: array
          example:
          - f0:34:18:b1:21:e6
          - f2:24:19:c6:13:ea
          items:
            type: string
      required:
      - Enable Internet access for this network
      - Enable access to user defined networks
      - List of MAC addresses of clients in this network
      - Network name
    A: {}
    Client Fingerprint data:
      properties:
        Device Category:
          type: integer
          format: int32
        Device Vendor:
          type: integer
          format: int32
        Device Family:
          type: integer
          format: int32
        Device Id:
          type: integer
          format: int32
        Computed Fingerprint Device Id:
          type: integer
          format: int32
        Computed Fingerprint Engine Code:
          type: integer
          format: int32
        OS Name:
          type: integer
          format: int32
        OS Class:
          type: integer
          format: int32
        Device Id Override:
          type: integer
          format: int32
        has_override:
          type: boolean
        confidence:
          type: integer
          format: int32
    F:
      properties:
        icon_resolutions:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
        view_in_application:
          type: boolean
        icon_filename:
          type: string
    NetworkConf:
      type: object
      additionalProperties: {}
      properties:
        localPort:
          type: integer
          format: int32
        name:
          type: string
        priority:
          type: integer
          format: int32
        id:
          type: string
        prefixLength:
          type: integer
          format: int32
        loopback:
          type: boolean
        enabled:
          type: boolean
        ipv6StandardPrefixLengthInterfaceType:
          type: boolean
        networkGroup:
          type: string
        collectionName:
          type: string
        siteId:
          type: string
        routingTableId:
          type: integer
          format: int32
        wanLoadBalanceType:
          type: string
          enum:
          - failover-only
          - weighted
        changeKey:
          type: string
          enum:
          - CLIENT
          - DEVICE
          - HOTSPOT
          - INTERNET
          - NETWORK
          - PROFILE
          - ROUTING
          - SECURITY
          - SYSTEM
          - VPN
          - WIFI
          - UNKNOWN
        section:
          type: string
          enum:
          - ADMIN
          - AP_GROUP
          - CLIENT
          - DEVICE
          - DEVICE_UPDATE_SCHEDULE
          - DHCP_OPTION
          - DPI_APP
          - DPI_GROUP
          - DYNAMIC_DNS
          - STATIC_DNS
          - CONTENT_FILTERING
          - FIREWALL_GROUP
          - FIREWALL_RULE
          - FIREWALL_POLICY
          - FIREWALL_ZONE
          - HOTSPOT2_CONFIGURATION
          - HOTSPOT_OPERATOR
          - HOTSPOT_PACKAGE
          - NETWORK
          - NETWORK_LOCAL
          - NETWORK_SITE_VPN
          - NETWORK_VLAN_ONLY
          - NETWORK_VPN_CLIENT
          - NETWORK_VPN_SERVER
          - NETWORK_WAN
          - OSPF_ROUTE
          - BGP_ROUTE
          - PORT_CONFIGURATION
          - PORT_FORWARD
          - QOS_RULE
          - RADIUS_PROFILE
          - RADIUS_USER
          - SITE
          - STATIC_ROUTE
          - SWITCH_ACL_RULE
          - SWITCH_STACKING
          - TELEPORT_TOKEN
          - TRAFFIC_ROUTE
          - TRAFFIC_RULE
          - USER_GROUP
          - VOUCHER
          - WAN_SLA
          - WLAN_CONFIGURATION
          - WIREGUARD_VPN_USER
          - NAT
          - NEXT_AI
          - MICROSEGMENTATION
          - SETTINGS_HOTSPOT
          - SETTINGS_INTERNET
          - SETTINGS_RADIUS
          - SETTINGS_SECURITY
          - SETTINGS_SYSTEM
          - SETTINGS_VPN
          - SETTINGS_WIFI
          - SETTINGS_UNKNOWN_SITE_SETTINGS
          - SETTINGS_SUPER_SYSTEM
          - UNKNOWN
        depiction:
          $ref: "#/components/schemas/P"
        ipv6:
          type: string
        radiusProfileId:
          type: string
        subnetInfo:
          $ref: "#/components/schemas/SubnetInfo"
        hiddenId:
          type: string
        vlanEnabled:
          type: boolean
        networkPurpose:
          type: string
          enum:
          - corporate
          - guest
          - remote-user-vpn
          - site-vpn
          - vlan-only
          - ipsec-vpn
          - openvpn-vpn
          - vpn-client
          - intervlan-routing
          - wan
          - wan_magic
        remoteUserOpenVpnServer:
          type: boolean
        localSiteNetwork:
          type: boolean
        lteWanFailoverNetwork:
          type: boolean
        wanNetwork:
          type: boolean
        wanSla:
          type: string
        routingTableIdOptional:
          type: integer
          format: int32
        autoScaleNetworkEnabled:
          type: boolean
        ipSubnet:
          type: string
        dhcpdStart:
          type: string
        dhcpdStop:
          type: string
        purpose:
          type: string
          deprecated: true
        domainName:
          type: string
        vlan:
          type: integer
          format: int32
        ipV6InterfaceType:
          type: string
          enum:
          - none
          - static
          - pd
          - single_network
        nat:
          type: boolean
        dhcpdEnabled:
          type: boolean
        dhcpdV6Enabled:
          type: boolean
        lteLanEnabled:
          type: boolean
        settingPreference:
          type: string
          enum:
          - auto
          - manual
        wanNetworkGroup:
          type: string
          deprecated: true
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        wanType:
          type: string
        reportWanEvent:
          type: boolean
        wanIp:
          type: string
        wanGateway:
          type: string
        wanNetmask:
          type: string
        wanFailOverPriority:
          type: integer
          format: int32
        interfaceName:
          type: string
        macOverride:
          type: string
        macOverrideEnabled:
          type: boolean
        wanDnsPreference:
          type: string
          enum:
          - auto
          - manual
        wanLoadBalanceWeight:
          type: integer
          format: int32
        wanDsLiteRemoteHostAuto:
          type: boolean
        corpNetwork:
          type: boolean
        guestNetwork:
          type: boolean
        gatewayDeviceType:
          type: string
        siteOpenVpnNetwork:
          type: boolean
        siteIpsecVpnNetwork:
          type: boolean
        ipsecDynamicRouting:
          type: boolean
        sdWanTunnelNetwork:
          type: boolean
        siteToSiteVpnNetwork:
          type: boolean
        vpnType:
          type: string
          enum:
          - auto
          - ipsec-vpn
          - openvpn-vpn
          - openvpn-client
          - openvpn-server
          - pptp-client
          - pptp-server
          - sdwan-hub-spoke-tunnel
          - sdwan-mesh-tunnel
          - l2tp-server
          - uid-server
          - wireguard-teleport-server
          - wireguard-server
          - wireguard-client
          - wireguard-site-to-site
        sdWanMeshTunnelNetwork:
          type: boolean
        sdWanHubSpokeTunnelNetwork:
          type: boolean
        vpnClientNetwork:
          type: boolean
        openVpnServer:
          type: boolean
        openVpnClientNetwork:
          type: boolean
        remoteUserVpnNetwork:
          type: boolean
        wireguardVpnServer:
          type: boolean
        wireguardClient:
          type: boolean
        remoteUserPptpVpnNetwork:
          type: boolean
        remoteUserL2tpVpnNetwork:
          type: boolean
        uidVpnServer:
          type: boolean
        uidVpnType:
          type: string
          enum:
          - openvpn
          - wireguard
        remoteUserWireguardVpnServer:
          type: boolean
        uidWireguardVpnServer:
          type: boolean
        uidOpenVpnServer:
          type: boolean
        ipv4:
          type: string
        localSiteLayer2Network:
          type: boolean
        interVlanRoutingNetwork:
          type: boolean
        vlanOnlyNetwork:
          type: boolean
        lanTunnelWanNetwork:
          type: boolean
        siteAutoVpnNetwork:
          type: boolean
        ipv6SettingPreference:
          type: string
          enum:
          - auto
          - manual
        remoteSiteSubnets:
          type: array
          items:
            type: string
        siteManualVpnNetwork:
          type: boolean
        remoteVpnSubnets:
          type: array
          items:
            type: string
        staticWan:
          type: boolean
        wireguardClientOrServer:
          type: boolean
        ipsecTunnelIpEnabled:
          type: boolean
        legacyNatOutboundIpAddresses:
          type: array
          items:
            $ref: "#/components/schemas/X"
        wanTypeV6:
          type: string
        ipv6WanDelegationTypeOptional:
          type: string
          enum:
          - pd
          - single_network
          - none
        wanDns1:
          type: string
        wanDns2:
          type: string
        firewallZoneId:
          type: string
        dhcpGuardEnabled:
          type: boolean
        domainNameWithDefault:
          type: string
        igmpSnooping:
          type: boolean
        ipv6RaEnabled:
          type: boolean
        multicastDnsEnabled:
          type: boolean
        openVpnAuthorityCertificate:
          type: string
        openVpnServerCertificate:
          type: string
        openVpnAuthKey:
          type: string
        openVpnDhKey:
          type: string
        clientAddressAssignment:
          type: string
          enum:
          - slaac
          - dhcpv6
        ipv6PdAutoPrefixIdEnabled:
          type: boolean
        ipv6PdPrefixId:
          type: integer
          format: int32
        ipv6StaticInterfaceType:
          type: boolean
        wanIpv6DnsPreference:
          type: string
          enum:
          - auto
          - manual
        wan5gNetwork:
          type: boolean
        lanTunnelWanDevice:
          type: string
        uidTrafficRulesEnabled:
          type: boolean
        uidVpnMasqueradeEnabled:
          type: boolean
        sdWanRemoteSiteId:
          type: string
        sdWanHubSpokeConnectionId:
          type: string
        sdWanHubSpokeLocalWanId:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        uidTrafficRulesAllowedIpAndHostnames:
          type: array
          items:
            type: string
        uidWorkspaceUrl:
          type: string
        uidPolicyName:
          type: string
        uidPolicyEnabled:
          type: boolean
        uidVpnCustomRouting:
          type: array
          items:
            type: string
        uidVpnDefaultDnsSuffix:
          type: string
        uidVpnSyncPublicIp:
          type: boolean
        uidVpnMaxConnectionTime:
          type: integer
          format: int32
        optionalWanSla:
          type: string
        ipsecSeparateIkeV2Networks:
          type: boolean
        wanLoadBalanceFailoverOnly:
          type: boolean
        wanLoadBalanceWeighted:
          type: boolean
        defaultLocalAreaNetwork:
          type: boolean
        maskbits:
          type: integer
          format: int32
        uidPublicGatewayPort:
          type: integer
          format: int32
        ipSubnetOrNull:
          type: string
        subnet:
          type: string
        ipV6Subnet:
          type: string
        subnetv6:
          type: string
        gatewayDeviceMac:
          type: string
        vpnProtocol:
          type: string
          enum:
          - TCP
          - UDP
        layer3Network:
          type: boolean
        siteToSiteVpnWithTrafficRoutesSupport:
          type: boolean
        policyBasedIpsecVpn:
          type: boolean
        pptpClientNetwork:
          type: boolean
        anyOpenVpn:
          type: boolean
        anyVpn:
          type: boolean
        requireMsChapV2:
          type: boolean
        customInterfaceMtuEnabled:
          type: boolean
        interfaceMtu:
          type: integer
          format: int32
        ipsecKeyExchange:
          type: string
        ipsecEncryption:
          type: string
          deprecated: true
          enum:
          - aes128
          - aes192
          - aes256
          - 3des
        ipsecEspHash:
          type: string
          enum:
          - md5
          - sha1
          - sha256
          - sha384
          - sha512
        ipsecIkeEncryption:
          type: string
          enum:
          - aes128
          - aes192
          - aes256
          - 3des
        ipsecHash:
          type: string
          deprecated: true
          enum:
          - md5
          - sha1
          - sha256
          - sha384
          - sha512
        ipsecEspLifetime:
          type: integer
          format: int32
        ipsecIkeHash:
          type: string
          enum:
          - md5
          - sha1
          - sha256
          - sha384
          - sha512
        ipsecIkeLifetime:
          type: integer
          format: int32
        ipsecPreSharedKey:
          type: string
        ipsecEspDhGroup:
          type: integer
          format: int32
        ipsecEspEncryption:
          type: string
          enum:
          - aes128
          - aes192
          - aes256
          - 3des
        ipsecIkeDhGroup:
          type: integer
          format: int32
        ipsecLocalIdentifierEnabled:
          type: boolean
        ipsecLocalIdentifier:
          type: string
        ipsecPerfectForwardSecrecy:
          type: boolean
        ipsecRemoteIdentifierEnabled:
          type: boolean
        ipsecRemoteIdentifier:
          type: string
        ipsecTunnelIp:
          type: string
        remoteVpnDynamicSubnetsEnabled:
          type: boolean
        routeNetwork:
          type: boolean
        dsLiteNetwork:
          type: boolean
        defaultLocalSiteLayer2Network:
          type: boolean
        ltetunnelAddrCidr:
          type: string
        remoteSubnets:
          type: array
          items:
            type: string
        noDeletable:
          type: boolean
        interfaceNameOptional:
          type: string
        wanDhcpOptions:
          type: array
          items:
            $ref: "#/components/schemas/X"
        wanIpAliases:
          type: array
          items:
            type: string
        wanProviderCapabilities:
          $ref: "#/components/schemas/A"
        natOutboundIpAddresses:
          type: array
          items:
            $ref: "#/components/schemas/ooOO"
        wanTypeOptional:
          type: string
          enum:
          - dhcp
          - static
          - pppoe
          - dslite
          - disabled
        wanTypeV6Optional:
          type: string
          enum:
          - slaac
          - dhcpv6
          - static
          - disabled
        singleNetworkLan:
          type: string
        wanDsLiteRemoteHost:
          type: string
        ipsecInterface:
          type: string
        ipsecLocalIp:
          type: string
        ipsecPeerIp:
          type: string
        l2tpInterface:
          type: string
        l2tpLocalWanIp:
          type: string
        wanVlanEnabled:
          type: boolean
        wanVlan:
          type: integer
          format: int32
        wanSmartqEnabled:
          type: boolean
        wanSmartqDownRate:
          type: integer
          format: int32
        wanSmartqUpRate:
          type: integer
          format: int32
        dhcpdDns1:
          type: string
        dhcpdDns2:
          type: string
        dhcpdDns3:
          type: string
        dhcpdDns4:
          type: string
        openvpnStrictClientCommonName:
          type: boolean
        dhcpdDnsEnabled:
          type: boolean
        floodUnknownMulticastEnabled:
          type: boolean
        igmpQuerierSwitches:
          type: array
          items:
            $ref: "#/components/schemas/X"
        igmpProxyEnabledFor:
          type: string
          enum:
          - all
          - some
          - none
        igmpProxyDownstreamNetworkIds:
          type: array
          items:
            type: string
        igmpProxyUpstream:
          type: boolean
        ipSubnetInfo:
          $ref: "#/components/schemas/SubnetInfo"
        dhcpRelayEnabled:
          type: boolean
        dhcpdLeasetime:
          type: integer
          format: int32
        dhcpdDnsPrefixedList:
          type: array
          items:
            type: string
        dhcpdv6Start:
          type: string
        dhcpdv6Stop:
          type: string
        internetAccessEnabled:
          type: boolean
        networkIsolationEnabled:
          type: boolean
        wanV6Enabled:
          type: boolean
        ipV6PdNetwork:
          type: boolean
        dpiEnabled:
          type: boolean
        dpiGroupId:
          type: string
        exposedToSiteVpn:
          type: boolean
        routeDistance:
          type: integer
          format: int32
        l2tpAllowWeakCiphers:
          type: boolean
        dhcpdBootEnabled:
          type: boolean
        dhcpdGatewayEnabled:
          type: boolean
        dhcpdNtpEnabled:
          type: boolean
        dhcpdTftpServer:
          type: string
        dhcpdTimeOffsetEnabled:
          type: boolean
        dhcpdUnifiController:
          type: string
        dhcpdWinsEnabled:
          type: boolean
        dhcpdWpadUrl:
          type: string
        dhcpdConflictCheckingEnabled:
          type: boolean
        dhcpdV6DnsAuto:
          type: boolean
        dhcpdV6Leasetime:
          type: integer
          format: int32
        ipv6PdInterface:
          type: string
        ipv6SingleNetworkInterface:
          type: string
        ipv6PdStart:
          type: string
        ipv6PdStop:
          type: string
        ipv6RaPreferredLifetime:
          type: string
        ipv6RaPriority:
          type: string
          enum:
          - high
          - medium
          - low
        upnpLanEnabled:
          type: boolean
        dhcpGateway:
          type: string
        openVpnLocalAddress:
          type: string
        openVpnRemoteHost:
          type: string
        openVpnRemoteAddress:
          type: string
        openVpnTlsRenegotiationTimeout:
          type: integer
          format: int32
        openVpnConfiguration:
          type: string
        openVpnConfigurationFilename:
          type: string
        openVpnConfigurationStatus:
          type: string
          enum:
          - NEW
          - CONNECTION_FAILED
          - VALID
          - VALID_WITHOUT_TESTING
        openVpnUsername:
          type: string
        openVpnPassword:
          type: string
        openVpnId:
          type: integer
          format: int32
        openVpnEncryptionCipher:
          type: string
          enum:
          - AES_256_GCM
          - AES_256_CBC
          - BF_CBC
        vpnClientConfigurationRemoteIpOverrideEnabled:
          type: boolean
        vpnClientConfigurationRemoteIpOverride:
          type: string
        wireguardClientMode: {}
        wireguardClientConfigurationFile:
          type: string
        wireguardClientPeerPublicKey:
          type: string
        wireguardClientPeerIp:
          type: string
        wireguardClientPeerPort:
          type: integer
          format: int32
        wireguardClientPreSharedKey:
          type: string
        wireguardClientPreSharedKeyEnabled:
          type: boolean
        wireguardPrivateKey:
          type: string
        wireguardId:
          type: integer
          format: int32
        wireguardInterface:
          type: string
        wireguardLocalWanIp:
          type: string
        smartSubnetDetected:
          type: boolean
        vrrpPrimaryGatewaySubnetIp:
          type: string
        vrrpSecondaryGatewaySubnetIp:
          type: string
        vrrpVrid:
          type: integer
          format: int32
        equalToLocalNetworkAutoSettings:
          type: boolean
        wanEgressQos:
          type: integer
          format: int32
        openVpnAuthorityKey:
          type: string
        openVpnInterface:
          type: string
        openVpnLocalWanIp:
          type: string
        openVpnServerKey:
          type: string
        openVpnSharedClientCertificate:
          type: string
        openVpnSharedClientKey:
          type: string
        wanDhcpCos:
          type: integer
          format: int32
        ipv6Enabled:
          type: boolean
        allowSlaacEnabled:
          type: boolean
        ipv6DefaultPrefixLength:
          type: boolean
        dhcpv6AddressAssignment:
          type: boolean
        ipv6AutoPreference:
          type: boolean
        ipv6PdPrefixIdAutoCalculated:
          type: boolean
        dhcpv6Configured:
          type: boolean
        wanDhcpv6PdSize:
          type: integer
          format: int32
        wanIpV6PdNetwork:
          type: boolean
        wanIpv6Dns1:
          type: string
        wanIpv6Dns2:
          type: string
        remoteSiteId:
          type: string
        igmpFastleaveEnabled:
          type: boolean
        igmpMaxResponseTime:
          type: integer
          format: int32
        igmpMcrtrExpireTime:
          type: integer
          format: int32
        igmpGroupMembershipInterval:
          type: integer
          format: int32
        igmpReportSuppressionEnabled:
          type: boolean
        wanPppoeUsernameEnabled:
          type: boolean
        wanPppoePasswordEnabled:
          type: boolean
        wanPppoeUsername:
          type: string
        wanPppoePassword:
          type: string
        ipv6SlaacClientAddressAssignment:
          type: boolean
        ipv6SingleNetwork:
          type: boolean
        wanFailoverFirstPriority:
          type: boolean
        wanNetworkAndNotLteFailover:
          type: boolean
        wanMagicEnabled:
          type: boolean
        wanMagicNetwork:
          type: boolean
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        changes:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        originalFieldValues:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
    ? OoOoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
    : properties:
        last_ipv6:
          type: array
          items:
            type: string
        ipv4_lease_expiration_timestamp_seconds:
          type: integer
          format: int64
        virtual_network_override_enabled:
          type: boolean
        mac:
          type: string
        last_ip:
          type: string
        fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        unifi_device_info:
          $ref: "#/components/schemas/F"
        display_name:
          type: string
        unifi_device:
          type: boolean
        rx_rate:
          type: integer
          format: int64
        oui:
          type: string
        uplink_mac:
          type: string
        last_uplink_name:
          type: string
        hostname:
          type: string
        dhcpend_time:
          type: integer
          format: int64
        latest_assoc_time:
          type: integer
          format: int64
        first_seen:
          type: integer
          format: int64
        fixed_ip:
          type: string
        gw_mac:
          type: string
        idletime:
          type: integer
          format: int32
        "1x_identity":
          type: string
        is_guest:
          type: boolean
        is_wired:
          type: boolean
        user_id:
          type: string
        usergroup_id:
          type: string
        use_fixedip:
          type: boolean
        blocked:
          type: boolean
        tx_rate:
          type: integer
          format: int64
        local_dns_record_enabled:
          type: boolean
        local_dns_record:
          type: string
        virtual_network_override_id:
          type: string
        detailed_states:
          $ref: "#/components/schemas/oo0o"
        last_connection_network_id:
          type: string
        last_connection_network_name:
          type: string
        last_uplink_mac:
          type: string
        is_allowed_in_visual_programming:
          type: boolean
        anomalies:
          type: integer
          format: int64
        authorized:
          type: boolean
        note:
          type: string
        noted:
          type: boolean
        Last 24h usage in bytes:
          type: number
          format: double
        vlan:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
            enum:
            - connection_type_gateway_device
            - connection_type_wired_device
            - connection_type_wireless_device
            - connected_unifi_client
            - connected_client
            - connected_wired_client
            - connected_wireless_client
            - connected_guest
            - connected_unifi_access_client
            - connected_unifi_apollo_client
            - connected_unifi_connect_client
            - connected_unifi_drive_client
            - connected_unifi_led_client
            - connected_unifi_network_client
            - connected_unifi_protect_client
            - connected_unifi_talk_client
          uniqueItems: true
        name:
          type: string
        site_id:
          type: string
        tx_bytes:
          type: integer
          format: int64
        rx_bytes:
          type: integer
          format: int64
        assoc_time:
          type: integer
          format: int64
        ip:
          type: string
        last_seen:
          type: integer
          format: int64
        rx_bytes-r:
          type: integer
          format: int64
        uptime:
          type: integer
          format: int64
        network_id:
          type: string
        id:
          type: string
        network_members_group_ids:
          type: array
          items:
            type: string
          uniqueItems: true
        status:
          type: string
          enum:
          - online
          - offline
        rx_packets:
          type: integer
          format: int64
        tx_bytes-r:
          type: integer
          format: int64
        tx_packets:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - WIRED
          - WIRELESS
          - VPN
          - TELEPORT
        ipv6_address:
          type: array
          items:
            type: string
        model_name:
          type: string
        network_name:
          type: string
    SubnetInfo:
      properties:
        address:
          type: string
        lowAddress:
          type: string
        highAddress:
          type: string
        netmask:
          type: string
        networkAddress:
          type: string
        addressCountLong:
          type: integer
          format: int64
        addressCount:
          type: integer
          format: int32
          deprecated: true
        cidrSignature:
          type: string
        broadcastAddress:
          type: string
        allAddresses:
          type: array
          items:
            type: string
        nextAddress:
          type: string
        previousAddress:
          type: string
    VisualProgrammingResponseDto:
      properties:
        networkconf:
          $ref: "#/components/schemas/NetworkConf"
        clients:
          type: array
          items:
            $ref: "#/components/schemas/OoOoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"
    oo0o:
      properties:
        uplink_near_power_limit:
          type: boolean
    ooOO: {}
    Cellular Network:
      description: Wlan Hotspot2 Cellular Network
      properties:
        Mobile Country Code:
          type: string
        Mobile Network Code:
          type: string
        Cellular Network Name:
          type: string
        Cellular Network Country Code:
          type: string
    Connection Capability:
      description: Wlan Hotspot2 Connection Capability
      properties:
        Status:
          type: string
          enum:
          - closed
          - open
          - unknown
        Port:
          type: integer
          format: int32
        Protocol:
          type: string
          enum:
          - icmp
          - tcp_udp
          - tcp
          - udp
          - esp
    Friendly Name:
      description: Wlan Hotspot2 Friendly Name
      properties:
        Text:
          type: string
        Language:
          type: string
    Hotspot2VenueNameDto:
      properties:
        Name:
          type: string
        Language:
          type: string
    Nai Realm:
      description: Wlan Hotspot2 NAI Realm
      properties:
        NAI Realm EAP Method:
          type: string
          enum:
          - "13"
          - "18"
          - "21"
          - "23"
          - "50"
        NAI Realm Auth IDs:
          type: array
          items:
            type: string
            enum:
            - "0"
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
        NAI Realm Name:
          type: string
        NAI Realm status:
          type: boolean
        NAI Realm Encoding:
          type: string
          enum:
          - "0"
          - "1"
        NAI Realm Auth Values:
          type: array
          items:
            type: string
    Roaming Consortium:
      description: Wlan Hotspot2 Roaming Consortium (Partners)
      properties:
        ID of the organization:
          type: string
        name of the organization:
          type: string
    WLAN Configuration:
      description: WLAN Configuration
      properties:
        between 2 and 4009:
          type: integer
          format: int32
          example: 21
          maximum: 4009
          minimum: 2
        _id:
          type: string
          example: 5e6285ec05938c3d128aaf07
          readOnly: true
        attr_hidden_id:
          type: string
          enum:
          - "Uid,UidIot,UidOnboarding,UidPortal"
        enabled:
          type: boolean
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        enhanced_iot:
          type: boolean
        iapp_enabled:
          type: boolean
        x_iapp_key:
          type: string
        hide_ssid:
          type: boolean
        priority:
          type: string
          enum:
          - medium
          - high
          - low
        security:
          type: string
          enum:
          - open
          - osen
          - wep
          - wpaeap
          - wpapsk
        name:
          type: string
        wlan_band:
          type: string
          enum:
          - 2g
          - 5g
          - 6g
          - both
          - unknown
        wlan_bands:
          type: array
          items:
            type: string
            enum:
            - 2g
            - 5g
            - 6g
            - both
            - unknown
        is_guest:
          type: boolean
        wpa_mode:
          type: string
          enum:
          - auto
          - wpa1
          - wpa2
        wpa_enc:
          type: string
          enum:
          - auto
          - ccmp
          - gcmp
          - ccmp-256
          - gcmp-256
        p2p:
          type: boolean
        p2p_cross_connect:
          type: boolean
        proxy_arp:
          type: boolean
        l2_isolation:
          type: boolean
        tdls_prohibit:
          type: boolean
        bss_transition:
          type: boolean
        auth_cache:
          type: boolean
        used for WPA EAP and PPSK:
          type: string
          example: 5e66097d05938c4218b013a9
        vlan_enabled:
          type: boolean
        mac_filter_enabled:
          type: boolean
        mac_filter_policy:
          type: string
          enum:
          - allow
          - deny
        mac_filter_list:
          type: array
          example:
          - aa:bb:cc:dd:ee:ff
          items:
            type: string
        bc_filter_enabled:
          type: boolean
        bc_filter_list:
          type: array
          example:
          - aa:bb:cc:dd:ee:ff
          items:
            type: string
        country_beacon:
          type: boolean
        optimize_iot_wifi_connectivity:
          type: boolean
        dtim_mode:
          type: string
          enum:
          - default
          - custom
        DTIM 5G Period:
          type: integer
          format: int32
          enum:
          - "range[1, 255]"
          example: 1
          maximum: 255
          minimum: 1
        DTIM 2G Period:
          type: integer
          format: int32
          enum:
          - "range[1, 255]"
          example: 1
          maximum: 255
          minimum: 1
        DTIM 6G Period:
          type: integer
          format: int32
          enum:
          - "range[1, 255]"
          example: 1
          maximum: 255
          minimum: 1
        Period of GTK rekeying, in seconds. 0 is disabled.:
          type: integer
          format: int32
          example: 0
        Enable 802.11r fast roaming:
          type: boolean
        Enable 802.11r fast roaming for SAE/WPA3:
          type: boolean
        rrm_enabled:
          type: boolean
        Enable HotSpot 2.0:
          type: boolean
        The ID of the HotSpot 2.0 profile to use for this wireless network:
          type: string
        Enable multicast enhancement (IGMPv3):
          type: boolean
        Data Rate Control Preference:
          type: string
          enum:
          - auto
          - manual
        minrate_na_advertising_rates:
          type: boolean
          description: "By setting this to true, the AP will only advertise rates\
            \ greater or equal to given data_rate_kbps"
        minrate_na_data_rate_kbps:
          type: integer
          format: int32
          enum:
          - "6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000"
          example: 36000
        Enable minrate on 5GHz network:
          type: boolean
        minrate_ng_advertising_rates:
          type: boolean
          description: "By setting this to true, the AP will only advertise rates\
            \ greater or equal to given data_rate_kbps"
        minrate_ng_data_rate_kbps:
          type: integer
          format: int32
          enum:
          - "1000, 2000, 5500, 6000, 9000, 11000, 12000, 18000, 24000, 36000, 48000,\
            \ 54000"
          example: 36000
        minrate_ng_enabled:
          type: boolean
        Enable Blocking clients from the 2G band:
          type: boolean
        pmf_mode:
          type: string
          enum:
          - disabled
          - optional
          - required
        element_adopt:
          type: boolean
        Enable RFC 5176 RADIUS DAS/DAC (CoA):
          type: boolean
        radius_mac_auth_enabled:
          type: boolean
        Allow empty password:
          type: boolean
        radius_macacl_format:
          type: string
          enum:
          - none_lower
          - hyphen_lower
          - colon_lower
          - none_upper
          - hyphen_upper
          - colon_upper
        schedule:
          type: array
          example:
          - mon-fri|0800-1900
          - sat|1000-1500
          items:
            type: string
        schedule_with_duration:
          type: array
          items:
            $ref: "#/components/schemas/WLAN schedule configuration entry"
        schedule_enabled:
          type: boolean
        schedule_reversed:
          type: boolean
        Enabled Unscheduled Automatic Power Save Delivery:
          type: boolean
        Enabled Deep Packed Inspection:
          type: boolean
        dpigroup_id:
          type: string
        usergroup_id:
          type: string
        networkconf_id:
          type: string
        roam_cluster_id:
          type: integer
          format: int32
        wep_idx:
          type: integer
          format: int32
          enum:
          - "range[1, 4]"
          example: 2
          maximum: 4
          minimum: 1
        ap_group_ids:
          type: array
          items:
            type: string
        AP Group Mode. "groups" if not present:
          type: string
          enum:
          - all
          - groups
          - devices
          example: groups
        WPA-PSK:
          type: string
        WEP key:
          type: string
        PSK RADIUS mode for WPA-PPSK networks:
          type: string
          enum:
          - disabled
          - optional
          - required
        PMF Cipher Encryption:
          type: string
          enum:
          - auto
          - aes-128-cmac
          - bip-gmac-256
        WPA3 support:
          type: boolean
        WPA2 legacy mode support:
          type: boolean
        WPA3 EAP Enhanced Security 192bit:
          type: boolean
        SAE PSK is VLAN required?:
          type: boolean
        sae_anti_clogging:
          type: integer
          format: int32
          description: "SAE anti-clogging threshold in seconds, typically 5?"
          example: 5
        sae_sync:
          type: integer
          format: int32
          description: SAE sync error threshold - how many sync errors a station can
            have before being disconnected; typically 5
          example: 5
        sae_groups:
          type: array
          description: List of encryption groups; each protocol will have a default
            eg 19 for SAE
          items:
            type: integer
            format: int32
        per-SSID log level:
          type: integer
          format: int32
          enum:
          - "range[0, 4]"
          example: 1
          maximum: 4
          minimum: 0
        sae_psk:
          type: array
          items:
            $ref: "#/components/schemas/Wlan Pre-Shared-Key Entry"
        uid_workspace_url:
          type: string
        Private Pre-Shared Keys enabled:
          type: boolean
        Private Pre-Shared Keys:
          type: array
          items:
            $ref: "#/components/schemas/Wlan Pre-Shared Key"
        Hotspot2 Configuration:
          $ref: "#/components/schemas/Wlan Hotspot2 Config"
        NAS Identifier Type:
          type: string
          enum:
          - ap_name
          - ap_mac
          - bssid
          - site_name
          - custom
        NAS Identifier:
          type: string
      required:
      - ap_group_ids
      - attr_hidden_id
      - name
      - security
      - usergroup_id
      - wlan_band
    WLAN schedule configuration entry:
      description: Supports duration in minutes
      properties:
        start_days_of_week:
          type: array
          items:
            type: string
            enum:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
        start_hour:
          type: integer
          format: int32
          example: 1
          maximum: 23
          minimum: 0
        start_minute:
          type: integer
          format: int32
          example: 1
          maximum: 59
          minimum: 0
        duration_minutes:
          type: integer
          format: int32
          example: 1
          minimum: 1
        name:
          type: string
      required:
      - duration_minutes
      - start_days_of_week
      - start_hour
      - start_minute
    Wlan Hotspot2 Config:
      description: Hotspot2 configuration details for WLAN network
      properties:
        Friendly Name:
          type: array
          items:
            $ref: "#/components/schemas/Friendly Name"
        Venue Name List:
          type: array
          items:
            $ref: "#/components/schemas/Hotspot2VenueNameDto"
        Venue Group:
          type: string
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "6"
          - "7"
          - "8"
          - "9"
          - "10"
          - "11"
        Venue Type based on venue group:
          type: integer
          format: int32
        Network Type:
          type: string
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "14"
          - "15"
        IPv4 Address Type Availability:
          type: string
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "6"
          - "7"
        IPv6 Address Type Availability:
          type: string
          enum:
          - "0"
          - "1"
          - "2"
        NAI Realm List:
          type: array
          items:
            $ref: "#/components/schemas/Nai Realm"
        Roaming Consortium List:
          type: array
          items:
            $ref: "#/components/schemas/Roaming Consortium"
        Domain Name List:
          type: array
          items:
            type: string
        Cellular Network List:
          type: array
          items:
            $ref: "#/components/schemas/Cellular Network"
        Metrics Status:
          type: boolean
        Metrics Info:
          type: string
          enum:
          - up
          - down
          - test
        Metrics Symmetric:
          type: boolean
        Metrics Downlink Speed Enabled:
          type: boolean
        Metrics Downlink Speed:
          type: integer
          format: int32
        Metrics Uplink Speed Enabled:
          type: boolean
        Metrics Uplink Speed:
          type: integer
          format: int32
        Metrics Downlink Load Enabled:
          type: boolean
        Metrics Downlink Load:
          type: integer
          format: int32
        Metrics Uplink Load Enabled:
          type: boolean
        Metrics Uplink Load:
          type: integer
          format: int32
        Metrics Measurement Enabled:
          type: boolean
        Metrics Measurement:
          type: integer
          format: int32
        Connection Capability:
          type: array
          items:
            $ref: "#/components/schemas/Connection Capability"
        Metrics Info At Capacity:
          type: boolean
    Wlan Pre-Shared Key:
      description: associates a Pre-Shared Key with Network
      properties:
        WiFi Password:
          type: string
        Network ID:
          type: string
      required:
      - Network ID
      - WiFi Password
    Wlan Pre-Shared-Key Entry:
      description: associates a pre-shared key with a station identifier set and possibly
        a VLAN
      properties:
        pre-shared-key for station:
          type: string
        mac:
          type: string
          example: aa:bb:cc:dd:ee:ff
        optional VLAN ID between 2 and 4009:
          type: integer
          format: int32
          example: 21
          maximum: 4009
          minimum: 2
        Station ID:
          type: string
      required:
      - pre-shared-key for station
    TrafficRuleBandwidthLimitDto:
      properties:
        enabled:
          type: boolean
        download_limit_kbps:
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        upload_limit_kbps:
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
    TrafficRuleDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
        description:
          type: string
        action:
          type: string
          enum:
          - ALLOW
          - BLOCK
        matching_target:
          type: string
          enum:
          - APP
          - APP_CATEGORY
          - DOMAIN
          - INTERNET
          - IP
          - LOCAL_NETWORK
          - REGION
        app_category_ids:
          type: array
          items:
            type: integer
            format: int32
        app_ids:
          type: array
          items:
            type: integer
            format: int32
        domains:
          type: array
          items:
            $ref: "#/components/schemas/TrafficDomainDto"
        ip_addresses:
          type: array
          items:
            $ref: "#/components/schemas/TrafficIpDto"
        ip_ranges:
          type: array
          items:
            $ref: "#/components/schemas/TrafficIpRangeDto"
        network_ids:
          type: array
          items:
            type: string
        regions:
          type: array
          items:
            type: string
        Traffic direction used for "Internet" and "Local Network" targets:
          type: string
          enum:
          - FROM
          - FROM_AND_TO
          - TO
        target_devices:
          type: array
          items:
            $ref: "#/components/schemas/TrafficTargetDeviceDto"
        schedule:
          $ref: "#/components/schemas/TrafficRuleScheduleDto"
        bandwidth_limit:
          $ref: "#/components/schemas/TrafficRuleBandwidthLimitDto"
      required:
      - action
      - matching_target
      - target_devices
    TrafficRuleScheduleDto:
      properties:
        mode:
          type: string
          enum:
          - ALWAYS
          - EVERY_DAY
          - EVERY_WEEK
          - ONE_TIME_ONLY
          - CUSTOM
        repeat_on_days:
          type: array
          description: "Repeat on on days. Applicable to: EVERY_WEEK, CUSTOM"
          example:
          - sun
          items:
            type: string
            enum:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
        time_all_day:
          type: boolean
          description: "Rule will be running for all day. Time range start/end are\
            \ ignored. Applicable to: EVERY_WEEK, CUSTOM"
        time_range_start:
          type: string
          description: "Start time in 24 hours format. Applicable to: EVERY_DAY, EVERY_WEEK,\
            \ ONE_TIME_ONLY, CUSTOM"
          example: 11:30
        time_range_end:
          type: string
          description: "End time in 24 hours format. It accepts 24:00 as end of the\
            \ day. Applicable to: EVERY_DAY, EVERY_WEEK, ONE_TIME_ONLY, CUSTOM"
          example: 21:15
        date:
          type: string
          format: date
          description: "Start date. Applicable to: ONE_TIME_ONLY"
          example: 2021-07-13
        'Start date. Applicable to: CUSTOM':
          type: string
          format: date
          example: 2021-07-13
        'End date. Applicable to: CUSTOM':
          type: string
          format: date
          example: 2021-08-14
      required:
      - mode
    Alert setting update payload:
      properties:
        Alert setting preference:
          type: string
          enum:
          - "OFF"
          - AUTO
          - "ON"
        Alert event settings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Alert setting update payload"
        Alert type settings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Alert setting update payload"
      required:
      - Alert setting preference
    Alert type specific settings:
      properties:
        System Log Event label:
          type: string
        System Log category:
          type: string
          enum:
          - MONITORING
          - INTERNET
          - POWER
          - SECURITY
          - SYSTEM
          - UNKNOWN
        System Log subcategory:
          type: string
          enum:
          - MONITORING_GUEST_HOTSPOT
          - MONITORING_STATUS
          - MONITORING_WIFI
          - MONITORING_WIRED
          - INTERNET_OUTAGE_AND_FAILOVER
          - INTERNET_PERFORMANCE
          - POWER_POE
          - POWER_REDUNDANCY
          - SECURITY_FIREWALL
          - SECURITY_HONEYPOT
          - SECURITY_INTRUSION_PREVENTION
          - SYSTEM_ADMIN
          - SYSTEM_DEVICES
          - SYSTEM_NETWORK
          - SYSTEM_VPN
          - SYSTEM_WIFI
          - UNKNOWN
        Enable sending mobile push notification:
          type: boolean
        Enable sending email:
          type: boolean
    System Log Settings:
      properties:
        System Log Setting preference:
          type: string
          enum:
          - "OFF"
          - AUTO
          - "ON"
        System Log Event settings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Alert type specific settings"
      required:
      - System Log Setting preference
    MissingFingerprint:
      properties:
        mac:
          type: string
        dev_type:
          type: string
        dev_vendor:
          type: string
        dev_model:
          type: string
    FingerprintOverride:
      properties:
        mac:
          type: string
        dev_id_override:
          type: integer
          format: int32
        search_query:
          type: string
        fp_ml_version:
          type: integer
          format: int32
    Static DNS:
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65535
          minimum: 0
        value:
          type: string
        _id:
          type: string
        enabled:
          type: boolean
        key:
          type: string
        port:
          type: integer
          format: int32
          maximum: 65535
          minimum: 0
        ttl:
          type: integer
          format: int32
          maximum: 604800
          minimum: 0
        weight:
          type: integer
          format: int32
          maximum: 65535
          minimum: 0
        record_type:
          type: string
          enum:
          - A
          - AAAA
          - CNAME
          - MX
          - NS
          - SRV
          - TXT
      required:
      - key
      - value
    StackingGroupDto:
      properties:
        name:
          type: string
        _id:
          type: string
        description:
          type: string
        units:
          type: array
          items:
            $ref: "#/components/schemas/StackingUnitDto"
        links:
          type: array
          items:
            $ref: "#/components/schemas/StackingLinkDto"
        lagGroups:
          type: array
          items:
            $ref: "#/components/schemas/StackingLagGroupDto"
      required:
      - lagGroups
      - links
      - units
    StackingLagDto:
      properties:
        ports:
          type: array
          items:
            type: integer
            format: int32
        unit_index:
          type: integer
          format: int32
          maximum: 4
          minimum: 1
    StackingLagGroupDto:
      properties:
        id:
          type: integer
          format: int32
        unitLags:
          type: array
          items:
            $ref: "#/components/schemas/StackingLagDto"
    StackingLinkDto:
      properties:
        left_unit_index:
          type: integer
          format: int32
        left_ports:
          type: array
          items:
            type: integer
            format: int32
        right_unit_index:
          type: integer
          format: int32
        right_ports:
          type: array
          items:
            type: integer
            format: int32
    StackingUnitDto:
      properties:
        index:
          type: integer
          format: int32
          maximum: 4
          minimum: 1
        mac:
          type: string
        role:
          type: string
          enum:
          - MASTER
          - BACKUP
          - MEMBER
      required:
      - role
    FeatureShortcutDto:
      allOf:
      - $ref: "#/components/schemas/ShortcutDto"
      - type: object
        properties:
          featureName:
            type: string
            enum:
            - WIFI_AGENT
            - ISP_SPEEDTEST
            - TRAFFIC_STATS
            - TELEPORT
            - TOPOLOGY
            - AR
            - NEW_WIFI
            - WIFI_SIGNAL
            - VPN
            - AD_BLOCK
            - FIREWALL
            - ADMINS
      required:
      - featureName
      - id
      - type
    ShortcutDto:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          enum:
          - WIFI
          - NETWORK
          - VPN_SERVER
          - VPN_CLIENT
          - S2S_VPN
          - POLICY_BASED_ROUTING
          - PORT_FORWARDING
          - FEATURE
        id:
          type: string
      required:
      - id
      - type
    ShortcutsDto:
      properties:
        shortcuts:
          type: array
          items:
            $ref: "#/components/schemas/ShortcutDto"
      required:
      - shortcuts
    ToggleShortcutDto:
      allOf:
      - $ref: "#/components/schemas/ShortcutDto"
      - type: object
        properties:
          status:
            type: string
            enum:
            - ENABLED
            - DISABLED
            - NOT_RESOLVED
          resolvedEntityName:
            type: string
          referenceId:
            type: string
      required:
      - id
      - referenceId
      - type
    RadiusProfileDto:
      properties:
        _id:
          type: string
        attr_hidden_id:
          type: string
        attr_no_delete:
          type: boolean
        attr_no_edit:
          type: boolean
        name:
          type: string
        vlan_enabled:
          type: boolean
        vlan_wlan_mode:
          type: string
          enum:
          - disabled
          - optional
          - required
        auth_servers:
          type: array
          items:
            $ref: "#/components/schemas/RadiusServerDto"
        accounting_enabled:
          type: boolean
        acct_servers:
          type: array
          items:
            $ref: "#/components/schemas/RadiusServerDto"
        interim_update_enabled:
          type: boolean
        interim_update_interval:
          type: integer
          format: int32
      required:
      - auth_servers
      - name
    RadiusServerDto:
      properties:
        ip:
          type: string
        port:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        x_secret:
          type: string
      required:
      - ip
      - x_secret
    FirewallPolicyScheduleDto:
      properties:
        date:
          type: string
          format: date
          description: "Start date. Applicable to: ONE_TIME_ONLY"
          example: 2021-07-13
        mode:
          type: string
          enum:
          - ALWAYS
          - EVERY_DAY
          - EVERY_WEEK
          - ONE_TIME_ONLY
          - CUSTOM
        repeat_on_days:
          type: array
          description: "Repeat on on days. Applicable to: EVERY_WEEK, CUSTOM"
          example:
          - sun
          items:
            type: string
            enum:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
        time_all_day:
          type: boolean
          description: "Rule will be running for all day. Time range start/end are\
            \ ignored. Applicable to: EVERY_WEEK, CUSTOM"
        time_range_start:
          type: string
          description: "Start time in 24 hours format. Applicable to: EVERY_DAY, EVERY_WEEK,\
            \ ONE_TIME_ONLY, CUSTOM"
          example: 11:30
        time_range_end:
          type: string
          description: "End time in 24 hours format. It accepts 24:00 as end of the\
            \ day. Applicable to: EVERY_DAY, EVERY_WEEK, ONE_TIME_ONLY, CUSTOM"
          example: 21:15
        'Start date. Applicable to: CUSTOM':
          type: string
          format: date
          example: 2021-07-13
        'End date. Applicable to: CUSTOM':
          type: string
          format: date
          example: 2021-08-14
      required:
      - mode
    FirewallQosDestinationAnyDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationAppCategoryDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      - type: object
        properties:
          app_category_ids:
            type: array
            items:
              type: integer
              format: int32
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationAppDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      - type: object
        properties:
          app_ids:
            type: array
            items:
              type: integer
              format: int32
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationDto:
      discriminator:
        propertyName: matching_target
      properties:
        port:
          type: string
        matching_target:
          type: string
          enum:
          - ANY
          - APP
          - APP_CATEGORY
          - IP
          - WEB
          - REGION
        port_matching_type:
          type: string
          enum:
          - ANY
          - SPECIFIC
          - OBJECT
        matching_target_type:
          type: string
          enum:
          - SPECIFIC
          - OBJECT
        port_group_id:
          type: string
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationIpDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      - type: object
        properties:
          ips:
            type: array
            items:
              type: string
          ip_group_id:
            type: string
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationRegionDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      - type: object
        properties:
          regions:
            type: array
            items:
              type: string
      required:
      - matching_target
      - port_matching_type
    FirewallQosDestinationWebDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosDestinationDto"
      - type: object
        properties:
          web_matching_type:
            type: string
            enum:
            - ADS
            - FAMILY
            - WORK
            - CUSTOM
          web_domains:
            type: array
            items:
              type: string
          web_group_id:
            type: string
      required:
      - matching_target
      - port_matching_type
      - web_matching_type
    FirewallQosSourceAnyDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosSourceDto"
      required:
      - matching_target
    FirewallQosSourceClientDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosSourceDto"
      - type: object
        properties:
          client_macs:
            type: array
            items:
              type: string
      required:
      - matching_target
    FirewallQosSourceDto:
      discriminator:
        propertyName: matching_target
      properties:
        matching_target:
          type: string
          enum:
          - ANY
          - CLIENT
          - NETWORK
      required:
      - matching_target
    FirewallQosSourceNetworkDto:
      allOf:
      - $ref: "#/components/schemas/FirewallQosSourceDto"
      - type: object
        properties:
          network_ids:
            type: array
            items:
              type: string
      required:
      - matching_target
    QosRuleDto:
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        _id:
          type: string
        source:
          $ref: "#/components/schemas/FirewallQosSourceDto"
        enabled:
          type: boolean
        schedule:
          $ref: "#/components/schemas/FirewallPolicyScheduleDto"
        destination:
          $ref: "#/components/schemas/FirewallQosDestinationDto"
        objective:
          type: string
          enum:
          - LIMIT
          - PRIORITIZE
          - LIMIT_AND_PRIORITIZE
        wan_or_vpn_network:
          type: string
        download_limit_kbps:
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        upload_limit_kbps:
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        download_burst:
          type: string
          enum:
          - "OFF"
          - SHORT
          - LONG
        upload_burst:
          type: string
          enum:
          - "OFF"
          - SHORT
          - LONG
      required:
      - destination
      - objective
      - schedule
      - source
    QosRuleUpdateDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
      required:
      - _id
    OSPF Area:
      properties:
        name:
          type: string
        network_ids:
          type: array
          items:
            type: string
        area_id:
          type: string
        area_type:
          type: string
          enum:
          - normal
          - nssa
          - stub
      required:
      - area_id
      - area_type
      - name
    OSPF Interface:
      properties:
        priority:
          type: integer
          format: int32
          minimum: 1
        cost:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        authentication_type:
          type: string
          enum:
          - "off"
          - plain_text
          - md5
        network_id:
          type: string
        plain_text_authentication_key:
          type: string
        md5_authentication_keys:
          type: array
          items:
            $ref: "#/components/schemas/OSPF MD5 Authentication Key"
        passive_interface:
          type: boolean
        hello_interval:
          type: integer
          format: int32
        dead_interval:
          type: integer
          format: int32
      required:
      - authentication_type
      - network_id
    OSPF MD5 Authentication Key:
      properties:
        id:
          type: integer
          format: int32
          maximum: 255
          minimum: 1
        key:
          type: string
      required:
      - key
    OSPF Router:
      properties:
        interfaces:
          type: array
          items:
            $ref: "#/components/schemas/OSPF Interface"
        _id:
          type: string
        enabled:
          type: boolean
        router_id:
          type: string
        announce_default_route:
          type: boolean
        redistribute_static_routes:
          type: boolean
        redistribute_static_routes_metric_type:
          type: string
          enum:
          - e1
          - e2
        redistribute_connected_routes:
          type: boolean
        redistribute_connected_routes_metric_type:
          type: string
          enum:
          - e1
          - e2
        areas:
          type: array
          items:
            $ref: "#/components/schemas/OSPF Area"
      required:
      - router_id
    NetworkMembersGroupDto:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
          - CLIENTS
          - USERS
        name:
          type: string
          maxLength: 100
          minLength: 1
        members:
          type: array
          items:
            type: string
      required:
      - members
      - name
      - type
    BatchNatRuleUpdatePartDto:
      properties:
        _id:
          type: string
        rule_index:
          type: integer
          format: int32
          minimum: 0
      required:
      - _id
    NAT Rule Filter:
      properties:
        port:
          type: string
        address:
          type: string
        filter_type:
          type: string
          enum:
          - NONE
          - FIREWALL_GROUPS
          - NETWORK_CONF
          - ADDRESS_AND_PORT
        firewall_group_ids:
          type: array
          items:
            type: string
        network_conf_id:
          type: string
        invert_address:
          type: boolean
        invert_port:
          type: boolean
      required:
      - filter_type
    NAT Rules:
      properties:
        ip_address:
          type: string
        type:
          type: string
          enum:
          - MASQUERADE
          - SNAT
          - DNAT
        _id:
          type: string
        enabled:
          type: boolean
        port:
          type: string
        protocol:
          type: string
        description:
          type: string
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        logging:
          type: boolean
        exclude:
          type: boolean
        in_interface:
          type: string
        out_interface:
          type: string
        rule_index:
          type: integer
          format: int32
          minimum: 0
        is_predefined:
          type: boolean
        source_filter:
          $ref: "#/components/schemas/NAT Rule Filter"
        destination_filter:
          $ref: "#/components/schemas/NAT Rule Filter"
        pppoe_use_base_interface:
          type: boolean
    MicroSegmentGroupDto:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
        members:
          type: array
          items:
            $ref: "#/components/schemas/MicroSegmentMemberDto"
        id:
          type: string
        block_internet:
          type: boolean
      required:
      - members
      - name
    MicroSegmentMemberDto:
      properties:
        type:
          type: string
          enum:
          - DEVICE
        id:
          type: string
          maxLength: 100
          minLength: 1
      required:
      - id
      - type
    LinkAggregationGroupPairDto:
      properties:
        mc_lag_index:
          type: integer
          format: int32
        top:
          type: array
          items:
            type: integer
            format: int32
        bottom:
          type: array
          items:
            type: integer
            format: int32
      required:
      - bottom
      - top
    McLagGroupDto:
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        peers:
          $ref: "#/components/schemas/McLagPeersDto"
        stacking:
          type: boolean
        mc_link:
          $ref: "#/components/schemas/LinkAggregationGroupPairDto"
        target_links:
          type: array
          items:
            $ref: "#/components/schemas/LinkAggregationGroupPairDto"
      required:
      - mc_link
      - peers
      - target_links
    McLagPeersDto:
      properties:
        top:
          type: string
        bottom:
          type: string
      required:
      - bottom
      - top
    EnableLteFailoverRequest:
      properties:
        List of NetworkConf IDs:
          type: array
          example:
          - 5f34deebb7d2d806b7f62411
          - 5f34deebb7d2d806b7f62413
          items:
            type: string
      required:
      - List of NetworkConf IDs
    GlobalNetworkConfigDto:
      properties:
        igmp_snooping_for:
          type: string
          enum:
          - all
          - some
          - none
        igmp_snooping_for_network_ids:
          type: array
          items:
            type: string
        flood_unknown_multicast_for_network_ids:
          type: array
          items:
            type: string
        igmp_fastleave_for_network_ids:
          type: array
          items:
            type: string
        igmp_querier_switches:
          type: array
          items:
            $ref: "#/components/schemas/IgmpQuerierSwitchDto"
        mdns_enabled_for:
          type: string
          enum:
          - all
          - some
          - none
        mdns_enabled_for_network_ids:
          type: array
          items:
            type: string
        ipv6_pd_interfaces:
          type: array
          items:
            $ref: "#/components/schemas/WanGroupDto"
      required:
      - igmp_snooping_for
      - igmp_snooping_for_network_ids
      - mdns_enabled_for
      - mdns_enabled_for_network_ids
    IgmpQuerierSwitchDto:
      properties:
        network_id:
          type: string
        mac:
          type: string
        querier_address:
          type: string
      required:
      - mac
      - network_id
    WanGroupDto:
      properties:
        wan_id:
          type: string
        wan_networkgroup:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
    FloorPlanDto:
      properties:
        type:
          type: string
          enum:
          - real
          - blank
          - sample
        _id:
          type: string
        title:
          type: string
      required:
      - title
      - type
    FloorPlanDeviceDto:
      allOf:
      - $ref: "#/components/schemas/FloorPlanShapeDto"
      - type: object
        properties:
          position:
            type: array
            items:
              $ref: "#/components/schemas/FloorPlanPositionDto"
          mac:
            type: string
          rotation:
            $ref: "#/components/schemas/FloorPlanShapeRotationDto"
      required:
      - plan_id
      - rotation
      - uuid
    FloorPlanMapDto:
      allOf:
      - $ref: "#/components/schemas/FloorPlanShapeDto"
      - type: object
        properties:
          rotation:
            type: integer
            format: int32
          url_image:
            type: string
          opacity:
            type: number
            format: double
      required:
      - plan_id
      - url_image
      - uuid
    FloorPlanPositionDto:
      properties:
        x:
          type: number
          format: double
        z:
          type: number
          format: double
        "y":
          type: number
          format: double
    FloorPlanRotationDto:
      properties:
        x:
          type: number
          format: double
        z:
          type: number
          format: double
        w:
          type: number
          format: double
        "y":
          type: number
          format: double
    FloorPlanScaleDto:
      allOf:
      - $ref: "#/components/schemas/FloorPlanShapeDto"
      - type: object
        properties:
          scale:
            type: integer
            format: int32
          position:
            type: array
            items:
              $ref: "#/components/schemas/FloorPlanPositionDto"
          height:
            type: number
            format: double
          default_scale:
            type: boolean
          default_height:
            type: boolean
      required:
      - plan_id
      - uuid
    FloorPlanShapeDto:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          enum:
          - device
          - map
          - scale
          - wall
        _id:
          type: string
        status:
          type: integer
          format: int32
          minimum: 0
        uuid:
          type: string
        plan_id:
          type: string
      required:
      - plan_id
      - uuid
    FloorPlanShapeRotationDto:
      properties:
        pov:
          $ref: "#/components/schemas/FloorPlanRotationDto"
        base:
          $ref: "#/components/schemas/FloorPlanRotationDto"
      required:
      - base
      - pov
    FloorPlanWallDto:
      allOf:
      - $ref: "#/components/schemas/FloorPlanShapeDto"
      - type: object
        properties:
          position:
            type: array
            items:
              $ref: "#/components/schemas/FloorPlanPositionDto"
          variant:
            type: string
            enum:
            - outer
            - inner
            - divider
      required:
      - plan_id
      - uuid
      - variant
    FirewallZoneRequestDto:
      properties:
        _id:
          type: string
        name:
          type: string
        network_ids:
          type: array
          items:
            type: string
    FirewallZoneDto:
      properties:
        _id:
          type: string
        name:
          type: string
        zone_key:
          type: string
        network_ids:
          type: array
          items:
            type: string
        default_zone:
          type: boolean
        attr_no_edit:
          type: boolean
    FirewallPolicyDestinationAnyDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationAppCategoryDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          app_category_ids:
            type: array
            items:
              type: integer
              format: int32
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationAppDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          app_ids:
            type: array
            items:
              type: integer
              format: int32
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationDto:
      discriminator:
        propertyName: matching_target
      properties:
        port:
          type: string
        zone_id:
          type: string
        matching_target:
          type: string
          enum:
          - ANY
          - APP
          - APP_CATEGORY
          - NETWORK
          - IP
          - WEB
          - REGION
        match_opposite_ports:
          type: boolean
        port_matching_type:
          type: string
          enum:
          - ANY
          - SPECIFIC
          - OBJECT
        matching_target_type:
          type: string
          enum:
          - SPECIFIC
          - OBJECT
        port_group_id:
          type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationIpDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          ips:
            type: array
            items:
              type: string
          match_opposite_ips:
            type: boolean
          ip_group_id:
            type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationNetworkDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          network_ids:
            type: array
            items:
              type: string
          match_opposite_networks:
            type: boolean
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationRegionDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          regions:
            type: array
            items:
              type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDestinationWebDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicyDestinationDto"
      - type: object
        properties:
          web_matching_type:
            type: string
            enum:
            - ADS
            - FAMILY
            - WORK
            - CUSTOM
          web_domains:
            type: array
            items:
              type: string
          web_group_id:
            type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicyDto:
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        _id:
          type: string
        source:
          $ref: "#/components/schemas/FirewallPolicySourceDto"
        enabled:
          type: boolean
        action:
          type: string
          enum:
          - ALLOW
          - BLOCK
          - REJECT
        protocol:
          type: string
        description:
          type: string
        schedule:
          $ref: "#/components/schemas/FirewallPolicyScheduleDto"
        destination:
          $ref: "#/components/schemas/FirewallPolicyDestinationDto"
        logging:
          type: boolean
        origin_id:
          type: string
        ip_version:
          type: string
          enum:
          - IPV4
          - IPV6
          - BOTH
        origin_type:
          type: string
          enum:
          - all
          - traffic_rule
          - custom_firewall_rule
          - hidden_predefined_rule
          - predefined_firewall_rule
          - simple_app_block
          - network_config
          - nat_rule
          - console_setting_direct_connection
          - wan_config
          - port_forward
        icmp_typename:
          type: string
          enum:
          - ADDRESS_MASK_REPLY
          - ADDRESS_MASK_REQUEST
          - COMMUNICATION_PROHIBITED
          - DESTINATION_UNREACHABLE
          - ECHO_REPLY
          - ECHO_REQUEST
          - FRAGMENTATION_NEEDED
          - HOST_PRECEDENCE_VIOLATION
          - HOST_PROHIBITED
          - HOST_REDIRECT
          - HOST_UNKNOWN
          - HOST_UNREACHABLE
          - IP_HEADER_BAD
          - NETWORK_PROHIBITED
          - NETWORK_REDIRECT
          - NETWORK_UNKNOWN
          - NETWORK_UNREACHABLE
          - PARAMETER_PROBLEM
          - PORT_UNREACHABLE
          - PRECEDENCE_CUTOFF
          - PROTOCOL_UNREACHABLE
          - REDIRECT
          - REQUIRED_OPTION_MISSING
          - ROUTER_ADVERTISEMENT
          - ROUTER_SOLICITATION
          - SOURCE_QUENCH
          - SOURCE_ROUTE_FAILED
          - TIME_EXCEEDED
          - TIMESTAMP_REPLY
          - TIMESTAMP_REQUEST
          - TOS_HOST_REDIRECT
          - TOS_HOST_UNREACHABLE
          - TOS_NETWORK_REDIRECT
          - TOS_NETWORK_UNREACHABLE
          - TTL_ZERO_DURING_REASSEMBLY
          - TTL_ZERO_DURING_TRANSIT
          - ANY
        icmp_v6_typename:
          type: string
          enum:
          - ADDRESS_UNREACHABLE
          - BAD_HEADER
          - BEYOND_SCOPE
          - COMMUNICATION_PROHIBITED
          - DESTINATION_UNREACHABLE
          - ECHO_REPLY
          - ECHO_REQUEST
          - FAILED_POLICY
          - NEIGHBOR_ADVERTISEMENT
          - NEIGHBOR_SOLICITATION
          - NO_ROUTE
          - PACKET_TOO_BIG
          - PARAMETER_PROBLEM
          - PORT_UNREACHABLE
          - REDIRECT
          - REJECT_ROUTE
          - ROUTER_ADVERTISEMENT
          - ROUTER_SOLICITATION
          - TIME_EXCEEDED
          - TTL_ZERO_DURING_REASSEMBLY
          - TTL_ZERO_DURING_TRANSIT
          - UNKNOWN_HEADER_TYPE
          - UNKNOWN_OPTION
          - ANY
        match_opposite_protocol:
          type: boolean
        connection_state_type:
          type: string
          enum:
          - ALL
          - RESPOND_ONLY
          - CUSTOM
        connection_states:
          type: array
          items:
            type: string
            enum:
            - NEW
            - INVALID
            - ESTABLISHED
            - RELATED
        match_ip_sec:
          type: boolean
        match_ip_sec_type:
          type: string
          enum:
          - MATCH_IP_SEC
          - MATCH_NON_IP_SEC
        create_allow_respond:
          type: boolean
        predefined:
          type: boolean
      required:
      - action
      - destination
      - ip_version
      - name
      - schedule
      - source
    FirewallPolicySourceAnyDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceClientDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          client_macs:
            type: array
            items:
              type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceDto:
      discriminator:
        propertyName: matching_target
      properties:
        port:
          type: string
        zone_id:
          type: string
        matching_target:
          type: string
          enum:
          - ANY
          - CLIENT
          - NETWORK
          - VPN_USER
          - MAC
          - IP
          - IDENTITY
          - REGION
        match_opposite_ports:
          type: boolean
        port_matching_type:
          type: string
          enum:
          - ANY
          - SPECIFIC
          - OBJECT
        matching_target_type:
          type: string
          enum:
          - SPECIFIC
          - OBJECT
        port_group_id:
          type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceIdentityDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          identities:
            type: array
            items: {}
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceIpDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          ips:
            type: array
            items:
              type: string
          mac:
            type: string
          match_opposite_ips:
            type: boolean
          ip_group_id:
            type: string
          match_mac:
            type: boolean
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceMacDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          macs:
            type: array
            items:
              type: string
          mac_group_id:
            type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceNetworkDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          mac:
            type: string
          network_ids:
            type: array
            items:
              type: string
          match_opposite_networks:
            type: boolean
          match_mac:
            type: boolean
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceRegionDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          regions:
            type: array
            items:
              type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    FirewallPolicySourceVpnUserDto:
      allOf:
      - $ref: "#/components/schemas/FirewallPolicySourceDto"
      - type: object
        properties:
          wireguard_user_ids:
            type: array
            items:
              type: string
          radius_user_ids:
            type: array
            items:
              type: string
      required:
      - matching_target
      - port_matching_type
      - zone_id
    PreDefinedFirewallRuleUpdateDto:
      properties:
        id:
          type: string
        logging:
          type: boolean
    FirewallPolicyUpdateDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
      required:
      - _id
    FirewallPolicyReorderDto:
      properties:
        source_zone_id:
          type: string
        destination_zone_id:
          type: string
        before_predefined_ids:
          type: array
          items:
            type: string
        after_predefined_ids:
          type: array
          items:
            type: string
      required:
      - destination_zone_id
      - source_zone_id
    Simple App Blocking:
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - NETWORK
          - DEVICE
        _id:
          type: string
        target_type:
          type: string
          enum:
          - APP_ID
          - APP_CATEGORY
        schedule:
          $ref: "#/components/schemas/FirewallPolicyScheduleDto"
        network_ids:
          type: array
          items:
            type: string
        client_macs:
          type: array
          items:
            type: string
        app_ids:
          type: array
          items:
            type: integer
            format: int32
        app_category_ids:
          type: array
          items:
            type: integer
            format: int32
      required:
      - name
      - schedule
    Device BLE settings update payload:
      properties:
        use_ble_setup_configuration:
          type: boolean
    Content Filtering:
      properties:
        name:
          type: string
        _id:
          type: string
        enabled:
          type: boolean
        schedule:
          $ref: "#/components/schemas/FirewallPolicyScheduleDto"
        categories:
          type: array
          items:
            type: string
            enum:
            - FAMILY
            - ADVERTISEMENT
            - ADULT
            - ALCOHOL
            - ANONYMIZERS
            - APIS
            - ART
            - ARTIFICIAL_INTELLIGENCE
            - ARTS_AND_CRAFTS
            - ASTROLOGY
            - AUCTIONS_AND_MARKETPLACES
            - AUDIO_STREAMING
            - BODY_ART
            - BOTNETS
            - BUSINESS
            - CARTOONS_AND_ANIME
            - CHAT
            - CHILD_ABUSE
            - CIPA
            - CLOTHING
            - COMIC_BOOKS
            - COUNTERFEIT_BRANDS
            - COUPONS
            - CRYPTOCURRENCY
            - CRYPTOMINING
            - DATING_AND_RELATIONSHIPS
            - DECEPTIVE_ADS
            - DGA_DOMAINS
            - DIGITAL_POSTCARDS
            - DIGITAL_SAFETY
            - DNS_TUNNELING
            - DRUGS
            - ECOMMERCE
            - ECONOMY_AND_FINANCE
            - EDUCATION
            - EDUCATIONAL_INSTITUTIONS
            - EMPTY_DOMAINS
            - ENTERTAINMENT
            - FASHION
            - FILE_SHARING
            - FINE_ARTS
            - FOOD_AND_DRINK
            - FORUMS
            - GAMBLING
            - GAMING
            - GOVERNMENT
            - HACKING
            - HATE_SPEECH_AND_EXTREMISM
            - HEALTH_AND_FITNESS
            - HOBBIES_AND_INTERESTS
            - HOME_AND_GARDEN
            - HOME_VIDEO
            - HUMOR
            - INSTANT_MESSENGERS
            - INTERNET_CALLING_AND_VOIP
            - IT_SERVICES
            - JOB_SEARCH_AND_CAREERS
            - LIFESTYLE
            - LINGERIE_AND_BIKINI
            - LOGIN_SCREENS
            - MAGAZINES
            - MALWARE
            - MEDIA_AND_FILE_HOSTING
            - MESSAGING
            - MISCELLANEOUS
            - MOVIES
            - MUSIC
            - NEWLY_DISCOVERED_DOMAINS
            - NEWLY_REGISTERED_DOMAINS
            - NEWS_AND_MEDIA
            - NUDITY
            - PARANORMAL
            - PARENTING
            - PARKED_DOMAINS
            - PEER_TO_PEER
            - BLOGS
            - PETS
            - PHISHING
            - PHOTO_SHARING
            - PHOTOGRAPHY
            - POLITICS
            - PORNOGRAPHY
            - PORTALS
            - PRIVATE_IP_ADDRESSES
            - PROFANITY
            - PROFESSIONAL_NETWORKING
            - QUESTIONABLE_ACTIVITIES
            - RADIO
            - REAL_ESTATE
            - REDIRECTORS
            - RELIGION
            - SAFE_FOR_KIDS
            - SCIENCE
            - SEARCH_ENGINES
            - SEX_EDUCATION
            - SEXUALITY
            - SHOPPING
            - SOCIAL_NETWORKS
            - SPACE_AND_ASTRONOMY
            - SPAM
            - SPORTS
            - SPYWARE
            - SWIMSUITS
            - TECHNOLOGY
            - TELEVISION
            - TOBACCO
            - TRANSLATORS
            - TRAVEL
            - UNREACHABLE_DOMAINS
            - UNRELIABLE_INFORMATION
            - VEHICLES
            - VIDEO_STREAMING
            - VIOLENCE
            - WEAPONS
            - WEATHER
            - WEBMAIL
        network_ids:
          type: array
          items:
            type: string
        client_macs:
          type: array
          items:
            type: string
        allow_list:
          type: array
          items:
            type: string
        block_list:
          type: array
          items:
            type: string
        safe_search:
          type: array
          items:
            type: string
            enum:
            - GOOGLE
            - YOUTUBE
            - BING
      required:
      - categories
      - name
      - safe_search
      - schedule
    Access Points Group:
      properties:
        _id:
          type: string
          example: 5e6285ec05938c3d128aaf07
          readOnly: true
        attr_hidden_id:
          type: string
          readOnly: true
        attr_no_delete:
          type: boolean
          readOnly: true
        name:
          type: string
        List of device macs. will be ignored when updating default AP group:
          type: array
          example:
          - 04:18:d6:a0:bc:52
          items:
            type: string
          uniqueItems: true
        for_wlanconf:
          type: boolean
          description: "Mark AP Group as dedicated for a single WLAN Conf (Devices\
            \ view). It will be hidden from list results by default for backward compatibility,\
            \ but possible to enable optionally"
      required:
      - List of device macs. will be ignored when updating default AP group
      - name
    BatchAclRuleUpdatePartDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
        acl_index:
          type: integer
          format: int32
      required:
      - _id
    AclRuleDto:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - MAC
          - IPV4
          - IPV6
        action:
          type: string
          enum:
          - ALLOW
          - BLOCK
        specific_enforcers:
          type: array
          items:
            type: string
        acl_index:
          type: integer
          format: int32
        ip_acl_protocol:
          type: string
          enum:
          - TCP
          - UDP
          - TCP_AND_UDP
          - ALL
        mac_acl_network_id:
          type: string
        traffic_source:
          $ref: "#/components/schemas/AclRuleTrafficEndpointDto"
        traffic_destination:
          $ref: "#/components/schemas/AclRuleTrafficEndpointDto"
      required:
      - acl_index
      - action
      - specific_enforcers
      - traffic_destination
      - traffic_source
      - type
    AclRuleTrafficEndpointDto:
      properties:
        type:
          type: string
          enum:
          - CLIENT_MAC
          - NETWORK
          - IP_OR_SUBNET
        specific_mac_addresses:
          type: array
          items:
            type: string
        mac_mask:
          type: string
        network_ids:
          type: array
          items:
            type: string
        ips_or_subnets:
          type: array
          items:
            type: string
        ports:
          type: array
          items:
            type: integer
            format: int32
      required:
      - type
    UI Notification:
      properties:
        name:
          type: string
        show_at_millis:
          type: integer
          format: int64
        admin_id:
          type: string
        notified:
          type: boolean
        site_name:
          type: string
        site_id:
          type: string
        show:
          type: boolean
        display_option:
          type: string
          enum:
          - ON_START
          - INSTANTLY
        action_required:
          type: boolean
        global:
          type: boolean
        scope:
          type: string
          enum:
          - controller
          - site
      required:
      - name
      - scope
    GenerationParameters:
      properties:
        dir:
          type: string
    GlobalDeviceUpdateRequestDto:
      properties:
        devices:
          type: array
          items:
            type: string
        customUpdateUrl:
          type: string
    RestoreParameters:
      properties:
        dir:
          type: string
        archive:
          type: string
        skipWanConfigurationRestore:
          type: boolean
        shadowModeConfigRetain:
          type: boolean
        deleteShadowModeConfig:
          type: boolean
    BackupParameters:
      properties:
        dir:
          type: string
        includeFullData:
          type: boolean
    BackupResponseDto:
      properties:
        version:
          type: string
        date:
          type: string
        time:
          type: integer
          format: int64
        archive_name:
          type: string
    Site Overview list parameter:
      properties:
        sortByField:
          type: string
          enum:
          - DESCRIPTION
          - CRITICAL_NOTIFICATION_COUNT
          - GATEWAY_DEVICE_COUNT
          - WIFI_DEVICE_COUNT
          - WIRED_DEVICE_COUNT
          - TOTAL_DEVICE_COUNT
          - OFFLINE_GATEWAY_DEVICE_COUNT
          - OFFLINE_WIFI_DEVICE_COUNT
          - OFFLINE_WIRED_DEVICE_COUNT
          - OFFLINE_DEVICE_COUNT
          - PENDING_UPDATE_DEVICE_COUNT
          - WAN_CONFIGURATION_COUNT
          - LAN_CONFIGURATION_COUNT
          - WIFI_CONFIGURATION_COUNT
          - WIFI_CLIENT_COUNT
          - WIRED_CLIENT_COUNT
          - GUEST_CLIENT_COUNT
          - WAN_UPTIME_PERCENTAGE
          - TX_RETRY_PERCENTAGE
          - SUCCESSFUL_ASSOCIATION
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        searchText:
          type: string
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    SiteOverviewCountsDto:
      properties:
        critical_notification:
          type: integer
          format: int32
        wifi_device:
          type: integer
          format: int32
        wired_device:
          type: integer
          format: int32
        total_device:
          type: integer
          format: int32
        offline_gateway_device:
          type: integer
          format: int32
        offline_wifi_device:
          type: integer
          format: int32
        offline_wired_device:
          type: integer
          format: int32
        offline_device:
          type: integer
          format: int32
        pending_update_device:
          type: integer
          format: int32
        wan_configuration:
          type: integer
          format: int32
        lan_configuration:
          type: integer
          format: int32
        wifi_configuration:
          type: integer
          format: int32
        wifi_client:
          type: integer
          format: int32
        wired_client:
          type: integer
          format: int32
        guest_client:
          type: integer
          format: int32
        gateway_device:
          type: integer
          format: int32
    SiteOverviewDto:
      properties:
        percentages:
          $ref: "#/components/schemas/SiteOverviewPercentagesDto"
        name:
          type: string
        id:
          type: string
        counts:
          $ref: "#/components/schemas/SiteOverviewCountsDto"
        description:
          type: string
    SiteOverviewListDto:
      properties:
        has_next:
          type: boolean
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        data:
          type: array
          items:
            $ref: "#/components/schemas/SiteOverviewDto"
    SiteOverviewPercentagesDto:
      properties:
        tx_retry:
          type: number
          format: double
        successful_association:
          type: number
          format: double
        wan_uptime:
          type: number
          format: double
    WifiManFeedbackRequest:
      properties:
        isp_name:
          type: string
        public_ip:
          type: string
        Client device model reported by the WiFiman app:
          type: string
          example: Apple iPhone 11 Pro
        speed_tests:
          type: array
          items:
            $ref: "#/components/schemas/WifiManSpeedTestRequest"
      required:
      - isp_name
      - public_ip
      - speed_tests
    WifiManSpeedTestRequest:
      properties:
        endpoint:
          type: string
        test_server_name:
          type: string
        type:
          type: string
          enum:
          - INTERNET
          - LOCAL_DEVICE
          - LOCAL_CLIENT
        download_speed_bytes:
          type: integer
          format: int64
          minimum: 1
        upload_speed_bytes:
          type: integer
          format: int64
          minimum: 1
        Client device model reported by the mobile app:
          type: string
          example: Apple iPhone 11 Pro
      required:
      - endpoint
      - type
    WifiManFeedbackResponse:
      properties:
        _id:
          type: string
    WifiChannelizationStatisticsRequestDto:
      properties:
        stat_scale:
          type: string
          enum:
          - minute
          - 5minutes
          - hourly
          - daily
          - monthly
          - life
          - archive
        end:
          type: integer
          format: int64
        start:
          type: integer
          format: int64
        ap_mac:
          type: string
        percentiles:
          type: array
          items:
            type: integer
            format: int32
        attrs:
          type: array
          items:
            type: string
      required:
      - end
      - start
    WiFi Channelization statistics:
      properties:
        details:
          type: array
          items:
            $ref: "#/components/schemas/WifiRadioActivityDetailsDto"
        percentiles:
          type: array
          items:
            $ref: "#/components/schemas/WifiChannelUtilizationPercentileDto"
        attribute_stats:
          type: array
          items:
            $ref: "#/components/schemas/WifiChannelAttributeStatsDto"
    WifiChannelAttributeStatsDto:
      properties:
        mean:
          type: number
          format: double
        median:
          type: number
          format: double
        name:
          type: string
        variance:
          type: number
          format: double
        deviation:
          type: number
          format: double
    WifiChannelUtilizationPercentileDto:
      properties:
        tx_retries_percentage:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_utilization:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_self_tx:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_self_rx:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        percentile:
          type: integer
          format: int32
        band_interference:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
    WifiRadioActivityDetailsDto:
      properties:
        timestamp:
          type: integer
          format: int64
        tx_retries_percentage:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        clients_count:
          $ref: "#/components/schemas/WifiValueByRadioBandLong"
        band_utilization:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        receiving_byte_rate:
          $ref: "#/components/schemas/WifiValueByRadioBandLong"
        transmitting_byte_rate:
          $ref: "#/components/schemas/WifiValueByRadioBandLong"
        idle_time_percentage:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_efficiency:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_interference:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_self_tx:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
        band_self_rx:
          $ref: "#/components/schemas/WifiValueByRadioBandDouble"
    WifiValueByRadioBandDouble:
      properties:
        radio_ng: {}
        radio_na: {}
        radio_6e: {}
        total: {}
    WifiValueByRadioBandLong:
      properties:
        radio_ng: {}
        radio_na: {}
        radio_6e: {}
        total: {}
    WAN provider capability update request:
      properties:
        download_kilobits_per_second:
          type: integer
          format: int64
          example: 1024
          minimum: 0
        upload_kilobits_per_second:
          type: integer
          format: int64
          example: 512
          minimum: 0
      required:
      - download_kilobits_per_second
      - upload_kilobits_per_second
    OpenVpnConfigurationRequestDto:
      properties:
        remote_port:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        protocol:
          type: string
          enum:
          - TCP
          - UDP
        ca_certificate:
          type: string
        dns:
          type: array
          items:
            type: string
        key:
          type: string
        remote_ip:
          type: string
        tls_auth:
          type: string
        certificate:
          type: string
      required:
      - ca_certificate
      - certificate
      - key
      - protocol
      - remote_ip
      - tls_auth
    OpenVpnCertificatesDto:
      properties:
        x_server_crt:
          type: string
        x_server_key:
          type: string
        x_ca_crt:
          type: string
        x_ca_key:
          type: string
        x_shared_client_crt:
          type: string
        x_shared_client_key:
          type: string
        x_auth_key:
          type: string
    UID VPN Server Configuration:
      properties:
        By default "openvpn", for backward compatibility:
          type: string
          enum:
          - openvpn
          - wireguard
        name:
          type: string
        networkconf_id:
          type: string
          example: 5e6285ec05938c3d128aaa07
          readOnly: true
        ip_subnet:
          type: string
        ipv6_subnet:
          type: string
        dns:
          type: array
          items:
            type: string
        local_wan_ip:
          type: string
        server_port:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        public_gateway_port:
          type: integer
          format: int32
          description: "If VPN is behind NAT, user can set a port forward on a 3rd\
            \ party gateway. In this case, the UID App may use this port to connect\
            \ to the VPN"
        radius:
          $ref: "#/components/schemas/UidVpnServerRadiusConfigurationDto"
        Required only for Open VPN:
          type: string
        Server Key for OpenVPN, or Private Key of WireGuard Server:
          type: string
        VPN Server protocol.:
          type: string
          enum:
          - TCP
          - UDP
        Renegotiate data channel key after n seconds (OpenVPN only):
          type: integer
          format: int32
        uid_workspace_url:
          type: string
        masquerade_enabled:
          type: boolean
        uid_policy_name:
          type: string
        uid_policy_enabled:
          type: boolean
        custom_routing:
          type: array
          items:
            type: string
        default_dns_suffix:
          type: string
        sync_public_ip:
          type: boolean
        mac_connection_time_seconds:
          type: integer
          format: int32
        enabled:
          type: boolean
        strict_client_common_name:
          type: boolean
          description: "If true, then client certificate's common name must match\
            \ client's username. Effective for the server mode only (OpenVPN only)"
      required:
      - name
    UidVpnServerRadiusConfigurationDto:
      properties:
        ip:
          type: string
        auth_port:
          type: integer
          format: int32
          maximum: 65535
          minimum: 1
        acct_port:
          type: integer
          format: int32
        secret:
          type: string
      required:
      - ip
      - secret
    UidRadiusConfiguration:
      properties:
        radius_profile_id:
          type: string
        enabled:
          type: boolean
        shared_secret:
          type: string
          pattern: "^[^\\\\\"' ]{1,48}$"
        auth_port:
          type: integer
          format: int32
        acct_port:
          type: integer
          format: int32
        ca_certificate:
          type: string
        server_certificate:
          type: string
        server_certificate_key:
          type: string
        dh_key:
          type: string
      required:
      - shared_secret
    TrafficFlowHostDto: {}
    TrafficFlowParametersDto:
      properties:
        protocol:
          type: array
          items:
            type: string
            enum:
            - IP
            - ICMP
            - IGMP
            - GGP
            - IPENCAP
            - ST
            - TCP
            - EGP
            - IGP
            - PUP
            - UDP
            - HMP
            - XNS_IDP
            - RDP
            - ISO_TP4
            - DCCP
            - XTP
            - DDP
            - IDPR_CMTP
            - IPV6
            - IPV6_ROUTE
            - IPV6_FRAG
            - IDRP
            - RSVP
            - GRE
            - ESP
            - AH
            - SKIP
            - IPV6_ICMP
            - ICMPV6
            - IPV6_NONXT
            - IPV6_OPTS
            - RSPF
            - PVP
            - VMTP
            - EIGRP
            - OSPF
            - AX_25
            - IPIP
            - ETHERIP
            - ENCAP
            - PIM
            - IPCOMP
            - VRRP
            - L2TP
            - ISIS
            - SCTP
            - FC
            - MOBILITY_HEADER
            - UDPLITE
            - MPLS_IN_IP
            - MANET
            - HIP
            - SHIM6
            - WESP
            - ROHC
            - UNDEFINED
          uniqueItems: true
        action:
          type: array
          items:
            type: string
            enum:
            - allowed
            - blocked
          uniqueItems: true
        source_port:
          type: array
          items:
            type: integer
            format: int32
          uniqueItems: true
        destination_port:
          type: array
          items:
            type: integer
            format: int32
          uniqueItems: true
        source_ip:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_ip:
          type: array
          items:
            type: string
          uniqueItems: true
        risk:
          type: array
          items:
            type: string
            enum:
            - low
            - medium
            - high
          uniqueItems: true
        direction:
          type: array
          items:
            type: string
            enum:
            - incoming
            - local
            - outgoing
          uniqueItems: true
        policy_type:
          type: array
          items:
            type: string
            enum:
            - AD_BLOCKING
            - CONTENT_FILTERING
            - DESTINATION_NAT
            - FIREWALL
            - INTRUSION_PREVENTION
            - MASQUERADE_NAT
            - NEXT_AI
            - POLICY_BASED_ROUTING
            - PORT_FORWARDING
            - PROTECTION
            - QOS
            - SOURCE_NAT
            - PREDEFINED_MASQUERADE_NAT
            - PREDEFINED_FIREWALL
          uniqueItems: true
        source_host:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowHostDto"
          uniqueItems: true
        source_mac:
          type: array
          items:
            type: string
          uniqueItems: true
        source_network_id:
          type: array
          items:
            type: string
          uniqueItems: true
        source_domain:
          type: array
          items:
            type: string
          uniqueItems: true
        source_zone_id:
          type: array
          items:
            type: string
          uniqueItems: true
        source_region:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_host:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowHostDto"
          uniqueItems: true
        destination_mac:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_network_id:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_domain:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_zone_id:
          type: array
          items:
            type: string
          uniqueItems: true
        destination_region:
          type: array
          items:
            type: string
          uniqueItems: true
        in_network_id:
          type: array
          items:
            type: string
          uniqueItems: true
        out_network_id:
          type: array
          items:
            type: string
          uniqueItems: true
        search_text:
          type: string
        except_for:
          type: array
          items:
            type: string
            enum:
            - risk
            - action
            - direction
            - protocol
            - service
            - policy_type
            - policy
            - source_host
            - source_mac
            - source_ip
            - source_port
            - source_network_id
            - source_domain
            - source_zone_id
            - source_region
            - destination_host
            - destination_mac
            - destination_ip
            - destination_port
            - destination_network_id
            - destination_domain
            - destination_zone_id
            - destination_region
            - in_network_id
            - out_network_id
          uniqueItems: true
        pageSize:
          type: integer
          format: int32
          maximum: 5000
          minimum: 1
        service:
          type: array
          items:
            type: string
            enum:
            - OTHER
            - TCPMUX
            - ECHO
            - DISCARD
            - SYSTAT
            - DAYTIME
            - QOTD
            - MSP
            - CHARGEN
            - FTP_DATA
            - FTP
            - SSH
            - TELNET
            - SMTP
            - TIME
            - NAMESERVER
            - WHOIS
            - TACACS
            - DNS
            - DHCP_CLIENT
            - DHCP_SERVER
            - TFTP
            - GOPHER
            - NETRJS
            - FINGER
            - HTTP
            - KERBEROS
            - SUPDUP
            - NIC_HOSTNAME
            - TSAP
            - DICOM
            - CCSO_NAMESERVER
            - RTELNET
            - SNA
            - POP2
            - POP3
            - DNC_RPC
            - MCIDAS_DATA
            - IDENT
            - SFTP
            - UUCP
            - SQL
            - NNTP
            - NTP
            - NXEDIT
            - DCE_ENDPOINT
            - NETBIOS_NAMESERVER
            - NETBIOS_DATAGRAM
            - NETBIOS_SESSION
            - IMAP
            - BFTP
            - SGMP
            - DMSP
            - SNMP
            - SNMPTRAP
            - POSTSCRIPT_PRINT_SERVER
            - XDMCP
            - BGP
            - IRC
            - SMUX
            - APPLETALK_ROUTING_MAINTENANCE
            - QMTP
            - Z39_50
            - IPX
            - MPP
            - IMAP_VERSION_3
            - ESRO
            - ARCISDMS
            - BGMP
            - HTTP_MGMT
            - NOVASTOR_ONLINE_BACKUP
            - MACOS_SERVER_ADMIN
            - PKIX_TSP
            - PTP_EVENT_MESSAGES
            - PTP_GENERAL_MESSAGES
            - RPKI
            - MATIP_TYPE_A
            - MATIP_TYPE_B
            - CLOANTO_NET_1
            - ODMR
            - RPC2PORTMAP
            - CODAAUTH2_SECURECAST1
            - CLEARCASE_ALBD
            - AMIGA_ENVOY_NETWORK_INQUIRY_PROTOCOL
            - HP_DATA_ALARM_MANAGER
            - REMOTE_NETWORK_SERVER_SYSTEM
            - AURP
            - LDM
            - LDAP
            - DECNET_OVER_TCP_IP
            - UPS
            - SLP
            - MOBILE_IP_AGENT
            - HTTPS
            - SNPP
            - MICROSOFT_DS
            - KERBEROS_PASSWORD_MANAGEMENT
            - MESSAGE_SUBMISSION_OVER_TLS_CISCO_SSM
            - TCPNETHASPSRV
            - RETROSPECT
            - ISAKMP_IKE
            - MODBUS
            - CITADEL
            - FCP
            - REXEC
            - COMSAT_BIFF
            - RLOGIN
            - WHO
            - SYSLOG
            - LPD
            - TALK
            - NTALK
            - EFS
            - RIP
            - RIPNG
            - NCP
            - TIMED_TIMESERVER
            - RPC
            - NETNEWS
            - NETWALL
            - COMMERCE
            - KERBEROS_LOGIN
            - KERBEROS_REMOTE_SHELL
            - DHCPV6_SERVER
            - DHCPV6_CLIENT
            - AFP_OVER_TCP
            - NEW_RWHO_NEW_WHO
            - RTSP
            - RFS
            - RMONITOR
            - MONITOR
            - NNTPS
            - EMAIL_MESSAGE_SUBMISSION
            - FILEMAKER_WEB_SHARING
            - HTTP_RPC
            - RELIABLE_SYSLOG_SERVICE
            - TUNNEL_PROFILE
            - ASF_RMCP_IPMI_REMOTE_MANAGEMENT
            - IPP
            - RLZ_DBASE
            - LDAPS
            - MSDP
            - SUPPORTSOFT_NEXUS_REMOTE_COMMAND_CONTROL
            - SANITY
            - LDP
            - DHCP_FAILOVER
            - RRP
            - IEEE_MMS
            - SUPPORTSOFT_NEXUS_REMOTE_COMMAND_DATA
            - MMS_MMP
            - TINC_VPN
            - IBM_RMC
            - MACOS_SERVER_ADMINISTRATION
            - DOOM
            - ACAP
            - CORBA_IIOP_SSL
            - REALM_RUSD
            - VATP
            - MS_EXCHANGE_ROUTING
            - LINUX_HA
            - IEEE_MMS_SSL
            - OLSR
            - EPP
            - LMP
            - IRIS_OVER_BEEP
            - SILC
            - CISCO_TDP
            - TBRPF
            - KERBEROS_ADMINISTRATION
            - KERBEROS_VERSION_4
            - RRH
            - TELL_SEND
            - MDBS_DAEMON
            - MODBUS_TCP_SECURITY
            - CERTIFICATE_MANAGEMENT_PROTOCOL
            - NETCONF_OVER_SSH
            - NETCONF_OVER_BEEP
            - NETCONF_FOR_SOAP_OVER_HTTPS
            - NETCONF_FOR_SOAP_OVER_BEEP
            - GDOI
            - DNS_OVER_TLS
            - DNS_OVER_QUIC_DNS_OVER_DTLS
            - ISCSI
            - OWAMP_CONTROL
            - TWAMP_CONTROL
            - RSYNC
            - RNDC
            - FTPS_DATA
            - FTPS_CONTROL
            - NAS
            - TELNET_OVER_TLS_SSL
            - IMAPS
            - POP3S
          uniqueItems: true
        policy:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowPolicyParametersDto"
          uniqueItems: true
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
    TrafficFlowPolicyParametersDto:
      properties:
        id:
          type: string
        internal_type:
          type: string
          enum:
          - OLD_AD_BLOCKING
          - CONNTRACK
          - DESTINATION_NAT
          - FIREWALL_POLICY
          - FIREWALL_RULE
          - HONEYPOT
          - MASQUERADE
          - SIMPLE_APP_BLOCK
          - NEXT_AI_APP
          - NEXT_AI_CERTIFICATE_BLOCK
          - NEXT_AI_FILE
          - NEXT_AI_INSPECT
          - NEXT_AI_QUERY
          - NEXT_AI_RISK_BLOCK
          - NEXT_AI_URL
          - OLD_CONTENT_FILTERING
          - POLICY_BASED_ROUTING
          - PORT_FORWARDING
          - QOS
          - REGION_BLOCKING
          - SIGNATURE
          - SOURCE_NAT
          - TRAFFIC_RULE
          - ZERO_DAY
          - PREDEFINED_MASQUERADE
          - PREDEFINED_FIREWALL_RULE
          - CONTENT_FILTERING
          - AD_BLOCKING
          - UNKNOWN
        ips_category:
          type: string
          enum:
          - EMERGING_ACTIVEX
          - EMERGING_ATTACK_RESPONSE
          - BOTCC
          - CI_ARMY
          - COMPROMISED
          - EMERGING_DNS
          - EMERGING_DOS
          - DSHIELD
          - EMERGING_EXPLOIT
          - EMERGING_FTP
          - EMERGING_GAMES
          - EMERGING_ICMP
          - EMERGING_IMAP
          - EMERGING_MALWARE
          - EMERGING_MOBILE
          - EMERGING_NET_BIOS
          - EMERGING_P2P
          - EMERGING_POP3
          - EMERGING_RPC
          - EMERGING_SCAN
          - EMERGING_SHELLCODE
          - EMERGING_SMTP
          - EMERGING_SNMP
          - EMERGING_SQL
          - EMERGING_TELNET
          - EMERGING_TFTP
          - TOR
          - EMERGING_USERAGENT
          - EMERGING_VOIP
          - EMERGING_WEBCLIENT
          - EMERGING_WEBSERVER
          - EMERGING_WEBAPPS
          - EMERGING_WORM
          - EMERGING_MISC
          - EXPLOIT_KIT
          - ADWARE_PUP
          - BOTCC_PORTGROUPED
          - PHISHING
          - THREATVIEW_CS_C2
          - THREE_CORESEC
          - CHAT
          - COINMINER
          - CURRENT_EVENTS
          - DROP
          - HUNTING
          - ICMP_INFO
          - INAPPROPRIATE
          - INFO
          - JA3
          - POLICY
          - SCADA
          - DARK_WEB_BLOCKER_LIST
          - MALICIOUS_HOSTS
      required:
      - internal_type
    Traffic Flow list with paging info:
      properties:
        has_next:
          type: boolean
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        data:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowDto"
    TrafficFlowDataDto:
      properties:
        bytes_rx:
          type: integer
          format: int64
        bytes_tx:
          type: integer
          format: int64
        bytes_total:
          type: integer
          format: int64
        packets_rx:
          type: integer
          format: int64
        packets_tx:
          type: integer
          format: int64
        packets_total:
          type: integer
          format: int64
    TrafficFlowDto:
      properties:
        count:
          type: integer
          format: int32
        traffic_data:
          $ref: "#/components/schemas/TrafficFlowDataDto"
        out:
          $ref: "#/components/schemas/TrafficFlowInOutDto"
        id:
          type: string
        source:
          $ref: "#/components/schemas/TrafficFlowEndpointDto"
        file:
          $ref: "#/components/schemas/TrafficFlowFileDto"
        in:
          $ref: "#/components/schemas/TrafficFlowInOutDto"
        action:
          type: string
          enum:
          - allowed
          - blocked
        service:
          type: string
          enum:
          - OTHER
          - TCPMUX
          - ECHO
          - DISCARD
          - SYSTAT
          - DAYTIME
          - QOTD
          - MSP
          - CHARGEN
          - FTP_DATA
          - FTP
          - SSH
          - TELNET
          - SMTP
          - TIME
          - NAMESERVER
          - WHOIS
          - TACACS
          - DNS
          - DHCP_CLIENT
          - DHCP_SERVER
          - TFTP
          - GOPHER
          - NETRJS
          - FINGER
          - HTTP
          - KERBEROS
          - SUPDUP
          - NIC_HOSTNAME
          - TSAP
          - DICOM
          - CCSO_NAMESERVER
          - RTELNET
          - SNA
          - POP2
          - POP3
          - DNC_RPC
          - MCIDAS_DATA
          - IDENT
          - SFTP
          - UUCP
          - SQL
          - NNTP
          - NTP
          - NXEDIT
          - DCE_ENDPOINT
          - NETBIOS_NAMESERVER
          - NETBIOS_DATAGRAM
          - NETBIOS_SESSION
          - IMAP
          - BFTP
          - SGMP
          - DMSP
          - SNMP
          - SNMPTRAP
          - POSTSCRIPT_PRINT_SERVER
          - XDMCP
          - BGP
          - IRC
          - SMUX
          - APPLETALK_ROUTING_MAINTENANCE
          - QMTP
          - Z39_50
          - IPX
          - MPP
          - IMAP_VERSION_3
          - ESRO
          - ARCISDMS
          - BGMP
          - HTTP_MGMT
          - NOVASTOR_ONLINE_BACKUP
          - MACOS_SERVER_ADMIN
          - PKIX_TSP
          - PTP_EVENT_MESSAGES
          - PTP_GENERAL_MESSAGES
          - RPKI
          - MATIP_TYPE_A
          - MATIP_TYPE_B
          - CLOANTO_NET_1
          - ODMR
          - RPC2PORTMAP
          - CODAAUTH2_SECURECAST1
          - CLEARCASE_ALBD
          - AMIGA_ENVOY_NETWORK_INQUIRY_PROTOCOL
          - HP_DATA_ALARM_MANAGER
          - REMOTE_NETWORK_SERVER_SYSTEM
          - AURP
          - LDM
          - LDAP
          - DECNET_OVER_TCP_IP
          - UPS
          - SLP
          - MOBILE_IP_AGENT
          - HTTPS
          - SNPP
          - MICROSOFT_DS
          - KERBEROS_PASSWORD_MANAGEMENT
          - MESSAGE_SUBMISSION_OVER_TLS_CISCO_SSM
          - TCPNETHASPSRV
          - RETROSPECT
          - ISAKMP_IKE
          - MODBUS
          - CITADEL
          - FCP
          - REXEC
          - COMSAT_BIFF
          - RLOGIN
          - WHO
          - SYSLOG
          - LPD
          - TALK
          - NTALK
          - EFS
          - RIP
          - RIPNG
          - NCP
          - TIMED_TIMESERVER
          - RPC
          - NETNEWS
          - NETWALL
          - COMMERCE
          - KERBEROS_LOGIN
          - KERBEROS_REMOTE_SHELL
          - DHCPV6_SERVER
          - DHCPV6_CLIENT
          - AFP_OVER_TCP
          - NEW_RWHO_NEW_WHO
          - RTSP
          - RFS
          - RMONITOR
          - MONITOR
          - NNTPS
          - EMAIL_MESSAGE_SUBMISSION
          - FILEMAKER_WEB_SHARING
          - HTTP_RPC
          - RELIABLE_SYSLOG_SERVICE
          - TUNNEL_PROFILE
          - ASF_RMCP_IPMI_REMOTE_MANAGEMENT
          - IPP
          - RLZ_DBASE
          - LDAPS
          - MSDP
          - SUPPORTSOFT_NEXUS_REMOTE_COMMAND_CONTROL
          - SANITY
          - LDP
          - DHCP_FAILOVER
          - RRP
          - IEEE_MMS
          - SUPPORTSOFT_NEXUS_REMOTE_COMMAND_DATA
          - MMS_MMP
          - TINC_VPN
          - IBM_RMC
          - MACOS_SERVER_ADMINISTRATION
          - DOOM
          - ACAP
          - CORBA_IIOP_SSL
          - REALM_RUSD
          - VATP
          - MS_EXCHANGE_ROUTING
          - LINUX_HA
          - IEEE_MMS_SSL
          - OLSR
          - EPP
          - LMP
          - IRIS_OVER_BEEP
          - SILC
          - CISCO_TDP
          - TBRPF
          - KERBEROS_ADMINISTRATION
          - KERBEROS_VERSION_4
          - RRH
          - TELL_SEND
          - MDBS_DAEMON
          - MODBUS_TCP_SECURITY
          - CERTIFICATE_MANAGEMENT_PROTOCOL
          - NETCONF_OVER_SSH
          - NETCONF_OVER_BEEP
          - NETCONF_FOR_SOAP_OVER_HTTPS
          - NETCONF_FOR_SOAP_OVER_BEEP
          - GDOI
          - DNS_OVER_TLS
          - DNS_OVER_QUIC_DNS_OVER_DTLS
          - ISCSI
          - OWAMP_CONTROL
          - TWAMP_CONTROL
          - RSYNC
          - RNDC
          - FTPS_DATA
          - FTPS_CONTROL
          - NAS
          - TELNET_OVER_TLS_SSL
          - IMAPS
          - POP3S
        protocol:
          type: string
          enum:
          - IP
          - ICMP
          - IGMP
          - GGP
          - IPENCAP
          - ST
          - TCP
          - EGP
          - IGP
          - PUP
          - UDP
          - HMP
          - XNS_IDP
          - RDP
          - ISO_TP4
          - DCCP
          - XTP
          - DDP
          - IDPR_CMTP
          - IPV6
          - IPV6_ROUTE
          - IPV6_FRAG
          - IDRP
          - RSVP
          - GRE
          - ESP
          - AH
          - SKIP
          - IPV6_ICMP
          - ICMPV6
          - IPV6_NONXT
          - IPV6_OPTS
          - RSPF
          - PVP
          - VMTP
          - EIGRP
          - OSPF
          - AX_25
          - IPIP
          - ETHERIP
          - ENCAP
          - PIM
          - IPCOMP
          - VRRP
          - L2TP
          - ISIS
          - SCTP
          - FC
          - MOBILITY_HEADER
          - UDPLITE
          - MPLS_IN_IP
          - MANET
          - HIP
          - SHIM6
          - WESP
          - ROHC
          - UNDEFINED
        direction:
          type: string
          enum:
          - incoming
          - local
          - outgoing
        time:
          type: integer
          format: int64
        duration_milliseconds:
          type: integer
          format: int64
        zero_day:
          $ref: "#/components/schemas/TrafficFlowZeroDayDto"
        category:
          type: string
          enum:
          - STREAMING_ONLINE_TV
          - SOCIAL_MEDIA_NETWORKS
          - SEARCH_ENGINES
          - DICTIONARIES_AND_ENCYCLOPEDIAS
          - NEWS_MEDIA_PUBLISHERS
          - ADULT
          - ECOMMERCE_SHOPPING
          - EMAIL
          - TELECOMMUNICATIONS
          - COMPUTERS_ELECTRONICS_TECHNOLOGY_OTHER
          - PROGRAMMING_DEVELOPER_SOFTWARE
          - COMMUNITY_SOCIETY_OTHER
          - CONSUMER_ELECTRONICS
          - WEATHER
          - GAMES
          - ARTS_ENTERTAINMENT_OTHER
          - INSTANT_MESSENGERS
          - PHOTO_SHARING
          - INTERNET_FORUMS
          - ONLINE_MAP_SERVICES
          - MEDICAL
          - MUSIC
          - JOBS_CAREER
          - SCIENCE_EDUCATION
          - GEOGRAPHIC_ENVIRONMENTAL
          - FILE_MULTIMEDIA_SHARING
          - ACADEMIC
          - ASTRONOMY
          - VIRTUAL_COMMUNITIES
          - BIOLOGY
          - FINANCE
          - BUSINESS_CONSUMER_SERVICES
          - LIFESTYLE
          - SPORTS
          - GAMBLING
          - TRAVEL_TOURISM
          - HOME_GARDEN
          - HEAVY_INDUSTRY_ENGINEERING
          - AI_ENGINES
          - WORK
          - FAMILY
          - CONTENT_FILTERING_FAMILY
          - CONTENT_FILTERING_ADVERTISEMENT
          - CONTENT_FILTERING_ADULT
          - CONTENT_FILTERING_ALCOHOL
          - CONTENT_FILTERING_ANONYMIZERS
          - CONTENT_FILTERING_APIS
          - CONTENT_FILTERING_ART
          - CONTENT_FILTERING_ARTIFICIAL_INTELLIGENCE
          - CONTENT_FILTERING_ARTS_AND_CRAFTS
          - CONTENT_FILTERING_ASTROLOGY
          - CONTENT_FILTERING_AUCTIONS_AND_MARKETPLACES
          - CONTENT_FILTERING_AUDIO_STREAMING
          - CONTENT_FILTERING_BODY_ART
          - CONTENT_FILTERING_BOTNETS
          - CONTENT_FILTERING_BUSINESS
          - CONTENT_FILTERING_CARTOONS_AND_ANIME
          - CONTENT_FILTERING_CHAT
          - CONTENT_FILTERING_CHILD_ABUSE
          - CONTENT_FILTERING_CIPA
          - CONTENT_FILTERING_CLOTHING
          - CONTENT_FILTERING_COMIC_BOOKS
          - CONTENT_FILTERING_COUNTERFEIT_BRANDS
          - CONTENT_FILTERING_COUPONS
          - CONTENT_FILTERING_CRYPTOCURRENCY
          - CONTENT_FILTERING_CRYPTOMINING
          - CONTENT_FILTERING_DATING_AND_RELATIONSHIPS
          - CONTENT_FILTERING_DECEPTIVE_ADS
          - CONTENT_FILTERING_DGA_DOMAINS
          - CONTENT_FILTERING_DIGITAL_POSTCARDS
          - CONTENT_FILTERING_DIGITAL_SAFETY
          - CONTENT_FILTERING_DNS_TUNNELING
          - CONTENT_FILTERING_DRUGS
          - CONTENT_FILTERING_ECOMMERCE
          - CONTENT_FILTERING_ECONOMY_AND_FINANCE
          - CONTENT_FILTERING_EDUCATION
          - CONTENT_FILTERING_EDUCATIONAL_INSTITUTIONS
          - CONTENT_FILTERING_EMPTY_DOMAINS
          - CONTENT_FILTERING_ENTERTAINMENT
          - CONTENT_FILTERING_FASHION
          - CONTENT_FILTERING_FILE_SHARING
          - CONTENT_FILTERING_FINE_ARTS
          - CONTENT_FILTERING_FOOD_AND_DRINK
          - CONTENT_FILTERING_FORUMS
          - CONTENT_FILTERING_GAMBLING
          - CONTENT_FILTERING_GAMING
          - CONTENT_FILTERING_GOVERNMENT
          - CONTENT_FILTERING_HACKING
          - CONTENT_FILTERING_HATE_SPEECH_AND_EXTREMISM
          - CONTENT_FILTERING_HEALTH_AND_FITNESS
          - CONTENT_FILTERING_HOBBIES_AND_INTERESTS
          - CONTENT_FILTERING_HOME_AND_GARDEN
          - CONTENT_FILTERING_HOME_VIDEO
          - CONTENT_FILTERING_HUMOR
          - CONTENT_FILTERING_INSTANT_MESSENGERS
          - CONTENT_FILTERING_INTERNET_CALLING_AND_VOIP
          - CONTENT_FILTERING_IT_SERVICES
          - CONTENT_FILTERING_JOB_SEARCH_AND_CAREERS
          - CONTENT_FILTERING_LIFESTYLE
          - CONTENT_FILTERING_LINGERIE_AND_BIKINI
          - CONTENT_FILTERING_LOGIN_SCREENS
          - CONTENT_FILTERING_MAGAZINES
          - CONTENT_FILTERING_MALWARE
          - CONTENT_FILTERING_MEDIA_AND_FILE_HOSTING
          - CONTENT_FILTERING_MESSAGING
          - CONTENT_FILTERING_MISCELLANEOUS
          - CONTENT_FILTERING_MOVIES
          - CONTENT_FILTERING_MUSIC
          - CONTENT_FILTERING_NEWLY_DISCOVERED_DOMAINS
          - CONTENT_FILTERING_NEWLY_REGISTERED_DOMAINS
          - CONTENT_FILTERING_NEWS_AND_MEDIA
          - CONTENT_FILTERING_NUDITY
          - CONTENT_FILTERING_PARANORMAL
          - CONTENT_FILTERING_PARENTING
          - CONTENT_FILTERING_PARKED_DOMAINS
          - CONTENT_FILTERING_PEER_TO_PEER
          - CONTENT_FILTERING_BLOGS
          - CONTENT_FILTERING_PETS
          - CONTENT_FILTERING_PHISHING
          - CONTENT_FILTERING_PHOTO_SHARING
          - CONTENT_FILTERING_PHOTOGRAPHY
          - CONTENT_FILTERING_POLITICS
          - CONTENT_FILTERING_PORNOGRAPHY
          - CONTENT_FILTERING_PORTALS
          - CONTENT_FILTERING_PRIVATE_IP_ADDRESSES
          - CONTENT_FILTERING_PROFANITY
          - CONTENT_FILTERING_PROFESSIONAL_NETWORKING
          - CONTENT_FILTERING_QUESTIONABLE_ACTIVITIES
          - CONTENT_FILTERING_RADIO
          - CONTENT_FILTERING_REAL_ESTATE
          - CONTENT_FILTERING_REDIRECTORS
          - CONTENT_FILTERING_RELIGION
          - CONTENT_FILTERING_SAFE_FOR_KIDS
          - CONTENT_FILTERING_SCIENCE
          - CONTENT_FILTERING_SEARCH_ENGINES
          - CONTENT_FILTERING_SEX_EDUCATION
          - CONTENT_FILTERING_SEXUALITY
          - CONTENT_FILTERING_SHOPPING
          - CONTENT_FILTERING_SOCIAL_NETWORKS
          - CONTENT_FILTERING_SPACE_AND_ASTRONOMY
          - CONTENT_FILTERING_SPAM
          - CONTENT_FILTERING_SPORTS
          - CONTENT_FILTERING_SPYWARE
          - CONTENT_FILTERING_SWIMSUITS
          - CONTENT_FILTERING_TECHNOLOGY
          - CONTENT_FILTERING_TELEVISION
          - CONTENT_FILTERING_TOBACCO
          - CONTENT_FILTERING_TRANSLATORS
          - CONTENT_FILTERING_TRAVEL
          - CONTENT_FILTERING_UNREACHABLE_DOMAINS
          - CONTENT_FILTERING_UNRELIABLE_INFORMATION
          - CONTENT_FILTERING_VEHICLES
          - CONTENT_FILTERING_VIDEO_STREAMING
          - CONTENT_FILTERING_VIOLENCE
          - CONTENT_FILTERING_WEAPONS
          - CONTENT_FILTERING_WEATHER
          - CONTENT_FILTERING_WEBMAIL
        ips:
          $ref: "#/components/schemas/TrafficFlowIpsDto"
        destination:
          $ref: "#/components/schemas/TrafficFlowEndpointDto"
        policies:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowPolicyDto"
        risk:
          type: string
          enum:
          - low
          - medium
          - high
        next_ai:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowNextAiDto"
        flow_start_time:
          type: integer
          format: int64
        flow_end_time:
          type: integer
          format: int64
    TrafficFlowEndpointDto:
      properties:
        port:
          type: integer
          format: int32
        zone_name:
          type: string
        zone_id:
          type: string
        region:
          type: string
        network_id:
          type: string
        nat_ip:
          type: string
        subnet:
          type: string
        nat_port:
          type: integer
          format: int32
        network_name:
          type: string
        client_oui:
          type: string
        client_identity:
          type: string
        domains:
          type: array
          items:
            type: string
        id:
          type: string
        ip:
          type: string
        host_name:
          type: string
        mac:
          type: string
        client_name:
          type: string
        client_fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        icon_filename:
          type: string
        icon_resolutions:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
        device_model:
          type: string
        device_name:
          type: string
    TrafficFlowFileDto:
      properties:
        file_type:
          type: string
        file_name:
          type: string
        file_path:
          type: string
        file_size:
          type: integer
          format: int64
    TrafficFlowInOutDto:
      properties:
        network_id:
          type: string
        network_name:
          type: string
    TrafficFlowIpsDto:
      properties:
        category_name:
          type: string
        session_id:
          type: integer
          format: int64
        signature:
          type: string
        description:
          type: string
        cve_reference:
          type: string
        signature_id:
          type: integer
          format: int64
        signature_class:
          type: string
        relevant_cve:
          type: string
        affected_product:
          type: string
        alarm_category_potential_risk:
          type: string
        enhanced_detection:
          type: boolean
        advanced_information:
          type: string
    TrafficFlowNextAiDto:
      properties:
        url:
          type: string
        kind:
          type: string
          enum:
          - common
          - file_download
          - media_player
          - search_engine
        query:
          type: string
    TrafficFlowPolicyDto:
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - AD_BLOCKING
          - CONTENT_FILTERING
          - DESTINATION_NAT
          - FIREWALL
          - INTRUSION_PREVENTION
          - MASQUERADE_NAT
          - NEXT_AI
          - POLICY_BASED_ROUTING
          - PORT_FORWARDING
          - PROTECTION
          - QOS
          - SOURCE_NAT
          - PREDEFINED_MASQUERADE_NAT
          - PREDEFINED_FIREWALL
        id:
          type: string
        internal_type:
          type: string
          enum:
          - OLD_AD_BLOCKING
          - CONNTRACK
          - DESTINATION_NAT
          - FIREWALL_POLICY
          - FIREWALL_RULE
          - HONEYPOT
          - MASQUERADE
          - SIMPLE_APP_BLOCK
          - NEXT_AI_APP
          - NEXT_AI_CERTIFICATE_BLOCK
          - NEXT_AI_FILE
          - NEXT_AI_INSPECT
          - NEXT_AI_QUERY
          - NEXT_AI_RISK_BLOCK
          - NEXT_AI_URL
          - OLD_CONTENT_FILTERING
          - POLICY_BASED_ROUTING
          - PORT_FORWARDING
          - QOS
          - REGION_BLOCKING
          - SIGNATURE
          - SOURCE_NAT
          - TRAFFIC_RULE
          - ZERO_DAY
          - PREDEFINED_MASQUERADE
          - PREDEFINED_FIREWALL_RULE
          - CONTENT_FILTERING
          - AD_BLOCKING
          - UNKNOWN
        ips_category:
          type: string
          enum:
          - EMERGING_ACTIVEX
          - EMERGING_ATTACK_RESPONSE
          - BOTCC
          - CI_ARMY
          - COMPROMISED
          - EMERGING_DNS
          - EMERGING_DOS
          - DSHIELD
          - EMERGING_EXPLOIT
          - EMERGING_FTP
          - EMERGING_GAMES
          - EMERGING_ICMP
          - EMERGING_IMAP
          - EMERGING_MALWARE
          - EMERGING_MOBILE
          - EMERGING_NET_BIOS
          - EMERGING_P2P
          - EMERGING_POP3
          - EMERGING_RPC
          - EMERGING_SCAN
          - EMERGING_SHELLCODE
          - EMERGING_SMTP
          - EMERGING_SNMP
          - EMERGING_SQL
          - EMERGING_TELNET
          - EMERGING_TFTP
          - TOR
          - EMERGING_USERAGENT
          - EMERGING_VOIP
          - EMERGING_WEBCLIENT
          - EMERGING_WEBSERVER
          - EMERGING_WEBAPPS
          - EMERGING_WORM
          - EMERGING_MISC
          - EXPLOIT_KIT
          - ADWARE_PUP
          - BOTCC_PORTGROUPED
          - PHISHING
          - THREATVIEW_CS_C2
          - THREE_CORESEC
          - CHAT
          - COINMINER
          - CURRENT_EVENTS
          - DROP
          - HUNTING
          - ICMP_INFO
          - INAPPROPRIATE
          - INFO
          - JA3
          - POLICY
          - SCADA
          - DARK_WEB_BLOCKER_LIST
          - MALICIOUS_HOSTS
    TrafficFlowZeroDayDto: {}
    ResponseBodyEmitter:
      properties:
        timeout:
          type: integer
          format: int64
    TeleportTokenDto:
      properties:
        token_id:
          type: string
        expiration_timestamp:
          type: integer
          format: int64
        creation_timestamp:
          type: integer
          format: int64
        invitation_url:
          type: string
    ModifiableTeleportTokenListParameter:
      properties:
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    Teleport Client:
      properties:
        display_name:
          type: string
        type:
          type: string
          enum:
          - WIRED
          - WIRELESS
          - VPN
          - TELEPORT
        token_id:
          type: string
        external_client_id:
          type: string
        tx_bytes:
          type: integer
          format: int64
        rx_bytes:
          type: integer
          format: int64
        assoc_time:
          type: integer
          format: int64
        ip:
          type: string
        last_seen:
          type: integer
          format: int64
        name:
          type: string
        rx_bytes-r:
          type: integer
          format: int64
        site_id:
          type: string
        uptime:
          type: integer
          format: int64
        network_id:
          type: string
        id:
          type: string
        network_members_group_ids:
          type: array
          items:
            type: string
          uniqueItems: true
        status:
          type: string
          enum:
          - online
          - offline
        rx_packets:
          type: integer
          format: int64
        tx_bytes-r:
          type: integer
          format: int64
        tx_packets:
          type: integer
          format: int64
        ipv6_address:
          type: array
          items:
            type: string
        model_name:
          type: string
        network_name:
          type: string
    Teleport invitation history list with paging info:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TeleportInvitationDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    TeleportInvitationDto:
      properties:
        client:
          $ref: "#/components/schemas/Teleport Client"
        creation_timestamp:
          type: integer
          format: int64
        expiration_timestamp:
          type: integer
          format: int64
        invitation_token_id:
          type: string
        invitation_url:
          type: string
        invitation_status:
          type: string
          enum:
          - pending
          - accepted
        token_id:
          type: string
    TeleportAccessRequestDto:
      properties:
        client_name:
          type: string
        client_id:
          type: string
      required:
      - client_id
      - client_name
    TeleportAccessResponseDto:
      properties:
        token:
          type: string
        secret:
          type: string
    VpnAlertListParameterDto:
      properties:
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    Alert list with paging info:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AlertDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    AlertDto:
      properties:
        Alert type key:
          type: string
          deprecated: true
          enum:
          - FIRMWARE_UPDATE
          - DEVICE_DISCOVERY
          - DEVICE_CONNECTION
          - DEVICE_CONFIGURATION
          - BACKUP_CONNECTION_IN_USE
          - BACKUP_POWER_IN_USE
          - CLIENT_WIFI_CONNECTION_ISSUE
          - UNASSIGNED_DEVICE_IP_ADDRESS
          - CONTENT_FILTERING_AND_RESTRICTIONS
          - ULTE_LIMIT_WARNINGS
          - ROGUE_ACCESS_POINT
          - ROGUE_CLIENT
          - SMART_DEVICES_IN_USE
          - THREAT_DETECTION_AND_PREVENTION
          - ISP
          - AP_LOW_PERFORMANCE_MODE
          - U6_PRO_ADVISORY
          - CLIENT_CONNECTION
          - VPN_CLIENT_CONNECTION
          - HOTSPOT_CLIENT_CONNECTION
          - AP_CHANNEL_CHANGE
          - AP_RADAR_DETECTION
          - BLOCKED_CLIENT_CONNECTION_ATTEMPT
          - RADIUS_SERVER_ISSUE
          - SWITCH_ISSUE
          - ADMIN_ACCESS
          - ADMIN_SETTING_CHANGE
          - AP_PACKET_LOSS
          - CERTIFICATE_EXPIRY
          - NEXT_AI_INSPECTION
          - AFC_SERVER_NOT_AVAILABLE
          - AP_LOCATION_CANNOT_BE_DETERMINED
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - DEVICE_POWER_SUPPLY_OFFLINE
          - UPS_OVERLOADED
        target:
          type: string
          description: "Target of the event, points to the main key in parameters"
          enum:
          - ACCESS_POINTS
          - ACTION
          - ACTION2
          - ADMIN
          - ADMIN_ACTIVITY_ID
          - AMOUNT
          - AUTH_METHOD
          - AVG_TX_RETRIES
          - AVG_UTILIZATION
          - AVG_INTERFERENCE
          - BSSID
          - CERTIFICATE_NAME
          - CHANNEL
          - CHANNEL_WIDTH
          - CLIENT
          - CLIENTS
          - DST_CLIENT
          - SRC_CLIENT
          - DST_DEVICE
          - SRC_DEVICE
          - CONNECTION_SPEED
          - CONNECTED_DEVICE_WITH_PORT
          - CONSOLE_NAME
          - CONSOLE_WITH_DEVICE_NAME
          - COUNT
          - DATA_UP
          - DATA_DOWN
          - DATA_TOTAL
          - DATE_TIME
          - DOWNLINK
          - SIGNAL_STRENGTH
          - DEVICE
          - DEVICES
          - DEVICE_POWER
          - DEVICE_FROM
          - DEVICE_TO
          - DEVICE_WITH_PORT
          - DOWNLINK_MACS
          - ESSID
          - FREQUENCY
          - INTERFACE
          - IP
          - DST_IP
          - SRC_IP
          - INITIATOR_ID
          - ISP_NAME
          - LATENCY
          - LAST_SUCCESS_DATE_TIME
          - LEARN_MORE
          - NEAREST_AP
          - NETWORK
          - NETWORK_OPERATOR
          - NETWORK_OR_WLAN
          - METHOD
          - OBJECT
          - PLATFORM
          - PORT
          - POWER_BUDGET
          - POWER_USAGE
          - POWER_REMAINING
          - POWER_REQUIREMENT
          - PREVIOUS_CHANNEL
          - PREVIOUS_CHANNEL_WIDTH
          - PREVIOUS_RADIO_BAND
          - PREVIOUS_SIGNAL_STRENGTH
          - PREVIOUS_VERSION
          - RADIO_BAND
          - REASON
          - REMOTE_IP
          - RSSI
          - RX_DROPPED
          - RX_ERRORS
          - SECTION
          - SETTING_NAME
          - SITE
          - SUBNET
          - DURATION
          - THRESHOLD
          - TIME_FRAME
          - TOTAL
          - TOTAL_DISTINCT_CLIENTS
          - TRIGGER
          - TX_DROPPED
          - TX_ERRORS
          - UPLINK
          - URL
          - USER
          - WIFI_STATS
          - WLAN
          - VERSION
          - MAC
          - NEXT_AI
          - THREAT_LOG_ID
          - PSU_ID
          - FAN_ID
          - PORT_RANGE
          - DOCUMENT_REF
          - TOP_PORTS
          - TOP_SWITCH
          - BOTTOM_PORTS
          - BOTTOM_SWITCH
          - VPN_SERVER_ADDRESS
          - WAN_ID
          - WAN_NAME
          - WAN_SUBNET
          - WAN_SLA
          - WAN_SLA_SERVER
          - FAILOVER_PORT
          - FAILOVER_WAN_ID
          - FAILOVER_WAN_NAME
          - FAILOVER_WAN_SUBNET
          - FAILOVER_WAN_SLA
          - FAILOVER_ISP_NAME
        Alert id:
          type: string
        Alert key:
          type: string
          enum:
          - DEVICE_COMMIT_ERROR
          - AP_CLIENT_PACKET_LOSS
          - DEVICE_UNREACHABLE
          - DEVICE_UNREACHABLE_WITH_DOWNLINKS
          - MULTIPLE_DEVICES_UNREACHABLE
          - DEVICE_RECONNECTED
          - DEVICE_RECONNECTED_WITH_DOWNLINKS
          - DEVICE_RECONNECTED_SEVERAL_TIMES
          - DEVICE_DISCOVERED
          - MULTIPLE_DEVICES_DISCOVERED
          - DEVICE_ADOPTED
          - DEVICE_MANAGED_BY_OTHER_CONTROLLER
          - DEVICE_POWERED_BY_USP_RPS
          - DEVICES_POWERED_BY_USW_MC
          - DEVICES_POWERED_BY_USW_MC_V2
          - DEVICE_POWER_SUPPLY_OFFLINE
          - DEVICE_FAN_OFFLINE
          - DEVICE_FAN_HIGH_LEVEL_SPEED
          - DEVICE_FAN_NOT_OPERATING
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES_2
          - NETWORK_WAN_FAILED
          - NETWORK_WAN_FAILED_2
          - NETWORK_WAN_FAILED_TEMPORARY
          - NETWORK_WAN_FAILED_TEMPORARY_2
          - NETWORK_WAN_RESTORED
          - NETWORK_WAN_RESTORED_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_WAN
          - NETWORK_RETURNED_FROM_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_LTE
          - NETWORK_RETURNED_FROM_BACKUP_LTE_2
          - CLIENT_IP_CONFLICT
          - CLIENT_IP_CONFLICT_BULK
          - ROGUE_CLIENT_DETECTED
          - CLIENT_ROAMED
          - CLIENT_ROAMED_2
          - CLIENT_WIFI_SCORE_HAS_DROPPED
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES_OR_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_RETURNED_TO_NORMAL
          - FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_AVAILABLE_V2
          - BULK_FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_FAILED
          - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
          - FIRMWARE_UPDATED
          - FIRMWARE_UPDATED_V2
          - CLIENT_CONNECTED
          - CLIENT_CONNECTED_WIRELESS
          - CLIENT_CONNECTED_WIRELESS_2
          - CLIENT_CONNECTED_WIRED
          - CLIENT_CONNECTED_WIRED_2
          - CLIENT_DISCONNECTED
          - CLIENT_DISCONNECTED_WIRELESS
          - CLIENT_DISCONNECTED_WIRELESS_2
          - CLIENT_DISCONNECTED_WIRED
          - CLIENT_DISCONNECTED_WIRED_2
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_CONNECTED_V2
          - VPN_CLIENT_DISCONNECTED
          - VPN_CLIENT_DISCONNECTED_V2
          - HOTSPOT_CLIENT_CONNECTED
          - HOTSPOT_CLIENT_CONNECTED_V2
          - HOTSPOT_CLIENT_DISCONNECTED
          - HOTSPOT_CLIENT_DISCONNECTED_V2
          - CLIENT_CAN_NOT_ACQUIRE_IP_ADDRESS
          - DHCP_POOL_EXHAUSTED
          - ROGUE_AP_DETECTED
          - ROGUE_AP_DETECTED_V2
          - AP_CHANGED_CHANNELS
          - AP_CHANGED_CHANNELS_RADIO_AI
          - AP_LOW_PERFORMANCE_MODE
          - BLOCKED_CLIENT_TRIED_CONNECT_TO_NETWORK
          - RADIUS_SERVER_ISSUE
          - RADIUS_SERVER_ISSUE_V2
          - AP_DETECTED_RADAR
          - AP_DETECTED_RADAR_V2
          - SMART_POWER_MODEM_RESTARTED
          - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
          - THREAT_BLOCKED
          - THREAT_BLOCKED_V2
          - THREAT_BLOCKED_V3
          - THREAT_DETECTED_V2
          - THREAT_DETECTED_V3
          - THREAT_BLOCKED_KNOWN_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_CLIENT
          - THREAT_BLOCKED_KNOWN_DESTINATION_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - THREAT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_CLIENT
          - THREAT_DETECTED_KNOWN_DESTINATION_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - HONEYPOT_HIT_DETECTED
          - HONEYPOT_HIT_DETECTED_V2
          - HONEYPOT_HIT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED
          - ULTE_WARNING_LIMIT_EXCEEDED
          - ULTE_DATA_LIMIT_REACHED
          - ISP_HIGH_LATENCY
          - ISP_HIGH_LATENCY_2
          - ISP_PACKET_LOSS
          - ISP_PACKET_LOSS_2
          - VPN_SITE_TO_SITE_DISCONNECTED
          - TELEPORT_CLIENT_CONNECTED
          - TELEPORT_CLIENT_DISCONNECTED
          - HOTSPOT_GUEST_AUTHORIZED
          - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
          - ADMIN_ACCESS
          - GENERATED
          - MADE_CHANGES_ONE_GLOBAL_SETTING
          - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
          - MADE_CHANGES_ONE_SETTING_OBJECT
          - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
          - PAUSED_ENTITY
          - RESUMED_ENTITY
          - REMOVED_ENTITY
          - U6_PRO_ADVISORY
          - POE_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED_V2
          - DEVICE_UPS_OFFLINE
          - DEVICE_UPS_OFFLINE_TIME
          - DEVICE_UPS_BATTERY_POWER
          - DEVICE_UPS_POWER_RESTORED
          - PORT_TRANSMISSION_ERRORS
          - PORT_DROPPED_TRAFFIC
          - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
          - NETWORK_LOOP_DETECTED_BY_STP
          - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
          - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
          - SSL_CERTIFICATE_EXPIRY
          - SSL_CERTIFICATE_EXPIRY_V2
          - SSL_INSPECTION_BYPASS
          - AFC_SERVER_NOT_AVAILABLE
          - AFC_INDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - AFC_OUTDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - LOCATION_CANNOT_BE_DETERMINED
          - AFC_INDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AFC_OUTDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - LAG_PORT_NEGOTIATION_FAILED
          - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
          - MCLAG_TARGET_DEVICE_PORT_NEGOTIATION_FAILED
          - TRAFFIC_BLOCKED
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_DEVICES
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT_AND_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE_AND_DESTINATION_CLIENT
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_STARTED_SOURCE_DEVICE
          - TRAFFIC_ROUTING_ENDED
          - TRAFFIC_ROUTING_ENDED_SOURCE_DEVICE
          - HIGH_UPLOAD_TRAFFIC
          - HIGH_DOWNLOAD_TRAFFIC
          - HIGH_TOTAL_TRAFFIC
        Alert status:
          type: string
          enum:
          - NEW
          - READ
          - STALED
          - HIDDEN
        Already translated message with replaced parameters:
          type: string
        Creation time Unix timestamp:
          type: integer
          format: int64
          example: 1615989695
        Additional parameters mapped by their kind:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AlertDtoParameters"
        Alert event key:
          type: string
          enum:
          - ADMIN_ACCESS
          - AFC_SERVER_NOT_AVAILABLE
          - AP_CHANGED_CHANNELS
          - AP_CLIENT_PACKET_LOSS
          - AP_DETECTED_RADAR
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AP_LOW_PERFORMANCE_MODE
          - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
          - BLOCKED_BY_FIREWALL
          - BULK_FIRMWARE_UPDATE_AVAILABLE
          - CLIENT_CONNECTED_WIRED
          - CLIENT_CONNECTED_WIRELESS
          - CLIENT_DISCONNECTED_WIRED
          - CLIENT_DISCONNECTED_WIRELESS
          - CLIENT_IP_CONFLICT
          - CLIENT_ROAMED
          - DEVICE_ADOPTED
          - DEVICE_COMMIT_ERROR
          - DEVICE_DISCOVERED
          - DEVICE_FAN_NOT_OPERATING
          - DEVICE_FAN_OFFLINE
          - DEVICE_POWER_SUPPLY_OFFLINE
          - DEVICE_POWERED_BY_USP_RPS
          - DEVICE_RECONNECTED
          - DEVICE_RECONNECTED_SEVERAL_TIMES
          - DEVICE_RECONNECTED_WITH_DOWNLINKS
          - DEVICE_UNREACHABLE
          - DEVICE_UPS_BATTERY_POWER
          - DEVICE_UPS_OFFLINE
          - DEVICE_UPS_OFFLINE_TIME
          - DEVICE_UPS_POWER_RESTORED
          - DEVICES_POWERED_BY_USW_MC
          - DHCP_POOL_EXHAUSTED
          - DNS_SERVER_ISSUE
          - FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
          - FIRMWARE_UPDATE_FAILED
          - FIRMWARE_UPDATED
          - GENERATED
          - HIGH_TRAFFIC
          - HONEYPOT_HIT_DETECTED
          - HOTSPOT_GUEST_AUTHORIZED
          - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
          - ISP_HIGH_LATENCY
          - ISP_PACKET_LOSS
          - LOCATION_CANNOT_BE_DETERMINED
          - MADE_CHANGES
          - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
          - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
          - MULTIPLE_DEVICES_DISCOVERED
          - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
          - MULTIPLE_DEVICES_UNREACHABLE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
          - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
          - NETWORK_LOOP_DETECTED_BY_STP
          - NETWORK_WAN_FAILED
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES
          - NETWORK_WAN_FAILED_TEMPORARY
          - NETWORK_WAN_RESTORED
          - PAUSED_ENTITY
          - POE_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED
          - POLICY_BASED_ROUTING_STARTED
          - POLICY_BASED_ROUTING_STOPPED
          - PORT_DROPPED_TRAFFIC
          - PORT_TRANSMISSION_ERRORS
          - RADIUS_SERVER_ISSUE
          - REMOVED_ENTITY
          - RESUMED_ENTITY
          - ROGUE_AP_DETECTED
          - SMART_POWER_MODEM_RESTARTED
          - SSL_CERTIFICATE_EXPIRY
          - SSL_INSPECTION_BYPASS
          - TELEPORT_CLIENT_CONNECTED
          - TELEPORT_CLIENT_DISCONNECTED
          - THREAT_BLOCKED
          - THREAT_DETECTED
          - ULTE_DATA_LIMIT_REACHED
          - ULTE_WARNING_LIMIT_EXCEEDED
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_DISCONNECTED
          - VPN_SITE_TO_SITE_DISCONNECTED
          - UNKNOWN
        Alert Category:
          type: string
          enum:
          - MONITORING
          - INTERNET
          - POWER
          - SECURITY
          - SYSTEM
          - UNKNOWN
        Alert Subcategory:
          type: string
          enum:
          - MONITORING_GUEST_HOTSPOT
          - MONITORING_STATUS
          - MONITORING_WIFI
          - MONITORING_WIRED
          - INTERNET_OUTAGE_AND_FAILOVER
          - INTERNET_PERFORMANCE
          - POWER_POE
          - POWER_REDUNDANCY
          - SECURITY_FIREWALL
          - SECURITY_HONEYPOT
          - SECURITY_INTRUSION_PREVENTION
          - SYSTEM_ADMIN
          - SYSTEM_DEVICES
          - SYSTEM_NETWORK
          - SYSTEM_VPN
          - SYSTEM_WIFI
          - UNKNOWN
        title_raw:
          type: string
          description: Alert title with no parameters replaces. Present only if applicable
        message_raw:
          type: string
          description: Already translated message but with no parameters replaces.
            Present only if applicable
        Notification is supposed to be shown od dashboard:
          type: boolean
        replace_alerts:
          type: array
          description: A list of alert ids that were replaced by current Alert on
            insert. Used only in WebSocket response when a new Alert was triggered
          items:
            type: string
        Alert severity:
          type: string
          enum:
          - INFO
          - WARNING
          - VERY_HIGH
          - HIGH
          - MEDIUM
          - LOW
        Already translated title with replaced parameters:
          type: string
    AlertDtoParameters:
      properties:
        Name of the referenced entity:
          type: string
        ID of the referenced entity:
          type: string
        enclose the parameter with brackets:
          type: boolean
        System log parameter not actionable:
          type: boolean
          example: true
    UpdateAlertListParameterDto:
      properties:
        systemLogDeviceTypes:
          type: array
          items:
            type: string
            enum:
            - GATEWAYS
            - SWITCHES
            - ACCESS_POINT
            - SMART_POWER
            - BUILDING_TO_BUILDING_BRIDGES
            - UNIFI_LTE
            - NON_NETWORK_DEVICES
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    TriggerLogListParameterDto:
      properties:
        sourceHosts:
          type: array
          items:
            type: string
        triggerTypes:
          type: array
          items:
            type: string
            enum:
            - FIREWALL_POLICY
            - FIREWALL_RULE
            - TRAFFIC_RULE
            - TRAFFIC_ROUTE
            - SIMPLE_APP_BLOCK
            - PORT_FORWARDING
            - DESTINATION_NAT
            - MASQUERADE
            - SOURCE_NAT
            - PREDEFINED_MASQUERADE
            - PREDEFINED_FIREWALL_RULE
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    TriggerLogDto:
      properties:
        id:
          type: string
        key:
          type: string
          enum:
          - TRAFFIC_BLOCKED
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_ENDED
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        source:
          $ref: "#/components/schemas/TriggerLogHostDto"
        destination:
          $ref: "#/components/schemas/TriggerLogHostDto"
        trigger:
          $ref: "#/components/schemas/TriggerLogTriggerDto"
    TriggerLogHostDto:
      properties:
        type:
          type: string
          enum:
          - DEVICE
          - UNIFI_DEVICE_CLIENT
          - CLIENT
        mac:
          type: string
        ip:
          type: string
        port:
          type: integer
          format: int32
        name:
          type: string
    TriggerLogListDto:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TriggerLogDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    TriggerLogTriggerDto:
      properties:
        type:
          type: string
          enum:
          - FIREWALL_POLICY
          - FIREWALL_RULE
          - TRAFFIC_RULE
          - TRAFFIC_ROUTE
          - SIMPLE_APP_BLOCK
          - PORT_FORWARDING
          - DESTINATION_NAT
          - MASQUERADE
          - SOURCE_NAT
          - PREDEFINED_MASQUERADE
          - PREDEFINED_FIREWALL_RULE
        trigger_name:
          type: string
        trigger_id:
          type: string
    ImmutableListString:
      type: array
      items:
        type: string
        enum:
        - HONEYPOT
        - THREAT
      properties:
        empty:
          type: boolean
    ImmutableListX:
      type: array
      items:
        type: string
        enum:
        - INCOMING
        - OUTGOING
        - INTERNAL
      properties:
        empty:
          type: boolean
    Threat Log search parameters:
      properties:
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        clientMacs:
          type: array
          items:
            type: string
          properties:
            empty:
              type: boolean
        threatTypes:
          type: array
          items:
            type: string
            enum:
            - HONEYPOT
            - THREAT
          properties:
            empty:
              type: boolean
        threatDirections:
          type: array
          items:
            type: string
            enum:
            - INCOMING
            - OUTGOING
            - INTERNAL
          properties:
            empty:
              type: boolean
    E:
      properties:
        has_next:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/ThreatLogFormattedDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
    ThreatLogFormattedDto:
      properties:
        alarm_id:
          type: string
        ips_alert_id:
          type: string
        threat_direction:
          type: string
          enum:
          - INCOMING
          - OUTGOING
          - INTERNAL
        device:
          type: string
        device_mac:
          type: string
        counterpart:
          type: string
        counterpart_mac:
          type: string
        counterpart_location:
          type: string
        threat_type:
          type: string
          enum:
          - HONEYPOT
          - THREAT
        timestamp:
          type: integer
          format: int64
        id:
          type: string
    ThreatAlertListParameterDto:
      properties:
        threatTypes:
          type: array
          items:
            type: string
            enum:
            - HONEYPOT
            - THREAT
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    SystemCriticalAlertListParameterDto:
      properties:
        categories:
          type: array
          items:
            type: string
            enum:
            - INTERNET
            - POWER
            - DEVICES
            - SYSTEM
        systemLogDeviceTypes:
          type: array
          items:
            type: string
            enum:
            - GATEWAYS
            - SWITCHES
            - ACCESS_POINT
            - SMART_POWER
            - BUILDING_TO_BUILDING_BRIDGES
            - UNIFI_LTE
            - NON_NETWORK_DEVICES
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    NextAiAlertListParameterDto:
      properties:
        nextAiCategory:
          type: array
          items:
            type: string
            enum:
            - DEVICE
            - CLIENT
            - INTERNET
            - VPN
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    ? ImmutableListOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
    : type: array
      items:
        type: string
        enum:
        - LOOP_PROTECTION
        - SPANNING_TREE
        - DHCP_CONFLICT
      properties:
        empty:
          type: boolean
    DeviceAlertListParameterDto:
      properties:
        macs:
          type: array
          items:
            type: string
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    CriticalSystemLogListParameterDto:
      properties:
        events:
          type: array
          items:
            type: string
            enum:
            - ADMIN_ACCESS
            - AFC_SERVER_NOT_AVAILABLE
            - AP_CHANGED_CHANNELS
            - AP_CLIENT_PACKET_LOSS
            - AP_DETECTED_RADAR
            - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
            - AP_LOW_PERFORMANCE_MODE
            - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
            - BLOCKED_BY_FIREWALL
            - BULK_FIRMWARE_UPDATE_AVAILABLE
            - CLIENT_CONNECTED_WIRED
            - CLIENT_CONNECTED_WIRELESS
            - CLIENT_DISCONNECTED_WIRED
            - CLIENT_DISCONNECTED_WIRELESS
            - CLIENT_IP_CONFLICT
            - CLIENT_ROAMED
            - DEVICE_ADOPTED
            - DEVICE_COMMIT_ERROR
            - DEVICE_DISCOVERED
            - DEVICE_FAN_NOT_OPERATING
            - DEVICE_FAN_OFFLINE
            - DEVICE_POWER_SUPPLY_OFFLINE
            - DEVICE_POWERED_BY_USP_RPS
            - DEVICE_RECONNECTED
            - DEVICE_RECONNECTED_SEVERAL_TIMES
            - DEVICE_RECONNECTED_WITH_DOWNLINKS
            - DEVICE_UNREACHABLE
            - DEVICE_UPS_BATTERY_POWER
            - DEVICE_UPS_OFFLINE
            - DEVICE_UPS_OFFLINE_TIME
            - DEVICE_UPS_POWER_RESTORED
            - DEVICES_POWERED_BY_USW_MC
            - DHCP_POOL_EXHAUSTED
            - DNS_SERVER_ISSUE
            - FIRMWARE_UPDATE_AVAILABLE
            - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
            - FIRMWARE_UPDATE_FAILED
            - FIRMWARE_UPDATED
            - GENERATED
            - HIGH_TRAFFIC
            - HONEYPOT_HIT_DETECTED
            - HOTSPOT_GUEST_AUTHORIZED
            - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
            - ISP_HIGH_LATENCY
            - ISP_PACKET_LOSS
            - LOCATION_CANNOT_BE_DETERMINED
            - MADE_CHANGES
            - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
            - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
            - MULTIPLE_DEVICES_DISCOVERED
            - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
            - MULTIPLE_DEVICES_UNREACHABLE
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
            - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
            - NETWORK_LOOP_DETECTED_BY_STP
            - NETWORK_WAN_FAILED
            - NETWORK_WAN_FAILED_MULTIPLE_TIMES
            - NETWORK_WAN_FAILED_TEMPORARY
            - NETWORK_WAN_RESTORED
            - PAUSED_ENTITY
            - POE_BUDGET_EXCEEDED
            - POE_PORT_BUDGET_EXCEEDED
            - POLICY_BASED_ROUTING_STARTED
            - POLICY_BASED_ROUTING_STOPPED
            - PORT_DROPPED_TRAFFIC
            - PORT_TRANSMISSION_ERRORS
            - RADIUS_SERVER_ISSUE
            - REMOVED_ENTITY
            - RESUMED_ENTITY
            - ROGUE_AP_DETECTED
            - SMART_POWER_MODEM_RESTARTED
            - SSL_CERTIFICATE_EXPIRY
            - SSL_INSPECTION_BYPASS
            - TELEPORT_CLIENT_CONNECTED
            - TELEPORT_CLIENT_DISCONNECTED
            - THREAT_BLOCKED
            - THREAT_DETECTED
            - ULTE_DATA_LIMIT_REACHED
            - ULTE_WARNING_LIMIT_EXCEEDED
            - VPN_CLIENT_CONNECTED
            - VPN_CLIENT_DISCONNECTED
            - VPN_SITE_TO_SITE_DISCONNECTED
            - UNKNOWN
          uniqueItems: true
        searchText:
          type: string
        categories:
          type: array
          items:
            type: string
            enum:
            - MONITORING
            - INTERNET
            - POWER
            - SECURITY
            - SYSTEM
            - UNKNOWN
          uniqueItems: true
        subcategories:
          type: array
          items:
            type: string
            enum:
            - MONITORING_GUEST_HOTSPOT
            - MONITORING_STATUS
            - MONITORING_WIFI
            - MONITORING_WIRED
            - INTERNET_OUTAGE_AND_FAILOVER
            - INTERNET_PERFORMANCE
            - POWER_POE
            - POWER_REDUNDANCY
            - SECURITY_FIREWALL
            - SECURITY_HONEYPOT
            - SECURITY_INTRUSION_PREVENTION
            - SYSTEM_ADMIN
            - SYSTEM_DEVICES
            - SYSTEM_NETWORK
            - SYSTEM_VPN
            - SYSTEM_WIFI
            - UNKNOWN
          uniqueItems: true
        severities:
          type: array
          items:
            type: string
            enum:
            - INFO
            - WARNING
            - VERY_HIGH
            - HIGH
            - MEDIUM
            - LOW
          uniqueItems: true
    ClientAlertListParameterDto:
      properties:
        clientType:
          type: array
          items:
            type: string
            enum:
            - GUEST
            - TELEPORT
            - VPN
            - WIRELESS
            - RADIUS
            - WIRED
        guestAuthorizationMethod:
          type: array
          items:
            type: string
            enum:
            - FACEBOOK_SOCIAL_GATEWAY
            - FACEBOOK_WIFI
            - FREE_TRIAL
            - GOOGLE_SOCIAL_GATEWAY
            - NONE
            - PASSWORD
            - PAYMENT
            - RADIUS
            - VOUCHER
            - WE_CHAT_SOCIAL_GATEWAY
            - API
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    ApLogListParameterDto:
      properties:
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    DeviceLogDto:
      properties:
        id:
          type: string
        key:
          type: string
          enum:
          - DEVICE_COMMIT_ERROR
          - AP_CLIENT_PACKET_LOSS
          - DEVICE_UNREACHABLE
          - DEVICE_UNREACHABLE_WITH_DOWNLINKS
          - MULTIPLE_DEVICES_UNREACHABLE
          - DEVICE_RECONNECTED
          - DEVICE_RECONNECTED_WITH_DOWNLINKS
          - DEVICE_RECONNECTED_SEVERAL_TIMES
          - DEVICE_DISCOVERED
          - MULTIPLE_DEVICES_DISCOVERED
          - DEVICE_ADOPTED
          - DEVICE_MANAGED_BY_OTHER_CONTROLLER
          - DEVICE_POWERED_BY_USP_RPS
          - DEVICES_POWERED_BY_USW_MC
          - DEVICES_POWERED_BY_USW_MC_V2
          - DEVICE_POWER_SUPPLY_OFFLINE
          - DEVICE_FAN_OFFLINE
          - DEVICE_FAN_HIGH_LEVEL_SPEED
          - DEVICE_FAN_NOT_OPERATING
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES_2
          - NETWORK_WAN_FAILED
          - NETWORK_WAN_FAILED_2
          - NETWORK_WAN_FAILED_TEMPORARY
          - NETWORK_WAN_FAILED_TEMPORARY_2
          - NETWORK_WAN_RESTORED
          - NETWORK_WAN_RESTORED_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_WAN
          - NETWORK_RETURNED_FROM_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_LTE
          - NETWORK_RETURNED_FROM_BACKUP_LTE_2
          - CLIENT_IP_CONFLICT
          - CLIENT_IP_CONFLICT_BULK
          - ROGUE_CLIENT_DETECTED
          - CLIENT_ROAMED
          - CLIENT_ROAMED_2
          - CLIENT_WIFI_SCORE_HAS_DROPPED
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES_OR_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_RETURNED_TO_NORMAL
          - FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_AVAILABLE_V2
          - BULK_FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_FAILED
          - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
          - FIRMWARE_UPDATED
          - FIRMWARE_UPDATED_V2
          - CLIENT_CONNECTED
          - CLIENT_CONNECTED_WIRELESS
          - CLIENT_CONNECTED_WIRELESS_2
          - CLIENT_CONNECTED_WIRED
          - CLIENT_CONNECTED_WIRED_2
          - CLIENT_DISCONNECTED
          - CLIENT_DISCONNECTED_WIRELESS
          - CLIENT_DISCONNECTED_WIRELESS_2
          - CLIENT_DISCONNECTED_WIRED
          - CLIENT_DISCONNECTED_WIRED_2
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_CONNECTED_V2
          - VPN_CLIENT_DISCONNECTED
          - VPN_CLIENT_DISCONNECTED_V2
          - HOTSPOT_CLIENT_CONNECTED
          - HOTSPOT_CLIENT_CONNECTED_V2
          - HOTSPOT_CLIENT_DISCONNECTED
          - HOTSPOT_CLIENT_DISCONNECTED_V2
          - CLIENT_CAN_NOT_ACQUIRE_IP_ADDRESS
          - DHCP_POOL_EXHAUSTED
          - ROGUE_AP_DETECTED
          - ROGUE_AP_DETECTED_V2
          - AP_CHANGED_CHANNELS
          - AP_CHANGED_CHANNELS_RADIO_AI
          - AP_LOW_PERFORMANCE_MODE
          - BLOCKED_CLIENT_TRIED_CONNECT_TO_NETWORK
          - RADIUS_SERVER_ISSUE
          - RADIUS_SERVER_ISSUE_V2
          - AP_DETECTED_RADAR
          - AP_DETECTED_RADAR_V2
          - SMART_POWER_MODEM_RESTARTED
          - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
          - THREAT_BLOCKED
          - THREAT_BLOCKED_V2
          - THREAT_BLOCKED_V3
          - THREAT_DETECTED_V2
          - THREAT_DETECTED_V3
          - THREAT_BLOCKED_KNOWN_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_CLIENT
          - THREAT_BLOCKED_KNOWN_DESTINATION_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - THREAT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_CLIENT
          - THREAT_DETECTED_KNOWN_DESTINATION_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - HONEYPOT_HIT_DETECTED
          - HONEYPOT_HIT_DETECTED_V2
          - HONEYPOT_HIT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED
          - ULTE_WARNING_LIMIT_EXCEEDED
          - ULTE_DATA_LIMIT_REACHED
          - ISP_HIGH_LATENCY
          - ISP_HIGH_LATENCY_2
          - ISP_PACKET_LOSS
          - ISP_PACKET_LOSS_2
          - VPN_SITE_TO_SITE_DISCONNECTED
          - TELEPORT_CLIENT_CONNECTED
          - TELEPORT_CLIENT_DISCONNECTED
          - HOTSPOT_GUEST_AUTHORIZED
          - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
          - ADMIN_ACCESS
          - GENERATED
          - MADE_CHANGES_ONE_GLOBAL_SETTING
          - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
          - MADE_CHANGES_ONE_SETTING_OBJECT
          - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
          - PAUSED_ENTITY
          - RESUMED_ENTITY
          - REMOVED_ENTITY
          - U6_PRO_ADVISORY
          - POE_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED_V2
          - DEVICE_UPS_OFFLINE
          - DEVICE_UPS_OFFLINE_TIME
          - DEVICE_UPS_BATTERY_POWER
          - DEVICE_UPS_POWER_RESTORED
          - PORT_TRANSMISSION_ERRORS
          - PORT_DROPPED_TRAFFIC
          - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
          - NETWORK_LOOP_DETECTED_BY_STP
          - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
          - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
          - SSL_CERTIFICATE_EXPIRY
          - SSL_CERTIFICATE_EXPIRY_V2
          - SSL_INSPECTION_BYPASS
          - AFC_SERVER_NOT_AVAILABLE
          - AFC_INDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - AFC_OUTDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - LOCATION_CANNOT_BE_DETERMINED
          - AFC_INDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AFC_OUTDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - LAG_PORT_NEGOTIATION_FAILED
          - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
          - MCLAG_TARGET_DEVICE_PORT_NEGOTIATION_FAILED
          - TRAFFIC_BLOCKED
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_DEVICES
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT_AND_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE_AND_DESTINATION_CLIENT
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_STARTED_SOURCE_DEVICE
          - TRAFFIC_ROUTING_ENDED
          - TRAFFIC_ROUTING_ENDED_SOURCE_DEVICE
          - HIGH_UPLOAD_TRAFFIC
          - HIGH_DOWNLOAD_TRAFFIC
          - HIGH_TOTAL_TRAFFIC
        message_raw:
          type: string
        message:
          type: string
        target:
          type: string
          enum:
          - ACCESS_POINTS
          - ACTION
          - ACTION2
          - ADMIN
          - ADMIN_ACTIVITY_ID
          - AMOUNT
          - AUTH_METHOD
          - AVG_TX_RETRIES
          - AVG_UTILIZATION
          - AVG_INTERFERENCE
          - BSSID
          - CERTIFICATE_NAME
          - CHANNEL
          - CHANNEL_WIDTH
          - CLIENT
          - CLIENTS
          - DST_CLIENT
          - SRC_CLIENT
          - DST_DEVICE
          - SRC_DEVICE
          - CONNECTION_SPEED
          - CONNECTED_DEVICE_WITH_PORT
          - CONSOLE_NAME
          - CONSOLE_WITH_DEVICE_NAME
          - COUNT
          - DATA_UP
          - DATA_DOWN
          - DATA_TOTAL
          - DATE_TIME
          - DOWNLINK
          - SIGNAL_STRENGTH
          - DEVICE
          - DEVICES
          - DEVICE_POWER
          - DEVICE_FROM
          - DEVICE_TO
          - DEVICE_WITH_PORT
          - DOWNLINK_MACS
          - ESSID
          - FREQUENCY
          - INTERFACE
          - IP
          - DST_IP
          - SRC_IP
          - INITIATOR_ID
          - ISP_NAME
          - LATENCY
          - LAST_SUCCESS_DATE_TIME
          - LEARN_MORE
          - NEAREST_AP
          - NETWORK
          - NETWORK_OPERATOR
          - NETWORK_OR_WLAN
          - METHOD
          - OBJECT
          - PLATFORM
          - PORT
          - POWER_BUDGET
          - POWER_USAGE
          - POWER_REMAINING
          - POWER_REQUIREMENT
          - PREVIOUS_CHANNEL
          - PREVIOUS_CHANNEL_WIDTH
          - PREVIOUS_RADIO_BAND
          - PREVIOUS_SIGNAL_STRENGTH
          - PREVIOUS_VERSION
          - RADIO_BAND
          - REASON
          - REMOTE_IP
          - RSSI
          - RX_DROPPED
          - RX_ERRORS
          - SECTION
          - SETTING_NAME
          - SITE
          - SUBNET
          - DURATION
          - THRESHOLD
          - TIME_FRAME
          - TOTAL
          - TOTAL_DISTINCT_CLIENTS
          - TRIGGER
          - TX_DROPPED
          - TX_ERRORS
          - UPLINK
          - URL
          - USER
          - WIFI_STATS
          - WLAN
          - VERSION
          - MAC
          - NEXT_AI
          - THREAT_LOG_ID
          - PSU_ID
          - FAN_ID
          - PORT_RANGE
          - DOCUMENT_REF
          - TOP_PORTS
          - TOP_SWITCH
          - BOTTOM_PORTS
          - BOTTOM_SWITCH
          - VPN_SERVER_ADDRESS
          - WAN_ID
          - WAN_NAME
          - WAN_SUBNET
          - WAN_SLA
          - WAN_SLA_SERVER
          - FAILOVER_PORT
          - FAILOVER_WAN_ID
          - FAILOVER_WAN_NAME
          - FAILOVER_WAN_SUBNET
          - FAILOVER_WAN_SLA
          - FAILOVER_ISP_NAME
        timestamp:
          type: integer
          format: int64
        parameters:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AlertDtoParameters"
    DeviceLogDtoList:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/DeviceLogDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    AllSystemLogListParameterDto:
      properties:
        keys:
          type: array
          items:
            type: string
            enum:
            - DEVICE_COMMIT_ERROR
            - AP_CLIENT_PACKET_LOSS
            - DEVICE_UNREACHABLE
            - DEVICE_UNREACHABLE_WITH_DOWNLINKS
            - MULTIPLE_DEVICES_UNREACHABLE
            - DEVICE_RECONNECTED
            - DEVICE_RECONNECTED_WITH_DOWNLINKS
            - DEVICE_RECONNECTED_SEVERAL_TIMES
            - DEVICE_DISCOVERED
            - MULTIPLE_DEVICES_DISCOVERED
            - DEVICE_ADOPTED
            - DEVICE_MANAGED_BY_OTHER_CONTROLLER
            - DEVICE_POWERED_BY_USP_RPS
            - DEVICES_POWERED_BY_USW_MC
            - DEVICES_POWERED_BY_USW_MC_V2
            - DEVICE_POWER_SUPPLY_OFFLINE
            - DEVICE_FAN_OFFLINE
            - DEVICE_FAN_HIGH_LEVEL_SPEED
            - DEVICE_FAN_NOT_OPERATING
            - NETWORK_WAN_FAILED_MULTIPLE_TIMES
            - NETWORK_WAN_FAILED_MULTIPLE_TIMES_2
            - NETWORK_WAN_FAILED
            - NETWORK_WAN_FAILED_2
            - NETWORK_WAN_FAILED_TEMPORARY
            - NETWORK_WAN_FAILED_TEMPORARY_2
            - NETWORK_WAN_RESTORED
            - NETWORK_WAN_RESTORED_2
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN_2
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY_2
            - NETWORK_RETURNED_FROM_BACKUP_WAN
            - NETWORK_RETURNED_FROM_BACKUP_WAN_2
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE_2
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY_2
            - NETWORK_RETURNED_FROM_BACKUP_LTE
            - NETWORK_RETURNED_FROM_BACKUP_LTE_2
            - CLIENT_IP_CONFLICT
            - CLIENT_IP_CONFLICT_BULK
            - ROGUE_CLIENT_DETECTED
            - CLIENT_ROAMED
            - CLIENT_ROAMED_2
            - CLIENT_WIFI_SCORE_HAS_DROPPED
            - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES
            - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_WIFI_AI
            - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES_OR_WIFI_AI
            - CLIENT_WIFI_SCORE_HAS_RETURNED_TO_NORMAL
            - FIRMWARE_UPDATE_AVAILABLE
            - FIRMWARE_UPDATE_AVAILABLE_V2
            - BULK_FIRMWARE_UPDATE_AVAILABLE
            - FIRMWARE_UPDATE_FAILED
            - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
            - FIRMWARE_UPDATED
            - FIRMWARE_UPDATED_V2
            - CLIENT_CONNECTED
            - CLIENT_CONNECTED_WIRELESS
            - CLIENT_CONNECTED_WIRELESS_2
            - CLIENT_CONNECTED_WIRED
            - CLIENT_CONNECTED_WIRED_2
            - CLIENT_DISCONNECTED
            - CLIENT_DISCONNECTED_WIRELESS
            - CLIENT_DISCONNECTED_WIRELESS_2
            - CLIENT_DISCONNECTED_WIRED
            - CLIENT_DISCONNECTED_WIRED_2
            - VPN_CLIENT_CONNECTED
            - VPN_CLIENT_CONNECTED_V2
            - VPN_CLIENT_DISCONNECTED
            - VPN_CLIENT_DISCONNECTED_V2
            - HOTSPOT_CLIENT_CONNECTED
            - HOTSPOT_CLIENT_CONNECTED_V2
            - HOTSPOT_CLIENT_DISCONNECTED
            - HOTSPOT_CLIENT_DISCONNECTED_V2
            - CLIENT_CAN_NOT_ACQUIRE_IP_ADDRESS
            - DHCP_POOL_EXHAUSTED
            - ROGUE_AP_DETECTED
            - ROGUE_AP_DETECTED_V2
            - AP_CHANGED_CHANNELS
            - AP_CHANGED_CHANNELS_RADIO_AI
            - AP_LOW_PERFORMANCE_MODE
            - BLOCKED_CLIENT_TRIED_CONNECT_TO_NETWORK
            - RADIUS_SERVER_ISSUE
            - RADIUS_SERVER_ISSUE_V2
            - AP_DETECTED_RADAR
            - AP_DETECTED_RADAR_V2
            - SMART_POWER_MODEM_RESTARTED
            - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
            - THREAT_BLOCKED
            - THREAT_BLOCKED_V2
            - THREAT_BLOCKED_V3
            - THREAT_DETECTED_V2
            - THREAT_DETECTED_V3
            - THREAT_BLOCKED_KNOWN_CLIENT
            - THREAT_BLOCKED_KNOWN_SOURCE_CLIENT
            - THREAT_BLOCKED_KNOWN_DESTINATION_CLIENT
            - THREAT_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
            - THREAT_DETECTED_KNOWN_CLIENT
            - THREAT_DETECTED_KNOWN_SOURCE_CLIENT
            - THREAT_DETECTED_KNOWN_DESTINATION_CLIENT
            - THREAT_DETECTED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
            - HONEYPOT_HIT_DETECTED
            - HONEYPOT_HIT_DETECTED_V2
            - HONEYPOT_HIT_DETECTED_KNOWN_CLIENT
            - THREAT_DETECTED
            - ULTE_WARNING_LIMIT_EXCEEDED
            - ULTE_DATA_LIMIT_REACHED
            - ISP_HIGH_LATENCY
            - ISP_HIGH_LATENCY_2
            - ISP_PACKET_LOSS
            - ISP_PACKET_LOSS_2
            - VPN_SITE_TO_SITE_DISCONNECTED
            - TELEPORT_CLIENT_CONNECTED
            - TELEPORT_CLIENT_DISCONNECTED
            - HOTSPOT_GUEST_AUTHORIZED
            - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
            - ADMIN_ACCESS
            - GENERATED
            - MADE_CHANGES_ONE_GLOBAL_SETTING
            - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
            - MADE_CHANGES_ONE_SETTING_OBJECT
            - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
            - PAUSED_ENTITY
            - RESUMED_ENTITY
            - REMOVED_ENTITY
            - U6_PRO_ADVISORY
            - POE_BUDGET_EXCEEDED
            - POE_PORT_BUDGET_EXCEEDED
            - POE_PORT_BUDGET_EXCEEDED_V2
            - DEVICE_UPS_OFFLINE
            - DEVICE_UPS_OFFLINE_TIME
            - DEVICE_UPS_BATTERY_POWER
            - DEVICE_UPS_POWER_RESTORED
            - PORT_TRANSMISSION_ERRORS
            - PORT_DROPPED_TRAFFIC
            - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
            - NETWORK_LOOP_DETECTED_BY_STP
            - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
            - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
            - SSL_CERTIFICATE_EXPIRY
            - SSL_CERTIFICATE_EXPIRY_V2
            - SSL_INSPECTION_BYPASS
            - AFC_SERVER_NOT_AVAILABLE
            - AFC_INDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
            - AFC_OUTDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
            - LOCATION_CANNOT_BE_DETERMINED
            - AFC_INDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
            - AFC_OUTDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
            - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
            - LAG_PORT_NEGOTIATION_FAILED
            - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
            - MCLAG_TARGET_DEVICE_PORT_NEGOTIATION_FAILED
            - TRAFFIC_BLOCKED
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT
            - TRAFFIC_BLOCKED_KNOWN_DESTINATION_CLIENT
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE
            - TRAFFIC_BLOCKED_KNOWN_DESTINATION_DEVICE
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_DEVICES
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT_AND_DESTINATION_DEVICE
            - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE_AND_DESTINATION_CLIENT
            - TRAFFIC_ROUTING_STARTED
            - TRAFFIC_ROUTING_STARTED_SOURCE_DEVICE
            - TRAFFIC_ROUTING_ENDED
            - TRAFFIC_ROUTING_ENDED_SOURCE_DEVICE
            - HIGH_UPLOAD_TRAFFIC
            - HIGH_DOWNLOAD_TRAFFIC
            - HIGH_TOTAL_TRAFFIC
          uniqueItems: true
        events:
          type: array
          items:
            type: string
            enum:
            - ADMIN_ACCESS
            - AFC_SERVER_NOT_AVAILABLE
            - AP_CHANGED_CHANNELS
            - AP_CLIENT_PACKET_LOSS
            - AP_DETECTED_RADAR
            - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
            - AP_LOW_PERFORMANCE_MODE
            - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
            - BLOCKED_BY_FIREWALL
            - BULK_FIRMWARE_UPDATE_AVAILABLE
            - CLIENT_CONNECTED_WIRED
            - CLIENT_CONNECTED_WIRELESS
            - CLIENT_DISCONNECTED_WIRED
            - CLIENT_DISCONNECTED_WIRELESS
            - CLIENT_IP_CONFLICT
            - CLIENT_ROAMED
            - DEVICE_ADOPTED
            - DEVICE_COMMIT_ERROR
            - DEVICE_DISCOVERED
            - DEVICE_FAN_NOT_OPERATING
            - DEVICE_FAN_OFFLINE
            - DEVICE_POWER_SUPPLY_OFFLINE
            - DEVICE_POWERED_BY_USP_RPS
            - DEVICE_RECONNECTED
            - DEVICE_RECONNECTED_SEVERAL_TIMES
            - DEVICE_RECONNECTED_WITH_DOWNLINKS
            - DEVICE_UNREACHABLE
            - DEVICE_UPS_BATTERY_POWER
            - DEVICE_UPS_OFFLINE
            - DEVICE_UPS_OFFLINE_TIME
            - DEVICE_UPS_POWER_RESTORED
            - DEVICES_POWERED_BY_USW_MC
            - DHCP_POOL_EXHAUSTED
            - DNS_SERVER_ISSUE
            - FIRMWARE_UPDATE_AVAILABLE
            - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
            - FIRMWARE_UPDATE_FAILED
            - FIRMWARE_UPDATED
            - GENERATED
            - HIGH_TRAFFIC
            - HONEYPOT_HIT_DETECTED
            - HOTSPOT_GUEST_AUTHORIZED
            - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
            - ISP_HIGH_LATENCY
            - ISP_PACKET_LOSS
            - LOCATION_CANNOT_BE_DETERMINED
            - MADE_CHANGES
            - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
            - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
            - MULTIPLE_DEVICES_DISCOVERED
            - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
            - MULTIPLE_DEVICES_UNREACHABLE
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE
            - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN
            - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
            - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
            - NETWORK_LOOP_DETECTED_BY_STP
            - NETWORK_WAN_FAILED
            - NETWORK_WAN_FAILED_MULTIPLE_TIMES
            - NETWORK_WAN_FAILED_TEMPORARY
            - NETWORK_WAN_RESTORED
            - PAUSED_ENTITY
            - POE_BUDGET_EXCEEDED
            - POE_PORT_BUDGET_EXCEEDED
            - POLICY_BASED_ROUTING_STARTED
            - POLICY_BASED_ROUTING_STOPPED
            - PORT_DROPPED_TRAFFIC
            - PORT_TRANSMISSION_ERRORS
            - RADIUS_SERVER_ISSUE
            - REMOVED_ENTITY
            - RESUMED_ENTITY
            - ROGUE_AP_DETECTED
            - SMART_POWER_MODEM_RESTARTED
            - SSL_CERTIFICATE_EXPIRY
            - SSL_INSPECTION_BYPASS
            - TELEPORT_CLIENT_CONNECTED
            - TELEPORT_CLIENT_DISCONNECTED
            - THREAT_BLOCKED
            - THREAT_DETECTED
            - ULTE_DATA_LIMIT_REACHED
            - ULTE_WARNING_LIMIT_EXCEEDED
            - VPN_CLIENT_CONNECTED
            - VPN_CLIENT_DISCONNECTED
            - VPN_SITE_TO_SITE_DISCONNECTED
            - UNKNOWN
          uniqueItems: true
        searchText:
          type: string
        categories:
          type: array
          items:
            type: string
            enum:
            - MONITORING
            - INTERNET
            - POWER
            - SECURITY
            - SYSTEM
            - UNKNOWN
          uniqueItems: true
        subcategories:
          type: array
          items:
            type: string
            enum:
            - MONITORING_GUEST_HOTSPOT
            - MONITORING_STATUS
            - MONITORING_WIFI
            - MONITORING_WIRED
            - INTERNET_OUTAGE_AND_FAILOVER
            - INTERNET_PERFORMANCE
            - POWER_POE
            - POWER_REDUNDANCY
            - SECURITY_FIREWALL
            - SECURITY_HONEYPOT
            - SECURITY_INTRUSION_PREVENTION
            - SYSTEM_ADMIN
            - SYSTEM_DEVICES
            - SYSTEM_NETWORK
            - SYSTEM_VPN
            - SYSTEM_WIFI
            - UNKNOWN
          uniqueItems: true
        severities:
          type: array
          items:
            type: string
            enum:
            - INFO
            - WARNING
            - VERY_HIGH
            - HIGH
            - MEDIUM
            - LOW
          uniqueItems: true
        sortByField:
          type: string
          enum:
          - KEY
          - TIMESTAMP
          - STATUS
        sortDirection:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    Admin activity log list parameter:
      properties:
        adminAccessLogKey:
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
            enum:
            - ACCESSED_NETWORK_WEB
            - ACCESSED_NETWORK_IOS
            - ACCESSED_NETWORK_ANDROID
            - CREATED_ENTITY
            - EVALUATION_SCORE_DISMISSED
            - EVALUATION_SCORE_RESTORED
            - MADE_CHANGES
            - MADE_CHANGES_ENTITY
            - GENERATED
            - MADE_CHANGES_ONE_GLOBAL_SETTING
            - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
            - MADE_CHANGES_ONE_SETTING_OBJECT
            - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
            - PAUSED_ENTITY
            - RESUMED_ENTITY
            - REMOVED_ENTITY
            - REVOKED
          uniqueItems: true
        activity_keys:
          type: array
          items:
            type: string
            enum:
            - ACCESSED_NETWORK_WEB
            - ACCESSED_NETWORK_IOS
            - ACCESSED_NETWORK_ANDROID
            - CREATED_ENTITY
            - EVALUATION_SCORE_DISMISSED
            - EVALUATION_SCORE_RESTORED
            - MADE_CHANGES
            - MADE_CHANGES_ENTITY
            - GENERATED
            - MADE_CHANGES_ONE_GLOBAL_SETTING
            - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
            - MADE_CHANGES_ONE_SETTING_OBJECT
            - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
            - PAUSED_ENTITY
            - RESUMED_ENTITY
            - REMOVED_ENTITY
            - REVOKED
          uniqueItems: true
        change_keys:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - DEVICE
            - HOTSPOT
            - INTERNET
            - NETWORK
            - PROFILE
            - ROUTING
            - SECURITY
            - SYSTEM
            - VPN
            - WIFI
            - UNKNOWN
          uniqueItems: true
        adminIds:
          type: array
          items:
            type: string
        timestampFrom:
          type: integer
          format: int64
          minimum: 0
        timestampTo:
          type: integer
          format: int64
          minimum: 0
        pageNumber:
          type: integer
          format: int32
          minimum: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
    AdminActivityLogDto:
      properties:
        id:
          type: string
        key:
          type: string
          enum:
          - DEVICE_COMMIT_ERROR
          - AP_CLIENT_PACKET_LOSS
          - DEVICE_UNREACHABLE
          - DEVICE_UNREACHABLE_WITH_DOWNLINKS
          - MULTIPLE_DEVICES_UNREACHABLE
          - DEVICE_RECONNECTED
          - DEVICE_RECONNECTED_WITH_DOWNLINKS
          - DEVICE_RECONNECTED_SEVERAL_TIMES
          - DEVICE_DISCOVERED
          - MULTIPLE_DEVICES_DISCOVERED
          - DEVICE_ADOPTED
          - DEVICE_MANAGED_BY_OTHER_CONTROLLER
          - DEVICE_POWERED_BY_USP_RPS
          - DEVICES_POWERED_BY_USW_MC
          - DEVICES_POWERED_BY_USW_MC_V2
          - DEVICE_POWER_SUPPLY_OFFLINE
          - DEVICE_FAN_OFFLINE
          - DEVICE_FAN_HIGH_LEVEL_SPEED
          - DEVICE_FAN_NOT_OPERATING
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES_2
          - NETWORK_WAN_FAILED
          - NETWORK_WAN_FAILED_2
          - NETWORK_WAN_FAILED_TEMPORARY
          - NETWORK_WAN_FAILED_TEMPORARY_2
          - NETWORK_WAN_RESTORED
          - NETWORK_WAN_RESTORED_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_WAN
          - NETWORK_RETURNED_FROM_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_LTE
          - NETWORK_RETURNED_FROM_BACKUP_LTE_2
          - CLIENT_IP_CONFLICT
          - CLIENT_IP_CONFLICT_BULK
          - ROGUE_CLIENT_DETECTED
          - CLIENT_ROAMED
          - CLIENT_ROAMED_2
          - CLIENT_WIFI_SCORE_HAS_DROPPED
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES_OR_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_RETURNED_TO_NORMAL
          - FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_AVAILABLE_V2
          - BULK_FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_FAILED
          - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
          - FIRMWARE_UPDATED
          - FIRMWARE_UPDATED_V2
          - CLIENT_CONNECTED
          - CLIENT_CONNECTED_WIRELESS
          - CLIENT_CONNECTED_WIRELESS_2
          - CLIENT_CONNECTED_WIRED
          - CLIENT_CONNECTED_WIRED_2
          - CLIENT_DISCONNECTED
          - CLIENT_DISCONNECTED_WIRELESS
          - CLIENT_DISCONNECTED_WIRELESS_2
          - CLIENT_DISCONNECTED_WIRED
          - CLIENT_DISCONNECTED_WIRED_2
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_CONNECTED_V2
          - VPN_CLIENT_DISCONNECTED
          - VPN_CLIENT_DISCONNECTED_V2
          - HOTSPOT_CLIENT_CONNECTED
          - HOTSPOT_CLIENT_CONNECTED_V2
          - HOTSPOT_CLIENT_DISCONNECTED
          - HOTSPOT_CLIENT_DISCONNECTED_V2
          - CLIENT_CAN_NOT_ACQUIRE_IP_ADDRESS
          - DHCP_POOL_EXHAUSTED
          - ROGUE_AP_DETECTED
          - ROGUE_AP_DETECTED_V2
          - AP_CHANGED_CHANNELS
          - AP_CHANGED_CHANNELS_RADIO_AI
          - AP_LOW_PERFORMANCE_MODE
          - BLOCKED_CLIENT_TRIED_CONNECT_TO_NETWORK
          - RADIUS_SERVER_ISSUE
          - RADIUS_SERVER_ISSUE_V2
          - AP_DETECTED_RADAR
          - AP_DETECTED_RADAR_V2
          - SMART_POWER_MODEM_RESTARTED
          - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
          - THREAT_BLOCKED
          - THREAT_BLOCKED_V2
          - THREAT_BLOCKED_V3
          - THREAT_DETECTED_V2
          - THREAT_DETECTED_V3
          - THREAT_BLOCKED_KNOWN_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_CLIENT
          - THREAT_BLOCKED_KNOWN_DESTINATION_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - THREAT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_CLIENT
          - THREAT_DETECTED_KNOWN_DESTINATION_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - HONEYPOT_HIT_DETECTED
          - HONEYPOT_HIT_DETECTED_V2
          - HONEYPOT_HIT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED
          - ULTE_WARNING_LIMIT_EXCEEDED
          - ULTE_DATA_LIMIT_REACHED
          - ISP_HIGH_LATENCY
          - ISP_HIGH_LATENCY_2
          - ISP_PACKET_LOSS
          - ISP_PACKET_LOSS_2
          - VPN_SITE_TO_SITE_DISCONNECTED
          - TELEPORT_CLIENT_CONNECTED
          - TELEPORT_CLIENT_DISCONNECTED
          - HOTSPOT_GUEST_AUTHORIZED
          - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
          - ADMIN_ACCESS
          - GENERATED
          - MADE_CHANGES_ONE_GLOBAL_SETTING
          - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
          - MADE_CHANGES_ONE_SETTING_OBJECT
          - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
          - PAUSED_ENTITY
          - RESUMED_ENTITY
          - REMOVED_ENTITY
          - U6_PRO_ADVISORY
          - POE_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED_V2
          - DEVICE_UPS_OFFLINE
          - DEVICE_UPS_OFFLINE_TIME
          - DEVICE_UPS_BATTERY_POWER
          - DEVICE_UPS_POWER_RESTORED
          - PORT_TRANSMISSION_ERRORS
          - PORT_DROPPED_TRAFFIC
          - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
          - NETWORK_LOOP_DETECTED_BY_STP
          - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
          - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
          - SSL_CERTIFICATE_EXPIRY
          - SSL_CERTIFICATE_EXPIRY_V2
          - SSL_INSPECTION_BYPASS
          - AFC_SERVER_NOT_AVAILABLE
          - AFC_INDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - AFC_OUTDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - LOCATION_CANNOT_BE_DETERMINED
          - AFC_INDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AFC_OUTDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - LAG_PORT_NEGOTIATION_FAILED
          - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
          - MCLAG_TARGET_DEVICE_PORT_NEGOTIATION_FAILED
          - TRAFFIC_BLOCKED
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_DEVICES
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT_AND_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE_AND_DESTINATION_CLIENT
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_STARTED_SOURCE_DEVICE
          - TRAFFIC_ROUTING_ENDED
          - TRAFFIC_ROUTING_ENDED_SOURCE_DEVICE
          - HIGH_UPLOAD_TRAFFIC
          - HIGH_DOWNLOAD_TRAFFIC
          - HIGH_TOTAL_TRAFFIC
        change_key:
          type: string
          enum:
          - CLIENT
          - DEVICE
          - HOTSPOT
          - INTERNET
          - NETWORK
          - PROFILE
          - ROUTING
          - SECURITY
          - SYSTEM
          - VPN
          - WIFI
          - UNKNOWN
        admin:
          $ref: "#/components/schemas/AdminLogAdminDto"
        ip:
          type: string
        platform:
          type: string
          enum:
          - ANDROID
          - IOS
          - WEB
        operation:
          type: string
          enum:
          - CREATED
          - UPDATED
          - DELETED
        meta:
          $ref: "#/components/schemas/AdminChangeLogMetaDto"
        updates:
          type: array
          items:
            $ref: "#/components/schemas/AdminChangeLogUpdateDto"
        message:
          type: string
        timestamp:
          type: integer
          format: int64
    AdminActivityLogListDto:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AdminActivityLogDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    AdminChangeLogMetaDto:
      properties:
        id:
          type: string
        collection:
          type: string
        section:
          type: string
          enum:
          - ADMIN
          - AP_GROUP
          - CLIENT
          - DEVICE
          - DEVICE_UPDATE_SCHEDULE
          - DHCP_OPTION
          - DPI_APP
          - DPI_GROUP
          - DYNAMIC_DNS
          - STATIC_DNS
          - CONTENT_FILTERING
          - FIREWALL_GROUP
          - FIREWALL_RULE
          - FIREWALL_POLICY
          - FIREWALL_ZONE
          - HOTSPOT2_CONFIGURATION
          - HOTSPOT_OPERATOR
          - HOTSPOT_PACKAGE
          - NETWORK
          - NETWORK_LOCAL
          - NETWORK_SITE_VPN
          - NETWORK_VLAN_ONLY
          - NETWORK_VPN_CLIENT
          - NETWORK_VPN_SERVER
          - NETWORK_WAN
          - OSPF_ROUTE
          - BGP_ROUTE
          - PORT_CONFIGURATION
          - PORT_FORWARD
          - QOS_RULE
          - RADIUS_PROFILE
          - RADIUS_USER
          - SITE
          - STATIC_ROUTE
          - SWITCH_ACL_RULE
          - SWITCH_STACKING
          - TELEPORT_TOKEN
          - TRAFFIC_ROUTE
          - TRAFFIC_RULE
          - USER_GROUP
          - VOUCHER
          - WAN_SLA
          - WLAN_CONFIGURATION
          - WIREGUARD_VPN_USER
          - NAT
          - NEXT_AI
          - MICROSEGMENTATION
          - SETTINGS_HOTSPOT
          - SETTINGS_INTERNET
          - SETTINGS_RADIUS
          - SETTINGS_SECURITY
          - SETTINGS_SYSTEM
          - SETTINGS_VPN
          - SETTINGS_WIFI
          - SETTINGS_UNKNOWN_SITE_SETTINGS
          - SETTINGS_SUPER_SYSTEM
          - UNKNOWN
        actor:
          type: string
          enum:
          - API
          - BACKUP
          - FACTORY_DEFAULT
          - HOTSPOT_GUEST
          - INFORM
          - INFORM_STAT
          - INTERNAL
          - NETWORK_AUTO_SCALE
          - MIGRATION
          - SITE_CREATE
          - SITE_IMPORT
          - UNIFI_IDENTITY
          - UNIFI_OS
          - UNKNOWN
        request_group_id:
          type: string
        display_property_name:
          type: string
        display_property_value:
          type: string
        migration_from:
          type: string
        migration_to:
          type: string
    AdminChangeLogUpdateDto:
      properties:
        collection_key_property:
          type: string
        collection_key_value:
          type: string
        hide_value:
          type: boolean
        type:
          type: string
          enum:
          - ADD
          - UPDATE
          - DELETE
        old_value: {}
        new_value: {}
        property:
          type: string
        property_path:
          type: string
        collection_key_name:
          type: string
        collection_key_value_reference_name:
          type: string
        old_value_reference_name:
          type: string
        new_value_reference_name:
          type: string
        reference_collection:
          type: string
    AdminLogAdminDto:
      properties:
        _id:
          type: string
        name:
          type: string
        avatar_id:
          type: string
    SmartSubnetRequestDto:
      properties:
        cidr:
          type: string
      required:
      - cidr
    ShadowModeOverrideDto:
      properties:
        mac_override:
          type: string
        lan_peer_ip_override:
          type: string
    Managed Shadow Mode:
      properties:
        state:
          type: string
          enum:
          - NO_SHADOW_CANDIDATE_ADOPTED
          - READY_FOR_SETUP
          - FIRMWARE_NOT_MATCHED
          - FIRMWARE_NOT_SUPPORTED
          - IN_PROGRESS
          - SETUP_COMPLETED
          - ERROR
          - MANAGEMENT_PORT_IN_USE
        interface_name:
          type: string
        primary_mac:
          type: string
        secondary_mac:
          type: string
        waitingForManagementInterface:
          type: boolean
        waitingForVrrpStatus:
          type: boolean
    Enable device auto upgrade setting update payload:
      properties:
        Sets daily device auto upgrade hour:
          type: integer
          format: int32
          maximum: 23
          minimum: 0
      required:
      - Sets daily device auto upgrade hour
    Setting:
      type: object
      additionalProperties: {}
      properties:
        id:
          type: string
        enabled:
          type: boolean
        disabled:
          type: boolean
        collectionName:
          type: string
        siteId:
          type: string
        settingKey:
          type: string
        changeKey:
          type: string
          enum:
          - CLIENT
          - DEVICE
          - HOTSPOT
          - INTERNET
          - NETWORK
          - PROFILE
          - ROUTING
          - SECURITY
          - SYSTEM
          - VPN
          - WIFI
          - UNKNOWN
        section:
          type: string
          enum:
          - ADMIN
          - AP_GROUP
          - CLIENT
          - DEVICE
          - DEVICE_UPDATE_SCHEDULE
          - DHCP_OPTION
          - DPI_APP
          - DPI_GROUP
          - DYNAMIC_DNS
          - STATIC_DNS
          - CONTENT_FILTERING
          - FIREWALL_GROUP
          - FIREWALL_RULE
          - FIREWALL_POLICY
          - FIREWALL_ZONE
          - HOTSPOT2_CONFIGURATION
          - HOTSPOT_OPERATOR
          - HOTSPOT_PACKAGE
          - NETWORK
          - NETWORK_LOCAL
          - NETWORK_SITE_VPN
          - NETWORK_VLAN_ONLY
          - NETWORK_VPN_CLIENT
          - NETWORK_VPN_SERVER
          - NETWORK_WAN
          - OSPF_ROUTE
          - BGP_ROUTE
          - PORT_CONFIGURATION
          - PORT_FORWARD
          - QOS_RULE
          - RADIUS_PROFILE
          - RADIUS_USER
          - SITE
          - STATIC_ROUTE
          - SWITCH_ACL_RULE
          - SWITCH_STACKING
          - TELEPORT_TOKEN
          - TRAFFIC_ROUTE
          - TRAFFIC_RULE
          - USER_GROUP
          - VOUCHER
          - WAN_SLA
          - WLAN_CONFIGURATION
          - WIREGUARD_VPN_USER
          - NAT
          - NEXT_AI
          - MICROSEGMENTATION
          - SETTINGS_HOTSPOT
          - SETTINGS_INTERNET
          - SETTINGS_RADIUS
          - SETTINGS_SECURITY
          - SETTINGS_SYSTEM
          - SETTINGS_VPN
          - SETTINGS_WIFI
          - SETTINGS_UNKNOWN_SITE_SETTINGS
          - SETTINGS_SUPER_SYSTEM
          - UNKNOWN
        depiction:
          $ref: "#/components/schemas/P"
        dnsFilters:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/X"
        mailProvider:
          type: string
          enum:
          - smtp
          - cloud
          - disabled
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        changes:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        originalFieldValues:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
    RadiusUserDto:
      properties:
        _id:
          type: string
        name:
          type: string
        x_password:
          type: string
        between 2 and 4009:
          type: integer
          format: int32
          example: 21
        ip:
          type: string
        tunnel_config_type:
          type: string
          enum:
          - vpn
          - 802.1x
          - custom
        tunnel_type:
          type: integer
          format: int32
        tunnel_medium_type:
          type: integer
          format: int32
        networkconf_id:
          type: string
        group_policy:
          type: string
          enum:
          - GLOBAL
          - MAC_ACL
          - UID
        ulp_user_id:
          type: string
        filter_ids:
          type: array
          items:
            type: string
      required:
      - name
      - x_password
    RadioAiRequestDto:
      properties:
        calculation_id:
          type: string
        include_all_devices:
          type: boolean
        include_devices:
          type: array
          items:
            type: string
      required:
      - calculation_id
    Packet Capture Start Request:
      properties:
        duration:
          type: integer
          format: int32
          description: Duration of the packet capture in seconds
          example: 30
          maximum: 300
          minimum: 10
        mac:
          type: string
          description: MAC address of the device to capture packets
          example: 00:11:22:33:44:55
        network_id:
          type: string
          description: Network ID of the network to capture packets
          example: 5f4b1b1e4b0f4b1e4b0f4b1e
        radio_bands:
          type: array
          description: Radios to capture packets from
          example:
          - ng
          - na
          - 6e
          items:
            type: string
            enum:
            - ad
            - na
            - ng
            - 6e
        max_size:
          type: integer
          format: int32
          description: Maximum size of the packet capture file in kilobytes
          example: 5120
          maximum: 51200
          minimum: 10
        traffic_type:
          type: string
          description: Type of traffic to capture
          enum:
          - WIRED
          - WIRELESS
          example: WIRELESS
      required:
      - mac
      - network_id
      - traffic_type
    VlanGeneratorRequestDto:
      properties:
        vlans:
          type: array
          items:
            type: integer
            format: int32
        networkconf_id:
          type: string
      required:
      - networkconf_id
      - vlans
    VlanGeneratorResponseDto:
      properties:
        vlan:
          type: integer
          format: int32
        name:
          type: string
        networkconf_id:
          type: string
    Error:
      properties:
        id:
          type: string
        httpCode:
          type: integer
          format: int32
        description:
          type: string
    PaginatedResponseMissingFingerprint:
      properties:
        meta:
          type: object
          additionalProperties: {}
        data:
          type: array
          items:
            $ref: "#/components/schemas/MissingFingerprint"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    MigrateNetworkToLayer3Request:
      properties:
        Layer 3 Switch MAC:
          type: string
          example: 11:22:33:44:55:66
      required:
      - Layer 3 Switch MAC
    Enriched LAN Configuration:
      description: LAN configuration with additional data
      properties:
        configuration:
          $ref: "#/components/schemas/NetworkConf"
        details:
          $ref: "#/components/schemas/LAN details"
        statistics:
          $ref: "#/components/schemas/LAN statistics"
    LAN details:
      properties:
        gateway_mac:
          type: string
        gateway_interface_name:
          type: string
          example: eth0
        wan_failover_group:
          type: string
          enum:
          - "WAN2, WAN_LTE_FAILOVER"
          example: WAN_LTE_FAILOVER
        creation_timestamp:
          type: integer
          format: int64
    LAN statistics:
      properties:
        dhcp_active_leases:
          type: integer
          format: int32
        dhcp_max_leases:
          type: integer
          format: int32
        dhcp_excluded_ips_count:
          type: integer
          format: int64
    FilteringInsightsOverviewQueryParams:
      properties:
        client_macs:
          type: array
          items:
            type: string
    Filtering Insights statistics:
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/Filtering Insights statistics entry"
        total_blocks:
          type: integer
          format: int64
    Filtering Insights statistics entry:
      properties:
        ad_blocks:
          type: integer
          format: int64
        interval_seconds:
          type: integer
          format: int64
        threat_blocks:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
        traffic_rule_blocks:
          type: integer
          format: int64
    FloorPlanShapeBatchDto:
      properties:
        update:
          type: array
          items:
            $ref: "#/components/schemas/FloorPlanShapeDto"
        create:
          type: array
          items:
            $ref: "#/components/schemas/FloorPlanShapeDto"
        delete_uuids:
          type: array
          items:
            type: string
    PaginatedResponseFingerprintOverride:
      properties:
        meta:
          type: object
          additionalProperties: {}
        data:
          type: array
          items:
            $ref: "#/components/schemas/FingerprintOverride"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    FingerprintAssetRequest:
      properties:
        filename:
          type: string
      required:
      - filename
    FingerprintAssetResponse:
      properties:
        url:
          type: string
    WanLanConflictRequestDto:
      properties:
        requestId:
          type: string
        conflictSubnet:
          type: string
        proposedSubnet:
          type: string
      required:
      - conflictSubnet
      - proposedSubnet
      - requestId
    WanLanConflictResponseDto:
      properties:
        requestId:
          type: string
        status:
          type: string
          enum:
          - success
          - failure
    DHCP Leases:
      properties:
        ip_address:
          type: string
        hostname:
          type: string
        local_dns_record:
          type: string
        mac_address:
          type: string
      required:
      - ip_address
      - mac_address
    ReplaceDeviceResultDto:
      properties:
        replacement_state:
          type: string
          enum:
          - WAITING_FOR_REPLACEMENT
          - WAITING_FOR_REPLACED_DEVICE_DISCONNECT
          - INCOMPATIBLE_REPLACEMENT
          - REPLACEMENT_ALREADY_ASSIGNED
          - CANNOT_REPLACE
    BatteryUpgradeActionRequestDto:
      properties:
        url:
          type: string
        action:
          type: string
        macs:
          type: array
          items:
            type: string
    BatteryActionRequestDto:
      properties:
        action:
          type: string
        macs:
          type: array
          items:
            type: string
    oooo:
      properties:
        mac:
          type: string
        name:
          type: string
        fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        unifi_device_info:
          $ref: "#/components/schemas/F"
        last_1x_identity:
          type: string
        oui:
          type: string
        hostname:
          type: string
        icon_filename:
          type: string
        is_wired:
          type: boolean
        wlanconf_id:
          type: string
    super:
      type: array
      items:
        $ref: "#/components/schemas/oooo"
      properties:
        empty:
          type: boolean
    BGP:
      properties:
        _id:
          type: string
        enabled:
          type: boolean
        description:
          type: string
        device_mac:
          type: string
        uploaded_file_name:
          type: string
        frr_bgpd_config:
          type: string
      required:
      - frr_bgpd_config
      - uploaded_file_name
    DpiStatDto:
      properties:
        app:
          type: integer
          format: int32
        cat:
          type: integer
          format: int32
    HistoricalDpiQueryParameters:
      properties:
        client_macs:
          type: array
          items:
            type: string
        apps:
          type: array
          items:
            $ref: "#/components/schemas/DpiStatDto"
    HistoricalTopAppTrafficUsageDto:
      properties:
        category:
          type: integer
          format: int32
        application:
          type: integer
          format: int32
        total_bytes:
          type: integer
          format: int64
        rx_byte-r:
          type: integer
          format: int64
        tx_byte-r:
          type: integer
          format: int64
    HistoricalTrafficUsageDto:
      properties:
        total_bytes:
          type: integer
          format: int64
        interval_seconds:
          type: integer
          format: int64
        top_app:
          $ref: "#/components/schemas/HistoricalTopAppTrafficUsageDto"
        timestamp:
          type: integer
          format: int64
        rx_byte-r:
          type: integer
          format: int64
        tx_byte-r:
          type: integer
          format: int64
    RequestedMacsDto:
      properties:
        macs:
          type: array
          items:
            type: string
      required:
      - macs
    Alias with name of device or client:
      properties:
        name:
          type: string
    Map of MAC to Alias:
      properties:
        aliases:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Alias with name of device or client"
    MfaRequestDto:
      properties:
        mfa_cookie:
          type: string
    MfaPushResponseDto:
      properties:
        mfa_cookie:
          type: string
    B:
      properties:
        configId:
          type: string
        connectionId:
          type: string
        toSiteId:
          type: string
        testId:
          type: string
        fromSiteId:
          type: string
    JsonNode: {}
    AlarmManagerAdminNotificationPreference:
      properties:
        user_id:
          type: string
        push:
          type: boolean
        email:
          type: boolean
    AlarmManagerEvent:
      properties:
        id:
          type: string
        alert_key:
          type: string
        alert_id:
          type: string
        scope:
          type: object
          additionalProperties:
            type: string
    AlarmManagerNotifyActionEvent:
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/AlarmManagerEvent"
        receivers:
          type: array
          items:
            $ref: "#/components/schemas/AlarmManagerAdminNotificationPreference"
    AlarmManagerAlarmModify:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          enum:
          - created
          - updated
          - deleted
    AlarmManagerAlarmModifyDelete:
      allOf:
      - $ref: "#/components/schemas/AlarmManagerAlarmModify"
      - type: object
        properties:
          data:
            type: array
            items:
              type: string
    MinimalSiteDto:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    UniFi-Core API info:
      properties:
        cloud_access_enabled:
          type: boolean
        cloud_backup_enabled:
          type: boolean
    ImmutableListUispMeshStatusDto:
      type: array
      items:
        $ref: "#/components/schemas/UispMeshStatusDto"
      properties:
        empty:
          type: boolean
    UispMeshStatusDto:
      properties:
        model:
          type: string
        firmware_version:
          type: string
    UispStatusDto:
      properties:
        wan:
          $ref: "#/components/schemas/UispWanStatusDto"
        meshing:
          type: array
          items:
            $ref: "#/components/schemas/UispMeshStatusDto"
          properties:
            empty:
              type: boolean
        last_seen_timestamp:
          type: integer
          format: int64
    UispWanStatusDto:
      properties:
        ip:
          type: string
        mac:
          type: string
        transmitted_bytes_rate:
          type: integer
          format: int64
        received_bytes_rate:
          type: integer
          format: int64
        transmitted_bytes:
          type: integer
          format: int64
        received_bytes:
          type: integer
          format: int64
        speed:
          type: integer
          format: int32
        full_duplex:
          type: boolean
    Timezone:
      properties:
        timezone:
          type: string
        offset:
          type: string
    PersistedSystemEvent:
      properties:
        id:
          type: string
        event_type:
          type: string
          enum:
          - SETUP_COMPLETED
        creation_timestamp:
          type: integer
          format: int64
    AclEntryCount:
      properties:
        Global ACL Entry Count:
          type: integer
          format: int32
        Custom IP ACL Entry Count:
          type: integer
          format: int32
        Custom Mac ACL Entry Count:
          type: integer
          format: int32
    WlanStatisticsPeriodDto:
      properties:
        timestamp_millis:
          type: integer
          format: int64
        total_client_count:
          type: integer
          format: int64
        average_satisfaction:
          type: integer
          format: int64
    EnrichedWlanConfiguration:
      properties:
        configuration:
          $ref: "#/components/schemas/WLAN Configuration"
        details:
          $ref: "#/components/schemas/WLAN details"
        statistics:
          $ref: "#/components/schemas/WlanStatistics"
    WLAN details:
      properties:
        creation_timestamp:
          type: integer
          format: int64
    WlanStatistics:
      properties:
        current_satisfaction:
          type: integer
          format: int32
        current_client_count:
          type: integer
          format: int32
        peak_client_count:
          type: integer
          format: int32
        current_access_point_count:
          type: integer
          format: int32
    WlanCapabilitiesDto:
      properties:
        wpa3_supported:
          type: boolean
        "6ghz_band_supported":
          type: boolean
    WireguardSubnetDto:
      properties:
        subnets:
          type: array
          items:
            type: string
    WifiManFeedback:
      properties:
        id:
          type: string
        isp_name:
          type: string
        public_ip:
          type: string
        wlan_band:
          type: string
          enum:
          - 2g
          - 5g
          - 6g
          - both
          - unknown
        wlan_channel:
          type: integer
          format: int32
        wlan_channel_width:
          type: integer
          format: int32
        wlan_essid:
          type: string
        Client model reported by the mobile app:
          type: string
          example: Apple iPhone 11 Pro
        client_link_download_rate_kbps:
          type: integer
          format: int64
        client_link_upload_rate_kbps:
          type: integer
          format: int64
        client_mac:
          type: string
        client_model:
          type: string
        client_name:
          type: string
        client_icon_engine_id:
          type: integer
          format: int32
        client_icon_device_id:
          type: integer
          format: int32
        client_signal:
          type: integer
          format: int32
        client_wifi_experience:
          type: integer
          format: int32
        device_mac:
          type: string
        device_model:
          type: string
        device_name:
          type: string
        report_timestamp:
          type: integer
          format: int64
        speed_tests:
          type: array
          items:
            $ref: "#/components/schemas/WifiManSpeedTest"
        uplink_devices:
          type: array
          items:
            $ref: "#/components/schemas/WifiManFeedbackUplink"
        incorrect_wifi_experience_comment:
          type: string
        incorrect_wifi_experience_reason:
          type: string
          enum:
          - DROPPED_CONNECTIVITY
          - POOR_LATENCY
          - POOR_THROUGHPUT
          - NOT_AS_EXPECTED
    WifiManFeedbackUplink:
      properties:
        mac:
          type: string
        model:
          type: string
        number_of_clients:
          type: integer
          format: int32
        experience:
          type: integer
          format: int32
        wireless_uplink:
          type: boolean
    WifiManSpeedTest:
      properties:
        type:
          type: string
          enum:
          - INTERNET
          - LOCAL_DEVICE
          - LOCAL_CLIENT
        mac:
          type: string
        endpoint:
          type: string
        test_server_name:
          type: string
        download_speed_bytes:
          type: integer
          format: int64
        upload_speed_bytes:
          type: integer
          format: int64
        client_model:
          type: string
        client_name:
          type: string
        client_icon_engine_id:
          type: integer
          format: int32
        client_icon_device_id:
          type: integer
          format: int32
        client_wifi_experience:
          type: integer
          format: int32
        reported_client_model:
          type: string
    WifiManClientInfo:
      properties:
        channel:
          type: integer
          format: int32
        channel_width:
          type: integer
          format: int32
        isp_download_capability:
          type: integer
          format: int64
        isp_upload_capability:
          type: integer
          format: int64
        link_download_rate_kbps:
          type: integer
          format: int64
        link_upload_rate_kbps:
          type: integer
          format: int64
        signal:
          type: integer
          format: int32
        noise:
          type: integer
          format: int32
        radio_modulation:
          type: string
          enum:
          - BPSK
          - QPSK
          - 16-QAM
          - 64-QAM
          - 256-QAM
          - 1024-QAM
          - 4096-QAM
          - BPSK-DCM
        radio_protocol:
          type: string
        wifi_experience:
          type: integer
          format: int32
        wlan_band:
          type: string
          enum:
          - 2g
          - 5g
          - 6g
          - both
          - unknown
        uplink_devices:
          type: array
          items:
            $ref: "#/components/schemas/WifiManUplinkDevice"
        statistics:
          type: array
          items:
            $ref: "#/components/schemas/WifiManClientStatistic"
    WifiManClientStatistic:
      properties:
        time:
          type: integer
          format: int64
        experience:
          type: number
          format: double
    WifiManUplinkDevice:
      properties:
        ip:
          type: string
        sku:
          type: string
        display_name:
          type: string
        icon_device_id:
          type: integer
          format: int32
        icon_engine_id:
          type: integer
          format: int32
        number_of_clients:
          type: integer
          format: int32
        experience:
          type: integer
          format: int32
        wireless_uplink:
          type: boolean
    WifiManDevice:
      properties:
        mac:
          type: string
        ip:
          type: string
        model:
          type: string
        hostname:
          type: string
        name:
          type: string
        icon_device_id:
          type: integer
          format: int32
        icon_engine_id:
          type: integer
          format: int32
        icon_device_uidb_id:
          type: string
        experience:
          type: integer
          format: int32
        link_download_rate_kbps:
          type: integer
          format: int64
        link_upload_rate_kbps:
          type: integer
          format: int64
        radio_protocol:
          type: string
        signal:
          type: integer
          format: int32
    WiFi Radio statistics:
      properties:
        radio_details:
          type: array
          items:
            $ref: "#/components/schemas/WifiRadioDetailsDto"
    WifiRadioDetailsDto:
      properties:
        device_mac:
          type: string
        radio_name:
          type: string
        client_signal_avg:
          type: number
          format: double
        bytes:
          type: number
          format: double
    MloClientDetailsDto:
      properties:
        channel:
          type: integer
          format: int32
        band:
          type: string
          enum:
          - ad
          - na
          - ng
          - 6e
        channel_width:
          type: string
          enum:
          - "20"
          - "40"
          - "80"
          - "160"
          - "240"
          - "320"
          - "1080"
          - "2160"
          - "4320"
        signal_avg:
          type: integer
          format: int32
        phy_rate_most_common:
          type: integer
          format: int32
        standard: {}
        mimo:
          type: string
          enum:
          - MIMO_1
          - MIMO_2
          - MIMO_3
          - MIMO_4
    WiFi client statistics:
      properties:
        client_details:
          type: array
          items:
            $ref: "#/components/schemas/WifiClientDetailsDto"
    WifiClientDetailsDto:
      properties:
        client:
          $ref: "#/components/schemas/oooo"
        mlo_details:
          type: array
          items:
            $ref: "#/components/schemas/MloClientDetailsDto"
        ap_delta_avg:
          type: integer
          format: int32
        last_ap_mac:
          type: string
        standard: {}
        band:
          type: string
          enum:
          - ad
          - na
          - ng
          - 6e
        mimo:
          type: string
          enum:
          - MIMO_1
          - MIMO_2
          - MIMO_3
          - MIMO_4
        channel:
          type: integer
          format: int32
        channel_width:
          type: string
          enum:
          - "20"
          - "40"
          - "80"
          - "160"
          - "240"
          - "320"
          - "1080"
          - "2160"
          - "4320"
        phy_mode_most_common:
          type: string
          enum:
          - a
          - b
          - g
          - na
          - ng
          - ac
          - ax
          - be
        phy_rate_most_common:
          type: integer
          format: int32
        phy_rate_max:
          type: integer
          format: int32
        satisfaction_avg:
          type: integer
          format: int32
        signal_avg:
          type: integer
          format: int32
        total_traffic_percentage:
          type: number
          format: double
        tx_retries_percentage:
          type: number
          format: double
        roams_count:
          type: integer
          format: int64
        is_mlo:
          type: boolean
    WiFi AP statistics:
      properties:
        ap_details:
          type: array
          items:
            $ref: "#/components/schemas/WifiApDetailsDto"
    WifiApDetailsDto:
      properties:
        device_mac:
          type: string
        phy_rate_most_common:
          type: integer
          format: int32
        phy_rate_max:
          type: integer
          format: int32
        satisfaction_avg:
          type: integer
          format: int32
        signal_avg:
          type: integer
          format: int32
        weakest_clients_signal_avg:
          type: integer
          format: int32
        total_traffic_percentage:
          type: number
          format: double
        tx_retries_percentage:
          type: number
          format: double
        clients_count:
          type: integer
          format: int64
        roams_count:
          type: integer
          format: int64
    WiFi Connectivity attempts:
      properties:
        total_attempts:
          type: integer
          format: int64
        failed_client_connections:
          type: integer
          format: int64
        association_ratio:
          type: number
          format: double
        authentication_ratio:
          type: number
          format: double
        dhcp_ratio:
          type: number
          format: double
        dns_ratio:
          type: number
          format: double
        success_ratio:
          type: number
          format: double
    WiFi Connectivity latencies:
      properties:
        total_latency:
          type: integer
          format: int64
        association_latency:
          type: integer
          format: int64
        authentication_latency:
          type: integer
          format: int64
        dhcp_latency:
          type: integer
          format: int64
        traffic_latency:
          type: integer
          format: int64
    Wifi Connectivity Statistics:
      properties:
        total_clients:
          type: integer
          format: int64
        attempts:
          $ref: "#/components/schemas/WiFi Connectivity attempts"
        latencies:
          $ref: "#/components/schemas/WiFi Connectivity latencies"
        event_groups:
          type: array
          items:
            $ref: "#/components/schemas/WifiConnectivityEventsGroupDto"
    WifiConnectivityEventDto:
      properties:
        start_time:
          type: integer
          format: int64
        ap_mac:
          type: string
        failure_reason:
          type: string
          enum:
          - ASSOCIATION_FAILURE
          - AUTHENTICATION_FAILURE
          - RADIUS_AUTHENTICATION_FAILURE
          - WPA_AUTHENTICATION_FAILURE
          - DHCP_TIMEOUT
          - DNS_TIMEOUT
          - DNS_RESPONSE_NOT_SEEN
          - TRAFFIC_FAILURE
          - SUCCESS
        latency:
          type: integer
          format: int64
    WifiConnectivityEventsGroupDto:
      properties:
        client:
          $ref: "#/components/schemas/oooo"
        failure_stage:
          type: string
          enum:
          - ASSOCIATION
          - AUTHENTICATION
          - DHCP
          - DNS
          - TRAFFIC
          - SUCCESS
        ap_macs:
          type: array
          items:
            type: string
          uniqueItems: true
        start_time:
          type: integer
          format: int64
        events:
          type: array
          items:
            $ref: "#/components/schemas/WifiConnectivityEventDto"
        latency_avg:
          type: integer
          format: int64
    RogueClientDto:
      properties:
        mac:
          type: string
        ip:
          type: string
        network_id:
          type: string
    RogueDhcpDto:
      properties:
        device_mac:
          type: string
        device_port:
          type: integer
          format: int32
        mac:
          type: string
        ip:
          type: string
        vlan:
          type: integer
          format: int32
        last_seen:
          type: integer
          format: int64
    WarningsDto:
      properties:
        rogue_dhcps:
          type: array
          items:
            $ref: "#/components/schemas/RogueDhcpDto"
        rogue_clients:
          type: array
          items:
            $ref: "#/components/schemas/RogueClientDto"
        missing_windows_defender_firewall_rules:
          type: array
          items:
            $ref: "#/components/schemas/WindowsDefenderMissingFirewallRuleDto"
    WindowsDefenderMissingFirewallRuleDto:
      properties:
        program:
          type: string
        is_present:
          type: boolean
        is_enabled:
          type: boolean
    ConnectionStatisticsDto:
      properties:
        latency:
          type: integer
          format: int64
        latency_max:
          type: integer
          format: int64
        received_bytes_rate_avg:
          type: integer
          format: int64
        transmitted_bytes_rate_avg:
          type: integer
          format: int64
        downtime:
          type: boolean
        downtimes:
          type: array
          items:
            $ref: "#/components/schemas/DowntimeDto"
          properties:
            empty:
              type: boolean
        timestamp:
          type: integer
          format: int64
    ConnectionStatusDto:
      properties:
        statistics:
          type: array
          items:
            $ref: "#/components/schemas/ConnectionStatisticsDto"
          properties:
            empty:
              type: boolean
        received_bytes:
          type: integer
          format: int64
        transmitted_bytes:
          type: integer
          format: int64
        latency_threshold:
          type: integer
          format: int64
        uptime:
          type: number
          format: double
    ConnectionWarningHighLatencyDto:
      properties:
        timestamp_start:
          type: integer
          format: int64
        timestamp_end:
          type: integer
          format: int64
        latency_max:
          type: integer
          format: int64
    ConnectionWarningPacketLossDto:
      properties:
        timestamp_start:
          type: integer
          format: int64
        timestamp_end:
          type: integer
          format: int64
    ConnectionWarningsDto:
      properties:
        downtimes:
          type: array
          items:
            $ref: "#/components/schemas/DowntimeDto"
        packet_loss:
          type: array
          items:
            $ref: "#/components/schemas/ConnectionWarningPacketLossDto"
        high_latencies:
          type: array
          items:
            $ref: "#/components/schemas/ConnectionWarningHighLatencyDto"
    DowntimeDto:
      properties:
        id:
          type: string
        timestamp:
          type: integer
          format: int64
        downtime_in_seconds:
          type: integer
          format: int64
        wan_network_group:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
    ImmutableListConnectionStatisticsDto:
      type: array
      items:
        $ref: "#/components/schemas/ConnectionStatisticsDto"
      properties:
        empty:
          type: boolean
    ImmutableListDowntimeDto:
      type: array
      items:
        $ref: "#/components/schemas/DowntimeDto"
      properties:
        empty:
          type: boolean
    ImmutableListSpeedtestDto:
      type: array
      items:
        $ref: "#/components/schemas/SpeedtestDto"
      properties:
        empty:
          type: boolean
    IspStatusDto:
      properties:
        internet_alerts:
          $ref: "#/components/schemas/Alert list with paging info"
        latency_max:
          type: integer
          format: int64
        uplink_status:
          $ref: "#/components/schemas/ConnectionStatusDto"
        wan_status:
          $ref: "#/components/schemas/ConnectionStatusDto"
        speedtest_historical:
          type: array
          items:
            $ref: "#/components/schemas/SpeedtestDto"
          properties:
            empty:
              type: boolean
        connection_warnings:
          $ref: "#/components/schemas/ConnectionWarningsDto"
        ping_server:
          type: string
    SpeedtestDto:
      properties:
        id:
          type: string
        download_mbps:
          type: integer
          format: int64
        upload_mbps:
          type: integer
          format: int64
        latency_ms:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        interface_name:
          type: string
        wan_networkgroup:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        network_conf_id:
          type: string
        wan_provider_capabilities:
          $ref: "#/components/schemas/WAN provider capabilities"
    WAN provider capabilities:
      properties:
        upload_kilobits_per_second:
          type: integer
          format: int64
        download_kilobits_per_second:
          type: integer
          format: int64
    WanNetworkGroupInfo:
      properties:
        id:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        network_id:
          type: string
        name:
          type: string
        priority:
          type: integer
          format: int32
        load_balancing_mode:
          type: string
          enum:
          - FAILOVER_ONLY
          - DISTRIBUTED
        wan_magic_enabled:
          type: boolean
        is_mobile_broadband:
          type: boolean
        port_info:
          $ref: "#/components/schemas/WanPortInfo"
        uptime:
          type: number
          format: double
    WanNetworkGroupListDto:
      properties:
        wan_network_groups:
          type: array
          items:
            $ref: "#/components/schemas/WanNetworkGroupInfo"
    WanPortInfo:
      properties:
        port_idx:
          type: integer
          format: int32
        port_ifname:
          type: string
        disabled:
          type: boolean
    WAN Magic Subscription:
      properties:
        subscribed:
          type: boolean
        traffic_usage:
          type: integer
          format: int64
        subscription_end_time:
          type: integer
          format: int64
        update_time:
          type: integer
          format: int64
    WAN load balancing status:
      properties:
        wan_interfaces:
          type: array
          items:
            $ref: "#/components/schemas/WanInterfaceStatusDto"
    WanInterfaceStatusDto:
      properties:
        name:
          type: string
        state:
          type: string
          enum:
          - ACTIVE
          - BACKUP
        wan_networkgroup:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
    Enriched WAN Configuration:
      description: WAN configuration with additional data
      properties:
        configuration:
          $ref: "#/components/schemas/WAN Configuration"
        details:
          $ref: "#/components/schemas/WAN details"
        statistics:
          $ref: "#/components/schemas/WAN statistics"
    WAN Configuration:
      description: WAN Configuration
      properties:
        lanTunnelWanNetwork:
          type: boolean
        wan5gNetwork:
          type: boolean
        igmpProxyUpstream:
          type: boolean
        wanMagicEnabled:
          type: boolean
        _id:
          type: string
          example: 5e6285ec05938c3d128aaf07
          readOnly: true
        attr_hidden_id:
          type: string
          readOnly: true
        attr_no_delete:
          type: boolean
          readOnly: true
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        name:
          type: string
        purpose:
          type: string
          enum:
          - corporate
          - guest
          - remote-user-vpn
          - site-vpn
          - vlan-only
          - ipsec-vpn
          - openvpn-vpn
          - vpn-client
          - intervlan-routing
          - wan
          - wan_magic
        report_wan_event:
          type: boolean
        wan_dns1:
          type: string
        wan_dns2:
          type: string
        wan_dns_preference:
          type: string
          enum:
          - auto
          - manual
        wan_dhcp_options:
          type: array
          items:
            $ref: "#/components/schemas/WanDhcpConfigurationOption"
        wan_dhcpv6_pd_size:
          type: integer
          format: int32
        wan_egress_qos:
          type: integer
          format: int32
        wan_gateway:
          type: string
        wan_gateway_v6:
          type: string
        wan_ip:
          type: string
        wan_ip_aliases:
          type: array
          items:
            type: string
        wan_ipv6:
          type: string
        wan_load_balance_type:
          type: string
          enum:
          - failover-only
          - weighted
        wan_load_balance_weight:
          type: integer
          format: int32
        wan_netmask:
          type: string
        wan_networkgroup:
          type: string
          enum:
          - WAN
          - WAN2
          - WAN3
          - WAN4
          - WAN5
          - WAN6
          - WAN7
          - WAN8
          - WAN9
          - WAN_LTE_FAILOVER
          - WAN_MAGIC
        wan_prefixlen:
          type: integer
          format: int32
        wan_smartq_down_rate:
          type: integer
          format: int32
        wan_smartq_enabled:
          type: boolean
        wan_smartq_up_rate:
          type: integer
          format: int32
        wan_type:
          type: string
          enum:
          - dhcp
          - static
          - pppoe
          - dslite
          - disabled
        wan_type_v6:
          type: string
          enum:
          - slaac
          - dhcpv6
          - static
          - disabled
        ipv6_wan_delegation_type:
          type: string
          enum:
          - pd
          - single_network
          - none
        single_network_lan:
          type: string
        wan_username:
          type: string
        between 2 and 4009:
          type: integer
          format: int32
          example: 21
          maximum: 4009
          minimum: 2
        wan_vlan_enabled:
          type: boolean
        x_wan_password:
          type: string
        ifname:
          type: string
        mac_override:
          type: string
        mac_override_enabled:
          type: boolean
        wan_provider_capabilities:
          $ref: "#/components/schemas/WAN provider capabilities"
        igmp_proxy_upstream:
          type: boolean
        igmp_proxy_for:
          type: string
          enum:
          - all
          - some
          - none
        igmp_proxy_downstream_networkconf_ids:
          type: array
          items:
            type: string
        wan_dhcp_cos:
          type: integer
          format: int32
        wan_dslite_remote_host:
          type: string
        wan_dslite_remote_host_auto:
          type: boolean
        wan_ipv6_dns1:
          type: string
        wan_ipv6_dns2:
          type: string
        wan_ipv6_dns_preference:
          type: string
          enum:
          - auto
          - manual
        wan_failover_priority:
          type: integer
          format: int32
        wan_sla:
          type: string
        wan_magic_enabled:
          type: boolean
        lan_tunnel_wan_device:
          type: string
      required:
      - name
      - purpose
      - wan_networkgroup
    WAN details:
      properties:
        service_provider:
          $ref: "#/components/schemas/WAN service provider"
        creation_timestamp:
          type: integer
          format: int64
    WAN service provider:
      properties:
        name:
          type: string
        city:
          type: string
    WAN statistics:
      properties:
        uptime_percentage:
          type: number
          format: double
        peak_usage:
          $ref: "#/components/schemas/WanPeakUsage"
      required:
      - peak_usage
      - uptime_percentage
    WanDhcpConfigurationOption:
      properties:
        value:
          type: string
        optionNumber:
          type: integer
          format: int32
    WanPeakUsage:
      properties:
        upload_percentage:
          type: number
          format: double
        download_percentage:
          type: number
          format: double
        max_rx_bytes-r:
          type: integer
          format: int64
        max_tx_bytes-r:
          type: integer
          format: int64
      required:
      - download_percentage
      - upload_percentage
    WanDynamicDnsDto:
      properties:
        ddns:
          type: array
          items:
            type: string
    L2TP VPN Configuration:
      properties:
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        purpose:
          type: string
          enum:
          - corporate
          - guest
          - remote-user-vpn
          - site-vpn
          - vlan-only
          - ipsec-vpn
          - openvpn-vpn
          - vpn-client
          - intervlan-routing
          - wan
          - wan_magic
        l2tp_allow_weak_ciphers:
          type: boolean
        vpn_type:
          type: string
          enum:
          - auto
          - ipsec-vpn
          - openvpn-vpn
          - openvpn-client
          - openvpn-server
          - pptp-client
          - pptp-server
          - sdwan-hub-spoke-tunnel
          - sdwan-mesh-tunnel
          - l2tp-server
          - uid-server
          - wireguard-teleport-server
          - wireguard-server
          - wireguard-client
          - wireguard-site-to-site
        dhcpd_dns_enabled:
          type: boolean
        require_mschapv2:
          type: boolean
    VPN Client or Site to Site connection:
      properties:
        local_ip:
          type: string
        assoc_time:
          type: integer
          format: int64
        error_reason:
          type: string
          enum:
          - ADDRESS_CONFLICT
          - AUTHENTICATION_FAILURE
          - CONNECTION_FAILURE
          - BAD_CONFIGURATION
          - SERVER_REJECT
          - UNEXPECTED_DISCONNECT
          - UNKNOWN
        type:
          type: string
          enum:
          - auto
          - ipsec-vpn
          - openvpn-vpn
          - openvpn-client
          - openvpn-server
          - pptp-client
          - pptp-server
          - sdwan-hub-spoke-tunnel
          - sdwan-mesh-tunnel
          - l2tp-server
          - uid-server
          - wireguard-teleport-server
          - wireguard-server
          - wireguard-client
          - wireguard-site-to-site
        status:
          type: string
          enum:
          - CONNECTING
          - CONNECTED
          - CONNECTION_FAILED
          - DISCONNECTED
          - UNKNOWN
        network_id:
          type: string
        notes:
          type: array
          items:
            type: string
            enum:
            - ROUTE_CONFLICT
            - CONNECTING_LONGER_THAN_USUAL
        tx_rate_bps:
          type: integer
          format: int64
        rx_rate_bps:
          type: integer
          format: int64
        remote_ip:
          type: string
    VPN connections:
      properties:
        connections:
          type: array
          items:
            $ref: "#/components/schemas/VPN Client or Site to Site connection"
    ISP utilization:
      properties:
        wan_utilization_up:
          type: array
          items:
            $ref: "#/components/schemas/WAN utilization info"
          properties:
            empty:
              type: boolean
        wan_utilization_down:
          type: array
          items:
            $ref: "#/components/schemas/WAN utilization info"
          properties:
            empty:
              type: boolean
        wan2_utilization_up:
          type: array
          items:
            $ref: "#/components/schemas/WAN utilization info"
          properties:
            empty:
              type: boolean
        wan2_utilization_down:
          type: array
          items:
            $ref: "#/components/schemas/WAN utilization info"
          properties:
            empty:
              type: boolean
        wan_peak_transmitted_bytes_rate:
          type: integer
          format: int64
        wan_peak_received_bytes_rate:
          type: integer
          format: int64
        wan2_peak_transmitted_bytes_rate:
          type: integer
          format: int64
        wan2_peak_received_bytes_rate:
          type: integer
          format: int64
    ImmutableListWAN Utilization Info:
      type: array
      items:
        $ref: "#/components/schemas/WAN utilization info"
      properties:
        empty:
          type: boolean
    System utilization information for particular usage percentage:
      properties:
        system_usage_percentage:
          type: integer
          format: int32
        seconds_spent:
          type: integer
          format: int64
    Utilization information:
      properties:
        system_utilization:
          type: array
          items:
            $ref: "#/components/schemas/System utilization information for particular\
              \ usage percentage"
        isp_utilization:
          $ref: "#/components/schemas/ISP utilization"
    WAN utilization info:
      properties:
        usage_percentage:
          type: integer
          format: int32
        seconds_spent:
          type: integer
          format: int64
    UidClientInfoDto:
      properties:
        device_mac:
          type: string
        device_model:
          type: string
        device_name:
          type: string
        device_fw_version:
          type: string
        link_rx_rate_kbps:
          type: integer
          format: int64
        link_tx_rate_kbps:
          type: integer
          format: int64
        signal:
          type: integer
          format: int32
    AppTrafficDto:
      properties:
        category:
          type: integer
          format: int32
        application:
          type: integer
          format: int32
        total_bytes:
          type: integer
          format: int64
        bytes_received:
          type: integer
          format: int64
        client_count:
          type: integer
          format: int32
        bytes_transmitted:
          type: integer
          format: int64
        activity_seconds:
          type: integer
          format: int64
    ClientTrafficDto:
      properties:
        client:
          $ref: "#/components/schemas/oooo"
        usage_by_app:
          type: array
          items:
            $ref: "#/components/schemas/AppTrafficDto"
    TrafficTotalUsageStatsDto:
      properties:
        total_usage_by_app:
          type: array
          items:
            $ref: "#/components/schemas/AppTrafficDto"
          uniqueItems: true
        client_usage_by_app:
          type: array
          items:
            $ref: "#/components/schemas/ClientTrafficDto"
    TrafficClientStatsDto:
      properties:
        client_usage_by_app:
          type: array
          items:
            $ref: "#/components/schemas/ClientTrafficDto"
    TrafficFlowFilterDataParametersDto:
      properties:
        inputSize:
          type: integer
          format: int32
          minimum: 1
        outputSize:
          type: integer
          format: int32
          minimum: 1
        skipElements:
          type: integer
          format: int64
          minimum: 0
    TrafficFlowBasicEndpointDto:
      properties:
        client_oui:
          type: string
        client_identity:
          type: string
        domains:
          type: array
          items:
            type: string
        id:
          type: string
        ip:
          type: string
        host_name:
          type: string
        mac:
          type: string
        client_name:
          type: string
        client_fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        icon_filename:
          type: string
        icon_resolutions:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
        device_model:
          type: string
        device_name:
          type: string
    TrafficFlowFilterDataDto:
      properties:
        source:
          $ref: "#/components/schemas/TrafficFlowFilterEndpointDataDto"
        destination:
          $ref: "#/components/schemas/TrafficFlowFilterEndpointDataDto"
        policies:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowPolicyDto"
    TrafficFlowFilterEndpointDataDto:
      properties:
        hosts:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowBasicEndpointDto"
        macs:
          type: array
          items:
            type: string
        ips:
          type: array
          items:
            type: string
        ports:
          type: array
          items:
            type: integer
            format: int32
    TrafficFlowApplicationTrafficDto:
      properties:
        category_id:
          type: integer
          format: int32
        application_id:
          type: integer
          format: int32
        bytes:
          type: integer
          format: int64
    TrafficFlowClientCounterDto:
      properties:
        count:
          type: integer
          format: int64
        client_mac:
          type: string
        client_name:
          type: string
        client_fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        icon_filename:
          type: string
        icon_resolutions:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
    TrafficFlowDestinationCounterDto:
      properties:
        count:
          type: integer
          format: int64
        destination:
          type: string
        mostFrequentRegion:
          type: string
    TrafficFlowPolicyCounterDto:
      properties:
        count:
          type: integer
          format: int64
        policy_name:
          type: string
        policy_type:
          type: string
          enum:
          - AD_BLOCKING
          - CONTENT_FILTERING
          - DESTINATION_NAT
          - FIREWALL
          - INTRUSION_PREVENTION
          - MASQUERADE_NAT
          - NEXT_AI
          - POLICY_BASED_ROUTING
          - PORT_FORWARDING
          - PROTECTION
          - QOS
          - SOURCE_NAT
          - PREDEFINED_MASQUERADE_NAT
          - PREDEFINED_FIREWALL
        policy_id:
          type: string
    TrafficFlowStatisticsDto:
      properties:
        top_all_count_by_destination:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowDestinationCounterDto"
        all_count_by_region:
          type: object
          additionalProperties:
            type: integer
            format: int64
        top_all_count_by_client:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowClientCounterDto"
        allowed_count_by_risk:
          type: object
          additionalProperties:
            type: integer
            format: int64
        allowed_count_by_region_by_risk:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: int64
        blocked_count_by_risk:
          type: object
          additionalProperties:
            type: integer
            format: int64
        blocked_count_by_region:
          type: object
          additionalProperties:
            type: integer
            format: int64
        top_blocked_count_by_client:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowClientCounterDto"
        top_blocked_count_by_policy:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowPolicyCounterDto"
        top_all_traffic_by_application:
          type: array
          items:
            $ref: "#/components/schemas/TrafficFlowApplicationTrafficDto"
    TopologyEdgeDto:
      properties:
        downlinkMac:
          type: string
        type:
          type: string
          enum:
          - WIRELESS
          - WIRED
        uplinkMac:
          type: string
        networkId:
          type: string
    TopologyGraphDto:
      properties:
        vertices:
          type: array
          items:
            $ref: "#/components/schemas/TopologyVertexDto"
          uniqueItems: true
        edges:
          type: array
          items:
            $ref: "#/components/schemas/TopologyEdgeDto"
          uniqueItems: true
        has_unknown_switch:
          type: boolean
    TopologyVertexDto:
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - DEVICE
          - CLIENT
        mac:
          type: string
        allowedInVisualProgramming:
          type: boolean
    Teleport token list with paging info:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TeleportTokenDto"
        total_element_count:
          type: integer
          format: int64
          description: Number of total matched elements searching by the given criteria
          example: 1
        total_page_count:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        or_more:
          type: boolean
          description: True if there can be more elements than based on the total
            number of page
        has_next:
          type: boolean
    CefLogDto:
      properties:
        cef_log:
          type: string
    HostFingerprintDto:
      properties:
        type:
          type: string
          enum:
          - DEVICE
          - UNIFI_DEVICE_CLIENT
          - CLIENT
        mac:
          type: string
        name:
          type: string
        device_type:
          type: string
        model:
          type: string
          enum:
          - BZ2
          - BZ2LR
          - U2M
          - U2S48
          - U2L48
          - U2O
          - U5O
          - U2HSR
          - P2N
          - U7P
          - U2SV2
          - U2LV2
          - U2IW
          - U7HD
          - U7SHD
          - UCXG
          - UXSDM
          - UCMSH
          - UXBSDM
          - U7PG2
          - U7EDU
          - U7MP
          - U7LT
          - U7MSH
          - U7UKU
          - U7IW
          - U7LR
          - U7IWP
          - ULTE
          - ULTEPEU
          - ULTEPUS
          - UMBBE630
          - UMBBE631
          - U7NHD
          - UHDIW
          - UDMB
          - UFLHD
          - UAIW6
          - UAM6
          - UAL6
          - UAE6
          - UALR6
          - UALR6V2
          - UALR6V3
          - UAPL6
          - UALRPL6
          - UAP6MP
          - UAPO6MP
          - UACCMPOEAF
          - UACCMPOEAT
          - UACCEA03
          - U6ENT
          - U6M
          - U6MP
          - U6IW
          - U6ENTIW
          - U6EXT
          - U7PRO
          - UAPA693
          - U7PROMAX
          - UAPA6A4
          - UAPA6AC
          - UAPA6A9
          - UAPA6AE
          - UAPA697
          - UAPA698
          - UAPA699
          - UAPA6A5
          - UAPA6A6
          - UAPA6AB
          - UAPA6B0
          - U7PIW
          - U7ENT
          - UAPA6B1
          - UAPA6B3
          - UKPW
          - US24
          - US24P250
          - US24P500
          - S224250
          - S224500
          - US24PL2
          - US48PL2
          - US48
          - US48P500
          - US48P750
          - S248500
          - S248750
          - US8P150
          - US16P150
          - S28150
          - S216150
          - US8P60
          - US8
          - USXG
          - US6XG150
          - US68P
          - US624P
          - US24PRO
          - US648P
          - US48PRO
          - USLP48P
          - USPM48P
          - USPM24P
          - USPM16P
          - USPM48
          - USPM24
          - USPM16
          - US24PRO2
          - UDC48X6
          - US48PRO2
          - USC8
          - USC8P60
          - USC8P150
          - USC8P450
          - USWED05
          - USF5P
          - USFXG
          - USPRPS
          - USPRPSP
          - USPPDUP
          - USPPDUHD
          - USWDA23
          - USWDA24
          - USWDA25
          - USWDA26
          - USL8LP
          - USL8LPB
          - USL8MP
          - USL16LP
          - USL16LPB
          - USL16P
          - USL16PB
          - USL24P
          - USLP24P
          - USL24PB
          - USL48P
          - USL48PB
          - USL24
          - USL24B
          - USL48
          - USL48B
          - USL8A
          - USLP8P
          - USWED42
          - USWED43
          - USWED44
          - USWED45
          - USWED76
          - USWED77
          - USWED72
          - USWED73
          - USWED74
          - USWED75
          - USAGGPRO
          - USXG24
          - USWF001
          - USWF002
          - USWF003
          - USWF064
          - USWF066
          - USWF067
          - USWF069
          - USWF068
          - USWF070
          - USMINI
          - USMINI2
          - USM8P
          - USM8P60
          - USM8P210
          - USWED35
          - USWED36
          - USWED37
          - UGW3
          - UGW4
          - UGW8
          - UGWXG
          - UDM
          - UDMSE
          - UDMPRO
          - UDMPROSE
          - UDMENT
          - UDMPROMAX
          - UDR
          - UDMA67A
          - UDMA6B9
          - UDRULT
          - UCGMAX
          - UDMA6A8
          - UX
          - UDMA69B
          - UDMA6B4
          - UDW
          - UDWPRO
          - UXG
          - UXGPRO
          - UXGB
          - UXGENT
          - UXGA6AA
          - U7E
          - U7O
          - U7EV2
          - UBB
          - UBBXG
          - UDBA6B2
          - UDB
          - UDBE802
          - UP1
          - UP6
          - UPB
          - UCI
          - UNKNOWN
        fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        unifi_device_info:
          $ref: "#/components/schemas/F"
    RemoteSystemLogSettingsDto:
      properties:
        enabled:
          type: boolean
        debug:
          type: boolean
        ip:
          type: string
        port:
          type: integer
          format: int32
        this_controller:
          type: boolean
        this_controller_encrypted_only:
          type: boolean
        log_all_contents:
          type: boolean
        contents:
          type: array
          items:
            type: string
            enum:
            - device
            - client
            - triggers
            - updates
            - admin_activity
            - critical
            - security_detections
            - vpn
            - firewall_default_policy
          uniqueItems: true
    IpsAlert:
      type: object
      additionalProperties: {}
      properties:
        id:
          type: string
        collectionName:
          type: string
        mac:
          type: string
        sourceIp:
          type: string
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        changes:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        originalFieldValues:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
    ClientConnectionLogDto:
      properties:
        id:
          type: string
        key:
          type: string
          enum:
          - DEVICE_COMMIT_ERROR
          - AP_CLIENT_PACKET_LOSS
          - DEVICE_UNREACHABLE
          - DEVICE_UNREACHABLE_WITH_DOWNLINKS
          - MULTIPLE_DEVICES_UNREACHABLE
          - DEVICE_RECONNECTED
          - DEVICE_RECONNECTED_WITH_DOWNLINKS
          - DEVICE_RECONNECTED_SEVERAL_TIMES
          - DEVICE_DISCOVERED
          - MULTIPLE_DEVICES_DISCOVERED
          - DEVICE_ADOPTED
          - DEVICE_MANAGED_BY_OTHER_CONTROLLER
          - DEVICE_POWERED_BY_USP_RPS
          - DEVICES_POWERED_BY_USW_MC
          - DEVICES_POWERED_BY_USW_MC_V2
          - DEVICE_POWER_SUPPLY_OFFLINE
          - DEVICE_FAN_OFFLINE
          - DEVICE_FAN_HIGH_LEVEL_SPEED
          - DEVICE_FAN_NOT_OPERATING
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES
          - NETWORK_WAN_FAILED_MULTIPLE_TIMES_2
          - NETWORK_WAN_FAILED
          - NETWORK_WAN_FAILED_2
          - NETWORK_WAN_FAILED_TEMPORARY
          - NETWORK_WAN_FAILED_TEMPORARY_2
          - NETWORK_WAN_RESTORED
          - NETWORK_WAN_RESTORED_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_WAN_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_WAN
          - NETWORK_RETURNED_FROM_BACKUP_WAN_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_2
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY
          - NETWORK_FAILED_OVER_TO_BACKUP_LTE_TEMPORARY_2
          - NETWORK_RETURNED_FROM_BACKUP_LTE
          - NETWORK_RETURNED_FROM_BACKUP_LTE_2
          - CLIENT_IP_CONFLICT
          - CLIENT_IP_CONFLICT_BULK
          - ROGUE_CLIENT_DETECTED
          - CLIENT_ROAMED
          - CLIENT_ROAMED_2
          - CLIENT_WIFI_SCORE_HAS_DROPPED
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_DROPPED_SUGGEST_SMART_QUEUES_OR_WIFI_AI
          - CLIENT_WIFI_SCORE_HAS_RETURNED_TO_NORMAL
          - FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_AVAILABLE_V2
          - BULK_FIRMWARE_UPDATE_AVAILABLE
          - FIRMWARE_UPDATE_FAILED
          - FIRMWARE_UPDATE_DNS_RESOLUTION_FAILED
          - FIRMWARE_UPDATED
          - FIRMWARE_UPDATED_V2
          - CLIENT_CONNECTED
          - CLIENT_CONNECTED_WIRELESS
          - CLIENT_CONNECTED_WIRELESS_2
          - CLIENT_CONNECTED_WIRED
          - CLIENT_CONNECTED_WIRED_2
          - CLIENT_DISCONNECTED
          - CLIENT_DISCONNECTED_WIRELESS
          - CLIENT_DISCONNECTED_WIRELESS_2
          - CLIENT_DISCONNECTED_WIRED
          - CLIENT_DISCONNECTED_WIRED_2
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_CONNECTED_V2
          - VPN_CLIENT_DISCONNECTED
          - VPN_CLIENT_DISCONNECTED_V2
          - HOTSPOT_CLIENT_CONNECTED
          - HOTSPOT_CLIENT_CONNECTED_V2
          - HOTSPOT_CLIENT_DISCONNECTED
          - HOTSPOT_CLIENT_DISCONNECTED_V2
          - CLIENT_CAN_NOT_ACQUIRE_IP_ADDRESS
          - DHCP_POOL_EXHAUSTED
          - ROGUE_AP_DETECTED
          - ROGUE_AP_DETECTED_V2
          - AP_CHANGED_CHANNELS
          - AP_CHANGED_CHANNELS_RADIO_AI
          - AP_LOW_PERFORMANCE_MODE
          - BLOCKED_CLIENT_TRIED_CONNECT_TO_NETWORK
          - RADIUS_SERVER_ISSUE
          - RADIUS_SERVER_ISSUE_V2
          - AP_DETECTED_RADAR
          - AP_DETECTED_RADAR_V2
          - SMART_POWER_MODEM_RESTARTED
          - MULTIPLE_DEVICES_RESTARTED_BY_POWER_STRIP
          - THREAT_BLOCKED
          - THREAT_BLOCKED_V2
          - THREAT_BLOCKED_V3
          - THREAT_DETECTED_V2
          - THREAT_DETECTED_V3
          - THREAT_BLOCKED_KNOWN_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_CLIENT
          - THREAT_BLOCKED_KNOWN_DESTINATION_CLIENT
          - THREAT_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - THREAT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_CLIENT
          - THREAT_DETECTED_KNOWN_DESTINATION_CLIENT
          - THREAT_DETECTED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - HONEYPOT_HIT_DETECTED
          - HONEYPOT_HIT_DETECTED_V2
          - HONEYPOT_HIT_DETECTED_KNOWN_CLIENT
          - THREAT_DETECTED
          - ULTE_WARNING_LIMIT_EXCEEDED
          - ULTE_DATA_LIMIT_REACHED
          - ISP_HIGH_LATENCY
          - ISP_HIGH_LATENCY_2
          - ISP_PACKET_LOSS
          - ISP_PACKET_LOSS_2
          - VPN_SITE_TO_SITE_DISCONNECTED
          - TELEPORT_CLIENT_CONNECTED
          - TELEPORT_CLIENT_DISCONNECTED
          - HOTSPOT_GUEST_AUTHORIZED
          - HOTSPOT_GUEST_UNAUTHORIZED_BY_ADMIN
          - ADMIN_ACCESS
          - GENERATED
          - MADE_CHANGES_ONE_GLOBAL_SETTING
          - MADE_CHANGES_MULTIPLE_GLOBAL_SETTINGS
          - MADE_CHANGES_ONE_SETTING_OBJECT
          - MADE_CHANGES_MULTIPLE_SETTING_OBJECTS
          - PAUSED_ENTITY
          - RESUMED_ENTITY
          - REMOVED_ENTITY
          - U6_PRO_ADVISORY
          - POE_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED
          - POE_PORT_BUDGET_EXCEEDED_V2
          - DEVICE_UPS_OFFLINE
          - DEVICE_UPS_OFFLINE_TIME
          - DEVICE_UPS_BATTERY_POWER
          - DEVICE_UPS_POWER_RESTORED
          - PORT_TRANSMISSION_ERRORS
          - PORT_DROPPED_TRAFFIC
          - NETWORK_LOOP_DETECTED_BY_KEEPALIVE
          - NETWORK_LOOP_DETECTED_BY_STP
          - AP_UPDATE_AVAILABLE_TO_SUPPORT_AUTOLINK
          - MULTIPLE_AP_UPDATES_AVAILABLE_TO_SUPPORT_AUTOLINK
          - SSL_CERTIFICATE_EXPIRY
          - SSL_CERTIFICATE_EXPIRY_V2
          - SSL_INSPECTION_BYPASS
          - AFC_SERVER_NOT_AVAILABLE
          - AFC_INDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - AFC_OUTDOOR_AP_LOCATION_CANNOT_BE_DETERMINED
          - LOCATION_CANNOT_BE_DETERMINED
          - AFC_INDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AFC_OUTDOOR_AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - AP_LOCATION_NOT_MEET_AFC_REQUIREMENT
          - LAG_PORT_NEGOTIATION_FAILED
          - MCLAG_MULTI_CHASSIS_LINK_PORT_NEGOTIATION_FAILED
          - MCLAG_TARGET_DEVICE_PORT_NEGOTIATION_FAILED
          - TRAFFIC_BLOCKED
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_CLIENT
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_CLIENTS
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_AND_DESTINATION_DEVICES
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_CLIENT_AND_DESTINATION_DEVICE
          - TRAFFIC_BLOCKED_KNOWN_SOURCE_DEVICE_AND_DESTINATION_CLIENT
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_STARTED_SOURCE_DEVICE
          - TRAFFIC_ROUTING_ENDED
          - TRAFFIC_ROUTING_ENDED_SOURCE_DEVICE
          - HIGH_UPLOAD_TRAFFIC
          - HIGH_DOWNLOAD_TRAFFIC
          - HIGH_TOTAL_TRAFFIC
        message_raw:
          type: string
        target:
          type: string
          enum:
          - ACCESS_POINTS
          - ACTION
          - ACTION2
          - ADMIN
          - ADMIN_ACTIVITY_ID
          - AMOUNT
          - AUTH_METHOD
          - AVG_TX_RETRIES
          - AVG_UTILIZATION
          - AVG_INTERFERENCE
          - BSSID
          - CERTIFICATE_NAME
          - CHANNEL
          - CHANNEL_WIDTH
          - CLIENT
          - CLIENTS
          - DST_CLIENT
          - SRC_CLIENT
          - DST_DEVICE
          - SRC_DEVICE
          - CONNECTION_SPEED
          - CONNECTED_DEVICE_WITH_PORT
          - CONSOLE_NAME
          - CONSOLE_WITH_DEVICE_NAME
          - COUNT
          - DATA_UP
          - DATA_DOWN
          - DATA_TOTAL
          - DATE_TIME
          - DOWNLINK
          - SIGNAL_STRENGTH
          - DEVICE
          - DEVICES
          - DEVICE_POWER
          - DEVICE_FROM
          - DEVICE_TO
          - DEVICE_WITH_PORT
          - DOWNLINK_MACS
          - ESSID
          - FREQUENCY
          - INTERFACE
          - IP
          - DST_IP
          - SRC_IP
          - INITIATOR_ID
          - ISP_NAME
          - LATENCY
          - LAST_SUCCESS_DATE_TIME
          - LEARN_MORE
          - NEAREST_AP
          - NETWORK
          - NETWORK_OPERATOR
          - NETWORK_OR_WLAN
          - METHOD
          - OBJECT
          - PLATFORM
          - PORT
          - POWER_BUDGET
          - POWER_USAGE
          - POWER_REMAINING
          - POWER_REQUIREMENT
          - PREVIOUS_CHANNEL
          - PREVIOUS_CHANNEL_WIDTH
          - PREVIOUS_RADIO_BAND
          - PREVIOUS_SIGNAL_STRENGTH
          - PREVIOUS_VERSION
          - RADIO_BAND
          - REASON
          - REMOTE_IP
          - RSSI
          - RX_DROPPED
          - RX_ERRORS
          - SECTION
          - SETTING_NAME
          - SITE
          - SUBNET
          - DURATION
          - THRESHOLD
          - TIME_FRAME
          - TOTAL
          - TOTAL_DISTINCT_CLIENTS
          - TRIGGER
          - TX_DROPPED
          - TX_ERRORS
          - UPLINK
          - URL
          - USER
          - WIFI_STATS
          - WLAN
          - VERSION
          - MAC
          - NEXT_AI
          - THREAT_LOG_ID
          - PSU_ID
          - FAN_ID
          - PORT_RANGE
          - DOCUMENT_REF
          - TOP_PORTS
          - TOP_SWITCH
          - BOTTOM_PORTS
          - BOTTOM_SWITCH
          - VPN_SERVER_ADDRESS
          - WAN_ID
          - WAN_NAME
          - WAN_SUBNET
          - WAN_SLA
          - WAN_SLA_SERVER
          - FAILOVER_PORT
          - FAILOVER_WAN_ID
          - FAILOVER_WAN_NAME
          - FAILOVER_WAN_SUBNET
          - FAILOVER_WAN_SLA
          - FAILOVER_ISP_NAME
        timestamp:
          type: integer
          format: int64
        parameters:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AlertDtoParameters"
    Alarm:
      type: object
      additionalProperties: {}
      properties:
        id:
          type: string
        collectionName:
          type: string
        creationTimestamp:
          type: integer
          format: int64
        partialObject:
          type: boolean
        changes:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        originalFieldValues:
          type: object
          additionalProperties: {}
          properties:
            creationTimestamp:
              type: integer
              format: int64
            partialObject:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
    Local DNS:
      properties:
        ip_address:
          type: string
        name:
          type: string
        hostname:
          type: string
        mac_address:
          type: string
    Historical speedtest results:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/SpeedtestDto"
          properties:
            empty:
              type: boolean
    LastSpeedTestDto:
      properties:
        latest:
          $ref: "#/components/schemas/SpeedtestDto"
        cron_schedule:
          type: string
    SpeedTestOverviewDto:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/SpeedtestDto"
        cron_schedule:
          type: string
    PreviousSubnetDto:
      properties:
        cidr:
          type: string
    Site Feature Migration:
      properties:
        _id:
          type: string
        timestamp:
          type: integer
          format: int64
        feature:
          type: string
          enum:
          - ZONE_BASED_FIREWALL
          - ALARM_MANAGER
    ShadowModeStatusDto:
      properties:
        state:
          type: string
          enum:
          - MASTER
          - BACKUP
          - FAULT
          - INIT
          - STOP
          - UNKNOWN
        shadow_mode_config_created:
          type: boolean
    ShadowModeInfoDto:
      properties:
        management_interface:
          type: string
    WifiAiSettingDto:
      properties:
        auto_adjust_channels_to_country:
          type: boolean
        channels_na:
          type: array
          items:
            type: string
        channels_ng:
          type: array
          items:
            type: string
        channels_6e:
          type: array
          items:
            type: string
        cron_expr:
          type: string
        enabled:
          type: boolean
        exclude_devices:
          type: array
          items:
            type: string
        setting_preference:
          type: string
          enum:
          - auto
          - manual
    UsgSettingDnsVerificationDto:
      properties:
        domain:
          type: string
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        primary_dns_server:
          type: string
        secondary_dns_server:
          type: string
    UsgSettingDto:
      properties:
        timeout_setting_preference:
          type: string
          enum:
          - auto
          - manual
        icmp_timeout:
          type: integer
          format: int32
        other_timeout:
          type: integer
          format: int32
        tcp_close_timeout:
          type: integer
          format: int32
        tcp_close_wait_timeout:
          type: integer
          format: int32
        tcp_established_timeout:
          type: integer
          format: int32
        tcp_fin_wait_timeout:
          type: integer
          format: int32
        tcp_last_ack_timeout:
          type: integer
          format: int32
        tcp_syn_recv_timeout:
          type: integer
          format: int32
        tcp_syn_sent_timeout:
          type: integer
          format: int32
        tcp_time_wait_timeout:
          type: integer
          format: int32
        udp_other_timeout:
          type: integer
          format: int32
        udp_stream_timeout:
          type: integer
          format: int32
        dns_verification:
          $ref: "#/components/schemas/UsgSettingDnsVerificationDto"
        unbind_wan_monitors:
          type: boolean
    TrafficFlowSettingDto:
      properties:
        enabled_allowed_traffic:
          type: boolean
        gateway_dns_enabled:
          type: boolean
        unifi_device_management_enabled:
          type: boolean
        unifi_services_enabled:
          type: boolean
    TeleportSettingDto:
      properties:
        enabled:
          type: boolean
    RoamingAssistantSettingDto:
      properties:
        enabled:
          type: boolean
        rssi:
          type: integer
          format: int32
    NtpSettingDto:
      properties:
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        ntp_server_1:
          type: string
        ntp_server_2:
          type: string
        ntp_server_3:
          type: string
        ntp_server_4:
          type: string
    NetflowSettingDto:
      properties:
        version:
          type: integer
          format: int32
        enabled:
          type: boolean
        port:
          type: integer
          format: int32
        refresh_rate:
          type: integer
          format: int32
        auto_engine_id_enabled:
          type: boolean
        export_frequency:
          type: integer
          format: int32
        sampling_mode:
          type: string
        sampling_rate:
          type: integer
          format: int32
    ManagementSettingDto:
      properties:
        auto_upgrade:
          type: boolean
        auto_upgrade_hour:
          type: integer
          format: int32
        direct_connect_supported:
          type: boolean
        direct_connect_enabled:
          type: boolean
    IdsIpsCategoryDto:
      properties:
        value:
          type: string
        sensitivity:
          type: string
          enum:
          - HIGH
          - MEDIUM
          - LOW
          - EXCLUDED
        category_group:
          type: string
          enum:
          - bots_and_threats_intelligence
          - virus_malware
          - p2p
          - hacking
          - attacks_and_reconnaissance
          - protocol_vulnerabilities
          - diagnostics
          - other
    AclNetworkIsolationDto:
      properties:
        source_network:
          type: string
        destination_networks:
          type: array
          items:
            type: string
    GlobalSwitchSettingDto:
      properties:
        dhcp_snoop:
          type: boolean
        dot1x_fallback_networkconf_id:
          type: string
        dot1x_portctrl_enabled:
          type: boolean
        flowctrl_enabled:
          type: boolean
        jumboframe_enabled:
          type: boolean
        radiusprofile_id:
          type: string
        stp_version:
          type: string
          enum:
          - stp
          - rstp
          - disabled
        switch_exclusions:
          type: array
          items:
            type: string
        acl_device_isolation:
          type: array
          items:
            type: string
        acl_l3_isolation:
          type: array
          items:
            $ref: "#/components/schemas/AclNetworkIsolationDto"
        forward_unknown_mcast_router_ports:
          type: boolean
        flood_known_protocols:
          type: boolean
    GlobalNatSettingDto:
      properties:
        mode:
          type: string
          enum:
          - auto
          - custom
          - "off"
        excluded_network_ids:
          type: array
          items:
            type: string
    ElementAdoptSettingDto:
      properties:
        enabled:
          type: boolean
    DoH (DNS over HTTPS) Setting:
      properties:
        server_names:
          type: array
          items:
            type: string
        state:
          type: string
          enum:
          - "off"
          - auto
          - manual
          - custom
    Available Server Names for DoH (DNS over HTTPS) Setting:
      properties:
        server_names:
          type: array
          items:
            type: string
    ConnectivitySettingDto:
      properties:
        enabled:
          type: boolean
        uplink_type:
          type: string
          enum:
          - custom
          - gateway
    PaginatedResponseSearchResult:
      properties:
        meta:
          type: object
          additionalProperties: {}
        data:
          type: array
          items:
            $ref: "#/components/schemas/SearchResult"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    SearchResult:
      properties:
        model:
          type: string
        data:
          type: object
          additionalProperties: {}
    EvaluationScoreDto:
      properties:
        subscores:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubScoreDto"
        overall_score:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_security_vulnerability:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_security_hardening:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_security_logging:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_performance_score:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_performance_design:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
        network_performance_updates:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - F
    EvaluationSubScoreDto:
      properties:
        id:
          type: string
        category:
          type: string
          enum:
          - SECURITY
          - NETWORK
        details:
          $ref: "#/components/schemas/EvaluationSubscoreDetailsDto"
        score:
          type: integer
          format: int32
        subcategory:
          type: string
          enum:
          - HARDENING
          - LOGGING
          - VULNERABILITY
          - UPDATES
          - DESIGN
          - PERFORMANCE
        dismissed:
          type: boolean
    EvaluationSubscoreAdminDetailsDto:
      properties:
        name:
          type: string
        email:
          type: string
        id:
          type: string
        avatar_url:
          type: string
    EvaluationSubscoreDetailsDto:
      properties:
        s2s_vpn:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreS2sDetailsDto"
        network:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreNetworkDetailsDto"
        device_port:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreDevicePortDetailsDto"
        admin:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreAdminDetailsDto"
        radius:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreRadiusDetailsDto"
        wlan:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreWlanDetailsDto"
        firewall:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreFirewallDetailsDto"
        device:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreDeviceDetailsDto"
    EvaluationSubscoreDeviceDetailsDto:
      properties:
        version:
          type: string
        name:
          type: string
        ip:
          type: string
        mac:
          type: string
        device_type:
          type: string
        model:
          type: string
    EvaluationSubscoreDevicePortDetailsDto:
      properties:
        port_indexes:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        mac:
          type: string
        device_type:
          type: string
        model:
          type: string
    EvaluationSubscoreFirewallDetailsDto:
      properties:
        name:
          type: string
        ruleset:
          type: string
    EvaluationSubscoreNetworkDetailsDto:
      properties:
        name:
          type: string
        ip_subnet:
          type: string
        networkconf_id:
          type: string
    EvaluationSubscoreRadiusDetailsDto:
      properties:
        name:
          type: string
        ip_addresses:
          type: array
          items:
            type: string
    EvaluationSubscoreS2sDetailsDto:
      properties:
        name:
          type: string
        ip_subnet:
          type: string
        networkconf_id:
          type: string
    EvaluationSubscoreWlanApgroupDetailsDto:
      properties:
        id:
          type: string
        name:
          type: string
    EvaluationSubscoreWlanDetailsDto:
      properties:
        apgroups:
          type: array
          items:
            $ref: "#/components/schemas/EvaluationSubscoreWlanApgroupDetailsDto"
        name:
          type: string
        wlan_id:
          type: string
    PortProfileDto:
      properties:
        poe_mode:
          type: string
          enum:
          - auto
          - pasv24
          - passthrough
          - "off"
        op_mode:
          type: string
          enum:
          - switch
          - mirror
          - aggregate
        dot1x_ctrl:
          type: string
          enum:
          - auto
          - force_authorized
          - force_unauthorized
          - mac_based
          - multi_host
        autoneg:
          type: boolean
        isolation:
          type: boolean
        stormctrl_ucast_enabled:
          type: boolean
        stormctrl_mcast_enabled:
          type: boolean
        stormctrl_bcast_enabled:
          type: boolean
        stp_port_mode:
          type: boolean
        port_keepalive_enabled:
          type: boolean
        lldpmed_enabled:
          type: boolean
        lldpmed_notify_enabled:
          type: boolean
        egress_rate_limit_kbps_enabled:
          type: boolean
        voice_networkconf_id:
          type: string
        flow_control_enabled:
          type: boolean
        stormctrl_ucast_rate:
          type: integer
          format: int32
        stormctrl_mcast_rate:
          type: integer
          format: int32
        stormctrl_bcast_rate:
          type: integer
          format: int32
        egress_rate_limit_kbps:
          type: integer
          format: int32
    PoeDeviceInfoDto:
      properties:
        poe_host_device_info:
          $ref: "#/components/schemas/PoeHostDeviceDto"
    PoeHostDeviceDto:
      properties:
        display_name:
          type: string
        mac:
          type: string
        max_poe_usage:
          type: number
          format: double
        avg_poe_usage:
          type: number
          format: double
        near_power_limit_downlinks:
          type: array
          items:
            $ref: "#/components/schemas/PoeNearPowerLimitDownlinkDtos"
    PoeNearPowerLimitDownlinkDtos:
      properties:
        display_name:
          type: string
        mac:
          type: string
        port_number:
          type: integer
          format: int32
        avg_poe_usage:
          type: number
          format: double
        max_poe_usage:
          type: number
          format: double
    Client Ping Latency Result:
      properties:
        client:
          type: string
        packet_size:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        interval:
          type: integer
          format: int32
        gateway_ip:
          type: string
        client_mac:
          type: string
        client_ip:
          type: string
        gateway_mac:
          type: string
        ap_mac:
          type: string
        isp_name:
          type: string
        gateway:
          type: string
        tx_packets:
          type: integer
          format: int32
        rx_packets:
          type: integer
          format: int32
        support_ping_latency:
          type: boolean
        ap:
          type: string
        ap_ip:
          type: string
        packet_loss:
          type: number
          format: double
        min_latency:
          type: number
          format: double
        max_latency:
          type: number
          format: double
        avg_latency:
          type: number
          format: double
        avg_ap_latency:
          type: number
          format: double
        avg_isp_latency:
          type: integer
          format: int64
        replies:
          type: array
          items:
            $ref: "#/components/schemas/Reply of Client Ping Request"
        is_running:
          type: boolean
    Reply of Client Ping Request:
      properties:
        client:
          type: string
        id:
          type: integer
          format: int32
        ttl:
          type: integer
          format: int32
        time:
          type: number
          format: double
        client_ip:
          type: string
    NextAiLogDto:
      properties:
        alert:
          $ref: "#/components/schemas/AlertDto"
        id:
          type: string
        timestamp:
          type: integer
          format: int64
        category:
          type: string
          enum:
          - DEVICE
          - CLIENT
          - INTERNET
          - VPN
        severity:
          type: string
          enum:
          - HIGH
          - MEDIUM
    NetworkStatus:
      properties:
        health:
          type: string
          enum:
          - excellent
          - good
          - fair
          - poor
          - bad
          - unavailable
        reasons:
          type: array
          items:
            $ref: "#/components/schemas/Reason"
        average_satisfaction:
          type: integer
          format: int32
        historical_satisfaction:
          type: array
          items:
            type: integer
            format: int32
    Reason:
      properties:
        code:
          type: string
          enum:
          - device_satisfaction
          - device_not_connected
          - no_internet
          - lte_active
        value:
          type: string
    Unused subnet suggestion:
      properties:
        mask:
          type: integer
          format: int32
        ip_subnets:
          type: array
          items:
            type: string
    Unused port suggestion:
      properties:
        available_ports:
          type: array
          items:
            type: integer
            format: int32
    ModelMetaDto:
      properties:
        Model UIDB id:
          type: string
        Model name:
          type: string
        Model abbreviation:
          type: string
        Model fullName:
          type: string
        Model sysid:
          type: string
        Model sku:
          type: string
        Default image id:
          type: string
        No padding image id:
          type: string
        Left no-padding image id:
          type: string
        Right no-padding image id:
          type: string
        Topology image id:
          type: string
    SiteModelMetaDto:
      properties:
        Models of all available devices:
          type: array
          items:
            $ref: "#/components/schemas/ModelMetaDto"
    MagicSiteToSiteVpnConfigConnectionDto:
      properties:
        sites:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnConfigConnectionSiteDto"
        connectionId:
          type: string
    MagicSiteToSiteVpnConfigConnectionSiteDto:
      properties:
        port:
          type: integer
          format: int32
        siteId:
          type: string
        deviceId:
          type: string
        wanIp:
          type: string
        tunnelIp:
          type: string
    MagicSiteToSiteVpnConfigDeviceDto:
      properties:
        sites:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnConfigDeviceSiteDto"
        deviceId:
          type: string
        deviceName:
          type: string
    MagicSiteToSiteVpnConfigDeviceSiteDto:
      properties:
        siteId:
          type: string
        networks:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnConfigDeviceSiteNetworkDto"
        siteName:
          type: string
    MagicSiteToSiteVpnConfigDeviceSiteNetworkDto:
      properties:
        networkId:
          type: string
        subnet:
          type: string
        networkName:
          type: string
        routerIp:
          type: string
    MagicSiteToSiteVpnConfigDto:
      properties:
        name:
          type: string
        id:
          type: string
        pause:
          type: boolean
        devices:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnConfigDeviceDto"
        connections:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnConfigConnectionDto"
        tunnelSubnet:
          type: string
        status:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnStatusDto"
    MagicSiteToSiteVpnStatusConnectionDto:
      properties:
        associationTime:
          type: integer
          format: int64
        errors:
          type: array
          items:
            type: string
            enum:
            - COMMIT_ERROR
            - CONFLICT_WITH_LOCAL_OSPF_CONFIG
            - INVALID_CONFIG_ID
            - INVALID_CONFIG_NAME
            - INVALID_TUNNEL_SUBNET
            - INVALID_CONNECTION_ID
            - INVALID_CONNECTION_SIZE
            - INVALID_CONNECTION_SITE_ID
            - INVALID_CONNECTION_DEVICE_ID
            - INVALID_CONNECTION_PUBLIC_KEY
            - INVALID_CONNECTION_TUNNEL_IP
            - INVALID_CONNECTION_WAN_IP
            - INVALID_DEVICE_ID
            - INVALID_DEVICE_NAME
            - INVALID_DEVICE_SITE_ID
            - INVALID_DEVICE_SITE_NAME
            - INVALID_DEVICE_NETWORK_ID
            - INVALID_DEVICE_NETWORK_NAME
            - INVALID_DEVICE_NETWORK_SUBNET
            - INVALID_DEVICE_NETWORK_ROUTER_IP
            - INVALID_NO_CONSOLE_WITH_PUBLIC_IP
            - INVALID_DUPLICATED_PUBLIC_KEYS
            - INVALID_MULTIPLE_CONFIGS_PER_SITE
        ping:
          type: integer
          format: int32
        connectionId:
          type: string
        connected:
          type: boolean
    MagicSiteToSiteVpnStatusDto:
      properties:
        errors:
          type: array
          items:
            type: string
            enum:
            - COMMIT_ERROR
            - CONFLICT_WITH_LOCAL_OSPF_CONFIG
            - INVALID_CONFIG_ID
            - INVALID_CONFIG_NAME
            - INVALID_TUNNEL_SUBNET
            - INVALID_CONNECTION_ID
            - INVALID_CONNECTION_SIZE
            - INVALID_CONNECTION_SITE_ID
            - INVALID_CONNECTION_DEVICE_ID
            - INVALID_CONNECTION_PUBLIC_KEY
            - INVALID_CONNECTION_TUNNEL_IP
            - INVALID_CONNECTION_WAN_IP
            - INVALID_DEVICE_ID
            - INVALID_DEVICE_NAME
            - INVALID_DEVICE_SITE_ID
            - INVALID_DEVICE_SITE_NAME
            - INVALID_DEVICE_NETWORK_ID
            - INVALID_DEVICE_NETWORK_NAME
            - INVALID_DEVICE_NETWORK_SUBNET
            - INVALID_DEVICE_NETWORK_ROUTER_IP
            - INVALID_NO_CONSOLE_WITH_PUBLIC_IP
            - INVALID_DUPLICATED_PUBLIC_KEYS
            - INVALID_MULTIPLE_CONFIGS_PER_SITE
        siteId:
          type: string
        connections:
          type: array
          items:
            $ref: "#/components/schemas/MagicSiteToSiteVpnStatusConnectionDto"
        warnings:
          type: array
          items:
            type: string
            enum:
            - CONFLICT_BETWEEN_CONFIGURED_SUBNETS
    LoopDetectionDeviceDto:
      properties:
        ports:
          type: array
          items:
            $ref: "#/components/schemas/LoopDetectionPortDto"
        mac:
          type: string
    LoopDetectionListDto:
      properties:
        keepalive_detected_loop_devices:
          type: array
          items:
            $ref: "#/components/schemas/LoopDetectionDeviceDto"
        stp_detected_loop_devices:
          type: array
          items:
            $ref: "#/components/schemas/LoopDetectionDeviceDto"
    LoopDetectionPortDto:
      properties:
        downlink_macs:
          type: array
          items:
            type: string
        port_index:
          type: integer
          format: int32
    Multicast DNS Service Name:
      properties:
        name:
          type: string
        code:
          type: string
        addresses:
          type: array
          items:
            type: string
    LAN Configuration:
      properties:
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        purpose:
          type: string
          enum:
          - corporate
          - guest
          - remote-user-vpn
          - site-vpn
          - vlan-only
          - ipsec-vpn
          - openvpn-vpn
          - vpn-client
          - intervlan-routing
          - wan
          - wan_magic
        is_nat:
          type: boolean
        igmp_snooping:
          type: boolean
        mdns_enabled:
          type: boolean
        domain_name:
          type: string
        auto_scale_enabled:
          type: boolean
        dhcpd_enabled:
          type: boolean
        dhcpdv6_enabled:
          type: boolean
        dhcpguard_enabled:
          type: boolean
        ipv6_interface_type:
          type: string
          enum:
          - none
          - static
          - pd
          - single_network
        ipv6_ra_enabled:
          type: boolean
        dhcpd_boot_enabled:
          type: boolean
        dhcp_relay_enabled:
          type: boolean
        dhcpd_dns_enabled:
          type: boolean
        dhcpd_gateway_enabled:
          type: boolean
        dhcpd_leasetime:
          type: integer
          format: int32
        dhcpd_ntp_enabled:
          type: boolean
        dhcpd_tftp_server:
          type: string
        dhcpd_time_offset_enabled:
          type: boolean
        dhcpd_unifi_controller:
          type: string
        dhcpd_wins_enabled:
          type: boolean
        dhcpd_wpad_url:
          type: string
        dhcpd_conflict_checking:
          type: boolean
        dhcpdv6_dns_auto:
          type: boolean
        dhcpdv6_leasetime:
          type: integer
          format: int32
        ipv6_pd_interface:
          type: string
        ipv6_pd_start:
          type: string
        ipv6_pd_stop:
          type: string
        ipv6_ra_preferred_lifetime:
          type: string
        ipv6_ra_priority:
          type: string
          enum:
          - high
          - medium
          - low
        lte_lan_enabled:
          type: boolean
        networkgroup:
          type: string
        upnp_lan_enabled:
          type: boolean
        ipv6_setting_preference:
          type: string
          enum:
          - auto
          - manual
        ipv6_client_address_assignment:
          type: string
          enum:
          - slaac
          - dhcpv6
    IspHealthDto:
      properties:
        wan_downtime:
          type: boolean
        high_latency:
          type: boolean
        packet_loss:
          type: boolean
        latency_avg_ms:
          type: integer
          format: int64
        latency_max_ms:
          type: integer
          format: int64
        failover_wan_active:
          type: boolean
        not_reported:
          type: boolean
        sla_verification_server:
          type: string
        timestamp:
          type: integer
          format: int64
        offline_reason:
          type: array
          items:
            $ref: "#/components/schemas/IspOfflineReasonDto"
        wan2_failover_active:
          type: boolean
          deprecated: true
    IspHealthStatusDto:
      properties:
        health_stats:
          type: array
          items:
            $ref: "#/components/schemas/IspHealthDto"
    IspOfflineReasonDto:
      properties:
        timestamp:
          type: integer
          format: int64
        reason:
          type: string
    ImmutableListIspHealthPeriodDto:
      type: array
      items:
        $ref: "#/components/schemas/IspHealthPeriodDto"
      properties:
        empty:
          type: boolean
    IspHealthPeriodDto:
      properties:
        wan_downtime:
          type: boolean
        high_latency:
          type: boolean
        packet_loss:
          type: boolean
        latency_avg_ms:
          type: integer
          format: int64
        latency_max_ms:
          type: integer
          format: int64
        failover_wan_active:
          type: boolean
        not_reported:
          type: boolean
        sla_verification_server:
          type: string
        index:
          type: integer
          format: int64
        count:
          type: integer
          format: int32
        wan2_failover_active:
          type: boolean
          deprecated: true
    IspHealthStatusCompactedDto:
      properties:
        periods:
          type: array
          items:
            $ref: "#/components/schemas/IspHealthPeriodDto"
          properties:
            empty:
              type: boolean
    PaginatedResponseIpsAlert:
      properties:
        meta:
          type: object
          additionalProperties: {}
        data:
          type: array
          items:
            $ref: "#/components/schemas/IpsAlert"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Filtering Insights watchlist:
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/Filtering Insights watchlist entry"
    Filtering Insights watchlist entry:
      properties:
        ad_blocks:
          type: integer
          format: int64
        client:
          $ref: "#/components/schemas/oooo"
        threat_blocks:
          type: integer
          format: int64
        traffic_bytes:
          type: integer
          format: int64
        traffic_percentage:
          type: number
          format: double
        traffic_rule_blocks:
          type: integer
          format: int64
    HotspotInfoDto:
      properties:
        show_hotspot_manager:
          type: boolean
    StreamingResponseBody: {}
    Gateway Engine Utilization:
      properties:
        cpu_utilization_percent:
          type: number
          format: double
        data_points:
          type: array
          items:
            $ref: "#/components/schemas/Gateway Engine Utilization"
        memory_utilization_percent:
          type: number
          format: double
        memory_utilization_in_bytes:
          type: integer
          format: int64
        memory_total_in_bytes:
          type: integer
          format: int64
    GatewayEngineNetworkDto:
      properties:
        number_of_active_clients:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          enum:
          - NETWORK
          - VPN
          - TELEPORT
        id:
          type: string
        subnet:
          type: string
    Gateway Engine Log:
      properties:
        key:
          type: string
          enum:
          - TRAFFIC_BLOCKED
          - TRAFFIC_ROUTING_STARTED
          - TRAFFIC_ROUTING_ENDED
          - VPN_CLIENT_CONNECTED
          - VPN_CLIENT_DISCONNECTED
        message:
          type: string
        timestamp:
          type: integer
          format: int64
        params:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Gateway Engine Log Params"
        feature:
          type: string
          enum:
          - POLICY_BASED_ROUTING
          - CONTENT_FILTERING
          - VPN_SERVICES
          - TRAFFIC_FILTER
          - AD_BLOCK
          - DEVICE_IDENTIFICATION
          - GEO_BLOCK
    Gateway Engine Log Params:
      properties:
        Name of the referenced entity:
          type: string
        trigger:
          $ref: "#/components/schemas/TriggerLogTriggerDto"
        ID of the referenced entity:
          type: string
        source:
          $ref: "#/components/schemas/TriggerLogHostDto"
        destination:
          $ref: "#/components/schemas/TriggerLogHostDto"
        network_purpose:
          type: string
          enum:
          - corporate
          - guest
          - remote-user-vpn
          - site-vpn
          - vlan-only
          - ipsec-vpn
          - openvpn-vpn
          - vpn-client
          - intervlan-routing
          - wan
          - wan_magic
    GatewayEngineFeatureDto:
      properties:
        usage_in_percent:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - AD_BLOCK
          - CONTENT_FILTERING
          - DEVICE_IDENTIFICATION
          - GEO_BLOCK
          - QOS
          - POLICY_BASED_ROUTING
          - SUSPICIOUS_ACTIVITY
          - TRAFFIC_FILTER
          - TRAFFIC_IDENTIFICATION
          - UNIFI_OS
          - VPN_SERVICES
          - WAN_BALANCING
        enabled:
          type: boolean
        supported:
          type: boolean
    FirewallMatrixDestZoneDto:
      properties:
        _id:
          type: string
        action:
          type: string
          enum:
          - block_all
          - allow_all
          - return_traffic
        policy_count:
          type: integer
          format: int32
    FirewallMatrixSourceZoneDto:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/FirewallMatrixDestZoneDto"
        _id:
          type: string
        name:
          type: string
        zone_key:
          type: string
    FirewallRuleDto:
      properties:
        state_established:
          type: boolean
        state_invalid:
          type: boolean
        state_new:
          type: boolean
        state_related:
          type: boolean
        ipsec:
          type: string
          enum:
          - match-ipsec
          - match-none
          - ""
        setting_preference:
          type: string
          enum:
          - auto
          - manual
    CombinedTrafficFirewallRuleDto:
      properties:
        name:
          type: string
        enabled:
          type: boolean
        origin_id:
          type: string
        origin_type:
          type: string
          enum:
          - all
          - traffic_rule
          - custom_firewall_rule
          - hidden_predefined_rule
          - predefined_firewall_rule
          - simple_app_block
          - network_config
          - nat_rule
          - console_setting_direct_connection
          - wan_config
          - port_forward
    Feature verification response:
      properties:
        Feature exists:
          type: boolean
          enum:
          - "true, false"
      required:
      - Feature exists
    ClientExcludedIpDto:
      properties:
        name:
          type: string
        display_name:
          type: string
        hostname:
          type: string
        mac:
          type: string
        ip:
          type: string
        oui:
          type: string
        client_type:
          type: string
          enum:
          - WIRED
          - WIRELESS
          - VPN
          - TELEPORT
        fingerprint:
          $ref: "#/components/schemas/Client Fingerprint data"
        icon_filename:
          type: string
        icon_resolutions:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
        status:
          type: string
          enum:
          - online
          - offline
        network_id:
          type: string
    ExcludedIpDto:
      properties:
        excluded_ip_client_info:
          type: array
          items:
            $ref: "#/components/schemas/ClientExcludedIpDto"
        unidentified_excluded_ip_info:
          type: array
          items:
            $ref: "#/components/schemas/ReportedExcludedIpDto"
    ReportedExcludedIpDto:
      properties:
        ip:
          type: string
        mac:
          type: string
        network_id:
          type: string
    DeviceListDto:
      properties:
        Devices from UniFi Network application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Protect application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Access application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Talk application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi LED application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Connect application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Apollo application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Devices from UniFi Drive application:
          type: array
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
        Standalone or managed by other console devices:
          type: array
          description: Since 7.1.46
          items:
            $ref: "#/components/schemas/UnifiDeviceDto"
    UnifiDeviceDto:
      properties:
        IP address:
          type: string
        Device name:
          type: string
        Firmware version:
          type: string
        Object Id:
          type: string
        default:
          type: boolean
        State:
          type: integer
          format: int32
          example: 1
        MAC address:
          type: string
        Firmware version in user friendly form:
          type: string
        Download speed in bytes per second:
          type: integer
          format: int64
          example: 1024
        Upload speed in bytes:
          type: integer
          format: int64
          example: 512
        Uptime in seconds:
          type: integer
          format: int64
          example: 120
        device_type:
          type: string
          description: Information whether the device is considered a client or device
            from the NET point of view
          enum:
          - MANAGED
          - CLIENT
        last_seen:
          type: integer
          format: int64
          description: Information about when the device was seen for the last time
            in unix timestamp in seconds
        Network id where the device is connected to:
          type: string
        Network name where the device is connected to:
          type: string
        Device ip v4 lease expiration timestamp in seconds:
          type: integer
          format: int64
        last_connection_network_id:
          type: string
        last_connection_network_name:
          type: string
        Stacking group that the device belongs to:
          type: string
        Device model shortname:
          type: string
        Controller that could manage this device:
          type: string
          enum:
          - AIRFIBER
          - AIRMAX
          - AMPLIFI
          - EDGEMAX
          - LTU
          - UFIBER
          - ACCESS
          - CONNECT
          - LED
          - NETWORK
          - PROTECT
          - TALK
          - APOLLO
          - DRIVE
          - UNKNOWN
        Experience:
          type: integer
          format: int32
          example: 99
        "24h usage in bytes per second":
          type: number
          format: double
    void:
      properties:
        device_mac:
          type: string
        wireless_uplink_mac:
          type: string
        wireless_downlink_macs:
          type: array
          items:
            type: string
    DeviceMetaDto:
      properties:
        Device name:
          type: string
        Device MAC:
          type: string
        Device model type:
          type: string
          enum:
          - uap
          - ugw
          - usw
          - udm
          - ubb
          - udb
          - uxg
          - uble
          - uci
          - uacc
          - umbb
          - unknown
        Device model shortname:
          type: string
    ReplaceableDevicesDto:
      properties:
        devices:
          type: array
          items:
            $ref: "#/components/schemas/DeviceMetaDto"
    CloneableDeviceListDto:
      properties:
        devices:
          type: array
          items:
            $ref: "#/components/schemas/DeviceMetaDto"
    HistoricalScoreResponseHistoricalTxRetryDto:
      properties:
        historical_scores:
          type: array
          items:
            $ref: "#/components/schemas/HistoricalTxRetryDto"
    HistoricalTxRetryDto:
      properties:
        tx_retry_percentage:
          type: number
          format: double
        timestamp:
          type: integer
          format: int64
        radio_stats:
          type: array
          items:
            $ref: "#/components/schemas/HistoricalTxRetryRadioDto"
        not_reported:
          type: boolean
        tx_retries:
          type: integer
          format: int64
    HistoricalTxRetryRadioDto:
      properties:
        tx_retry_percentage:
          type: number
          format: double
        radio_band:
          type: string
          enum:
          - ng
          - na
          - 6e
        tx_retries:
          type: integer
          format: int64
    HistoricalSatisfactionDto:
      properties:
        timestamp:
          type: integer
          format: int64
        satisfaction:
          type: integer
          format: int32
        not_reported:
          type: boolean
    HistoricalScoreResponseHistoricalSatisfactionDto:
      properties:
        historical_scores:
          type: array
          items:
            $ref: "#/components/schemas/HistoricalSatisfactionDto"
    Feature limitation:
      properties:
        Required versions to resolve limitation:
          type: array
          items:
            $ref: "#/components/schemas/Feature limitation"
        Feature limitation key:
          type: string
      required:
      - Feature limitation key
    Feature with description:
      properties:
        Feature name:
          type: string
        Feature exists:
          type: boolean
        Feature enabled:
          type: boolean
        Feature limitations:
          type: array
          items:
            $ref: "#/components/schemas/Feature limitation"
      required:
      - Feature exists
      - Feature name
    ConnectivityStats:
      properties:
        clients:
          $ref: "#/components/schemas/StatsByRadioInteger"
    DashboardResponse:
      properties:
        site_stats:
          type: array
          items:
            $ref: "#/components/schemas/Stats"
        device_stats:
          type: array
          items:
            $ref: "#/components/schemas/DeviceStats"
    DeviceStats:
      properties:
        mac_address:
          type: string
        stats:
          type: array
          items:
            $ref: "#/components/schemas/Stats"
    Stats:
      properties:
        timestamp:
          type: integer
          format: int64
        wifi_connectivity:
          $ref: "#/components/schemas/ConnectivityStats"
        wifi_satisfaction:
          $ref: "#/components/schemas/StatsByRadioDouble"
    StatsByRadioDouble:
      properties:
        get6eValue:
          type: number
          format: double
        total:
          type: number
          format: double
        na:
          type: number
          format: double
        ng:
          type: number
          format: double
        "6e":
          type: number
          format: double
    StatsByRadioInteger:
      properties:
        get6eValue:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        na:
          type: integer
          format: int32
        ng:
          type: integer
          format: int32
        "6e":
          type: integer
          format: int32
    CountryTrafficDto:
      properties:
        country:
          type: string
        total_bytes:
          type: integer
          format: int64
        bytes_received:
          type: integer
          format: int64
        bytes_transmitted:
          type: integer
          format: int64
    CountryTrafficStatsDto:
      properties:
        usage_by_country:
          type: array
          items:
            $ref: "#/components/schemas/CountryTrafficDto"
    ClientPowerDto:
      properties:
        power_watts:
          type: number
          format: double
        current_amperes:
          type: number
          format: double
        voltage_volts:
          type: number
          format: double
    ClientTrafficControlDto:
      properties:
        applied_traffic_rule_count:
          type: object
          additionalProperties:
            type: integer
            format: int32
    MLO Details:
      properties:
        channel:
          type: integer
          format: int32
        mimo:
          type: string
          enum:
          - MIMO_1
          - MIMO_2
          - MIMO_3
          - MIMO_4
        signal:
          type: integer
          format: int32
        rx_packets:
          type: integer
          format: int64
        radio_proto:
          type: string
          enum:
          - a
          - b
          - g
          - na
          - ng
          - ac
          - ax
          - be
        mac:
          type: string
        tx_mcs_index:
          type: integer
          format: int32
        radio:
          type: string
        radio_name:
          type: string
        rssi:
          type: integer
          format: int32
        rx_rate:
          type: integer
          format: int64
        tx_rate:
          type: integer
          format: int64
        noise:
          type: integer
          format: int32
        tx_bytes:
          type: integer
          format: int64
        tx_packets:
          type: integer
          format: int64
        channel_width:
          type: string
          enum:
          - "20"
          - "40"
          - "80"
          - "160"
          - "240"
          - "320"
          - "1080"
          - "2160"
          - "4320"
        rx_bytes-r:
          type: integer
          format: int64
        tx_bytes-r:
          type: integer
          format: int64
        rx_bytes:
          type: integer
          format: int64
        rate_imbalance:
          type: integer
          format: int32
    VPN Client:
      allOf:
      - $ref: "#/components/schemas/W"
      - type: object
        properties:
          remote_ip:
            type: string
          vpn_interface:
            type: string
          vpn_type:
            type: string
            enum:
            - auto
            - ipsec-vpn
            - openvpn-vpn
            - openvpn-client
            - openvpn-server
            - pptp-client
            - pptp-server
            - sdwan-hub-spoke-tunnel
            - sdwan-mesh-tunnel
            - l2tp-server
            - uid-server
            - wireguard-teleport-server
            - wireguard-server
            - wireguard-client
            - wireguard-site-to-site
          peer_id:
            type: string
    W:
      description: "See also WiredClient, WirelessClient and VpnClient model definitions\
        \ for a specific implementation"
      discriminator:
        propertyName: type
      properties:
        tx_bytes:
          type: integer
          format: int64
        rx_bytes:
          type: integer
          format: int64
        assoc_time:
          type: integer
          format: int64
        ip:
          type: string
        last_seen:
          type: integer
          format: int64
        name:
          type: string
        rx_bytes-r:
          type: integer
          format: int64
        display_name:
          type: string
        site_id:
          type: string
        uptime:
          type: integer
          format: int64
        network_id:
          type: string
        id:
          type: string
        network_members_group_ids:
          type: array
          items:
            type: string
          uniqueItems: true
        status:
          type: string
          enum:
          - online
          - offline
        rx_packets:
          type: integer
          format: int64
        tx_bytes-r:
          type: integer
          format: int64
        tx_packets:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - WIRED
          - WIRELESS
          - VPN
          - TELEPORT
        ipv6_address:
          type: array
          items:
            type: string
        model_name:
          type: string
        network_name:
          type: string
    Wired Client:
      allOf:
      - $ref: "#/components/schemas/W"
      - type: object
        properties:
          sw_port:
            type: integer
            format: int32
          wired_rate_mbps:
            type: integer
            format: int32
          uplink_mac:
            type: string
          is_wired:
            type: boolean
          last_ipv6:
            type: array
            items:
              type: string
          ipv4_lease_expiration_timestamp_seconds:
            type: integer
            format: int64
          virtual_network_override_enabled:
            type: boolean
          mac:
            type: string
          last_ip:
            type: string
          fingerprint:
            $ref: "#/components/schemas/Client Fingerprint data"
          unifi_device_info:
            $ref: "#/components/schemas/F"
          unifi_device:
            type: boolean
          rx_rate:
            type: integer
            format: int64
          oui:
            type: string
          last_uplink_name:
            type: string
          hostname:
            type: string
          dhcpend_time:
            type: integer
            format: int64
          latest_assoc_time:
            type: integer
            format: int64
          first_seen:
            type: integer
            format: int64
          fixed_ip:
            type: string
          gw_mac:
            type: string
          idletime:
            type: integer
            format: int32
          "1x_identity":
            type: string
          is_guest:
            type: boolean
          user_id:
            type: string
          usergroup_id:
            type: string
          use_fixedip:
            type: boolean
          blocked:
            type: boolean
          tx_rate:
            type: integer
            format: int64
          local_dns_record_enabled:
            type: boolean
          local_dns_record:
            type: string
          virtual_network_override_id:
            type: string
          detailed_states:
            $ref: "#/components/schemas/oo0o"
          last_connection_network_id:
            type: string
          last_connection_network_name:
            type: string
          last_uplink_mac:
            type: string
          is_allowed_in_visual_programming:
            type: boolean
          anomalies:
            type: integer
            format: int64
          authorized:
            type: boolean
          note:
            type: string
          noted:
            type: boolean
          Last 24h usage in bytes:
            type: number
            format: double
          vlan:
            type: integer
            format: int32
          tags:
            type: array
            items:
              type: string
              enum:
              - connection_type_gateway_device
              - connection_type_wired_device
              - connection_type_wireless_device
              - connected_unifi_client
              - connected_client
              - connected_wired_client
              - connected_wireless_client
              - connected_guest
              - connected_unifi_access_client
              - connected_unifi_apollo_client
              - connected_unifi_connect_client
              - connected_unifi_drive_client
              - connected_unifi_led_client
              - connected_unifi_network_client
              - connected_unifi_protect_client
              - connected_unifi_talk_client
            uniqueItems: true
    Wireless Client:
      allOf:
      - $ref: "#/components/schemas/W"
      - type: object
        properties:
          ap_mac:
            type: string
          mld_mac:
            type: string
          bssid:
            type: string
          roam_count:
            type: integer
            format: int32
          radio:
            type: string
          channel:
            type: integer
            format: int32
          signal:
            type: integer
            format: int32
          wifi_tx_attempts:
            type: integer
            format: int64
          uplink_mac:
            type: string
          channel_width:
            type: string
            enum:
            - "20"
            - "40"
            - "80"
            - "160"
            - "240"
            - "320"
            - "1080"
            - "2160"
            - "4320"
          wlanconf_id:
            type: string
          ? Imbalance in percent between rate of the client and its uplink. Possible
            values [-100;100]. 0 indicates perfect balance. Since 7.3.26
          : type: integer
            format: int32
            example: -40
          essid:
            type: string
          wifi_experience_score:
            type: integer
            format: int32
          wifi_experience_average:
            type: integer
            format: int32
          wifi_tx_retries_percentage:
            type: number
            format: double
          ccq:
            type: integer
            format: int32
          powersave_enabled:
            type: boolean
          radio_name:
            type: string
          radio_proto:
            type: string
            enum:
            - a
            - b
            - g
            - na
            - ng
            - ac
            - ax
            - be
          rssi:
            type: integer
            format: int32
          tx_mcs_index:
            type: integer
            format: int32
          noise:
            type: integer
            format: int32
          fixed_ap_enabled:
            type: boolean
          fixed_ap_mac:
            type: string
          mimo:
            type: string
            enum:
            - MIMO_1
            - MIMO_2
            - MIMO_3
            - MIMO_4
          eagerly_discovered:
            type: boolean
          is_mlo:
            type: boolean
          mlo_details:
            type: array
            items:
              $ref: "#/components/schemas/MLO Details"
          last_radio:
            type: string
          is_wired:
            type: boolean
          last_ipv6:
            type: array
            items:
              type: string
          ipv4_lease_expiration_timestamp_seconds:
            type: integer
            format: int64
          virtual_network_override_enabled:
            type: boolean
          mac:
            type: string
          last_ip:
            type: string
          fingerprint:
            $ref: "#/components/schemas/Client Fingerprint data"
          unifi_device_info:
            $ref: "#/components/schemas/F"
          unifi_device:
            type: boolean
          rx_rate:
            type: integer
            format: int64
          oui:
            type: string
          last_uplink_name:
            type: string
          hostname:
            type: string
          dhcpend_time:
            type: integer
            format: int64
          latest_assoc_time:
            type: integer
            format: int64
          first_seen:
            type: integer
            format: int64
          fixed_ip:
            type: string
          gw_mac:
            type: string
          idletime:
            type: integer
            format: int32
          "1x_identity":
            type: string
          is_guest:
            type: boolean
          user_id:
            type: string
          usergroup_id:
            type: string
          use_fixedip:
            type: boolean
          blocked:
            type: boolean
          tx_rate:
            type: integer
            format: int64
          local_dns_record_enabled:
            type: boolean
          local_dns_record:
            type: string
          virtual_network_override_id:
            type: string
          detailed_states:
            $ref: "#/components/schemas/oo0o"
          last_connection_network_id:
            type: string
          last_connection_network_name:
            type: string
          last_uplink_mac:
            type: string
          is_allowed_in_visual_programming:
            type: boolean
          anomalies:
            type: integer
            format: int64
          authorized:
            type: boolean
          note:
            type: string
          noted:
            type: boolean
          Last 24h usage in bytes:
            type: number
            format: double
          vlan:
            type: integer
            format: int32
          tags:
            type: array
            items:
              type: string
              enum:
              - connection_type_gateway_device
              - connection_type_wired_device
              - connection_type_wireless_device
              - connected_unifi_client
              - connected_client
              - connected_wired_client
              - connected_wireless_client
              - connected_guest
              - connected_unifi_access_client
              - connected_unifi_apollo_client
              - connected_unifi_connect_client
              - connected_unifi_drive_client
              - connected_unifi_led_client
              - connected_unifi_network_client
              - connected_unifi_protect_client
              - connected_unifi_talk_client
            uniqueItems: true
    TrafficInsightsOverviewDto:
      properties:
        "24hr_wan_bytes":
          type: integer
          format: int64
        "24hr_bytes":
          type: integer
          format: int64
    TrafficInsightsResponse:
      properties:
        traffic_overview:
          $ref: "#/components/schemas/TrafficInsightsOverviewDto"
    WifiExperienceScoreDto:
      properties:
        wifi_experience_score:
          type: integer
          format: int32
    ClientApStatisticDto:
      properties:
        device_mac:
          type: string
        device_name:
          type: string
        session_time_seconds:
          type: integer
          format: int64
    ClientApStatisticsResponseDto:
      properties:
        ap_stats:
          type: array
          items:
            $ref: "#/components/schemas/ClientApStatisticDto"
        total_session_time_seconds:
          type: integer
          format: int64
    HistoricalActivityDto:
      properties:
        timestamp:
          type: integer
          format: int64
        activity_seconds:
          type: integer
          format: int64
        not_reported:
          type: boolean
    HistoricalActivityResponse:
      properties:
        historical_activity:
          type: array
          items:
            $ref: "#/components/schemas/HistoricalActivityDto"
    ClientCount:
      properties:
        total:
          type: integer
          format: int32
        active:
          type: integer
          format: int32
        groups:
          $ref: "#/components/schemas/ClientGroup"
        total_wireless:
          type: integer
          format: int32
        active_wireless:
          type: integer
          format: int32
    ClientCountBreakdown:
      properties:
        total:
          type: integer
          format: int32
        satisfactionSamples:
          type: integer
          format: int64
        satisfactionTotal:
          type: integer
        bytesTotal:
          type: integer
        satisfaction:
          type: integer
          format: int32
        activity:
          type: integer
          format: int64
        os_class:
          type: integer
          format: int32
        rx_bytes:
          type: integer
        tx_bytes:
          type: integer
    ClientGroup:
      properties:
        all:
          type: array
          items:
            $ref: "#/components/schemas/ClientCountBreakdown"
        guest:
          type: array
          items:
            $ref: "#/components/schemas/ClientCountBreakdown"
        wired:
          type: array
          items:
            $ref: "#/components/schemas/ClientCountBreakdown"
        wireless:
          type: array
          items:
            $ref: "#/components/schemas/ClientCountBreakdown"
    AP scan:
      properties:
        model_display:
          type: string
        security:
          type: string
        channel:
          type: integer
          format: int32
        mac:
          type: string
        bssid:
          type: string
        oui:
          type: string
        essid:
          type: string
        band:
          type: string
          enum:
          - ad
          - na
          - ng
          - 6e
        channel_width:
          type: string
          enum:
          - "20"
          - "40"
          - "80"
          - "160"
          - "240"
          - "320"
          - "1080"
          - "2160"
          - "4320"
        radio_name:
          type: string
        last_seen:
          type: integer
          format: int64
        signal:
          type: integer
          format: int64
    AP scan neighbors:
      properties:
        neighbors:
          type: array
          items:
            $ref: "#/components/schemas/AP scan"
        rogues:
          type: array
          items:
            $ref: "#/components/schemas/AP scan"
    FingerprintOverrideDto:
      properties:
        mac:
          type: string
        dev_id_override:
          type: integer
          format: int32
    FingerprintOverridesListDto:
      properties:
        fp_ml_version:
          type: integer
          format: int32
        fingerprint_overrides:
          type: array
          items:
            $ref: "#/components/schemas/FingerprintOverrideDto"
    AggregatedDashboardDto:
      properties:
        dashboard_meta:
          $ref: "#/components/schemas/AggregatedDashboardMetaDto"
    AggregatedDashboardMetaDto:
      properties:
        layout:
          type: string
          enum:
          - wireless
          - gateway
          - gateway_mesh
          - v2_gateway
          - v2_gateway_uos_server
          - v2_gateway_cloud
          - v2_wireless
          - v2_wireless_cloud
          - custom
        widgets:
          type: array
          items:
            type: string
            enum:
            - connection_types
            - internet
            - device_client_count
            - wireless_experience
            - most_active_clients
            - most_active_aps
            - meshing
            - ap_density
            - next_ai
            - gateway
            - connectivity_status
            - server_ip
            - system_status
            - wan
            - speed_test
            - wifi_channel_preset_configuration
            - device_capacity
            - admin_activity
            - network_activity
            - wifi_activity
            - wan_history
            - critical_traffic_prioritization
            - most_active_apps_aps_clients
            - most_active_apps_clients
            - most_active_aps_clients
            - most_active_apps_aps
            - most_active_apps
            - v2_most_active_aps
            - v2_most_active_clients
            - wifi_channels
            - wifi_tx_retries
            - wifi_connectivity
            - wifi_client_experience
            - ap_radio_density
            - traffic_identification
            - wifi_technology
            - cybersecure
            - shortcuts
            - traffic_flow_stats
          uniqueItems: true
        start_timestamp:
          type: integer
          format: int64
        end_timestamp:
          type: integer
          format: int64
    AdoptInfoDto:
      properties:
        requires_enabling_meshing:
          type: boolean
    DhcpLeaseDto:
      properties:
        name:
          type: string
        display_name:
          type: string
        hostname:
          type: string
        mac:
          type: string
        ip:
          type: string
        lease_expiration_time:
          type: integer
          format: int64
        network_id:
          type: string
        fixed_ip:
          type: string
        use_fixedip:
          type: boolean
    DhcpLeasesDto:
      properties:
        dhcp_lease_info:
          type: array
          items:
            $ref: "#/components/schemas/DhcpLeaseDto"
    StatsPerRadioDto:
      properties:
        ng:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        na:
          type: integer
          format: int32
        "6e":
          type: integer
          format: int32
    WifiExperienceStatDto:
      properties:
        timestamp:
          type: integer
          format: int64
        connectivity:
          $ref: "#/components/schemas/StatsPerRadioDto"
        satisfaction:
          $ref: "#/components/schemas/StatsPerRadioDto"
    WirelessExperienceWidgetDto:
      properties:
        no_stats_reason:
          type: string
          enum:
          - no_adopted_ap
          - no_created_wifi
          - no_active_clients
          - no_data
        history:
          type: array
          items:
            $ref: "#/components/schemas/WifiExperienceStatDto"
        active-num_sta:
          type: integer
          format: int32
        total-num_sta:
          type: integer
          format: int32
    WifiActivityStatDto:
      properties:
        timestamp:
          type: integer
          format: int64
        rx_byte-r:
          type: integer
          format: int64
        tx_byte-r:
          type: integer
          format: int64
        num_sta:
          type: integer
          format: int32
        tx_retry_percentage:
          type: number
          format: double
        max_tx_retry_percentage:
          type: number
          format: double
    WifiActivityWidgetDto:
      properties:
        no_stats_reason:
          type: string
          enum:
          - no_adopted_ap
          - no_created_wifi
          - no_active_clients
          - no_data
        rx_bytes:
          type: integer
          format: int64
        tx_bytes:
          type: integer
          format: int64
        history:
          type: array
          items:
            $ref: "#/components/schemas/WifiActivityStatDto"
    DataRetentionSettingDto:
      properties:
        time_in_hours_for_others:
          type: integer
          format: int64
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        time_enabled:
          type: boolean
        per_client_stats_enabled:
          type: boolean
        time_in_hours_for_5minutes_scale:
          type: integer
          format: int64
        time_in_hours_for_hourly_scale:
          type: integer
          format: int64
        time_in_hours_for_daily_scale:
          type: integer
          format: int64
        time_in_hours_for_monthly_scale:
          type: integer
          format: int64
    SuperMgmtSettingDto:
      properties:
        data_retention:
          $ref: "#/components/schemas/DataRetentionSettingDto"
    AutoChannelUpdateInfoDto:
      properties:
        previous_channel:
          type: integer
          format: int32
        current_channel:
          type: integer
          format: int32
        previous_channel_width:
          type: integer
          format: int32
        current_channel_width:
          type: integer
          format: int32
        radio:
          type: string
        device_mac:
          type: string
    LogLevelsDto:
      properties:
        setting_preference:
          type: string
          enum:
          - auto
          - manual
        device:
          type: string
          enum:
          - "off"
          - fatal
          - error
          - warn
          - info
          - debug
          - trace
          - all
        system:
          type: string
          enum:
          - "off"
          - fatal
          - error
          - warn
          - info
          - debug
          - trace
          - all
        mgmt:
          type: string
          enum:
          - "off"
          - fatal
          - error
          - warn
          - info
          - debug
          - trace
          - all
        sdn:
          type: string
          enum:
          - "off"
          - fatal
          - error
          - warn
          - info
          - debug
          - trace
          - all
    Info:
      properties:
        system:
          $ref: "#/components/schemas/SystemDto"
        sites:
          type: array
          items:
            $ref: "#/components/schemas/SiteDto"
        self:
          $ref: "#/components/schemas/SelfDto"
    SelfDto:
      properties:
        name:
          type: string
        uid:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_owner:
          type: boolean
        first_name:
          type: string
        push_alert_enabled:
          type: boolean
        requires_new_password:
          type: boolean
        ubic_name:
          type: string
        ubic_uuid:
          type: string
        ui_settings:
          $ref: "#/components/schemas/X"
        admin_id:
          type: string
        avatar_url:
          type: string
        community_id:
          type: string
        email_alert_enabled:
          type: boolean
        email_alert_grouping_enabled:
          type: boolean
        email_alert_grouping_delay:
          type: integer
          format: int32
        html_email_enabled:
          type: boolean
        is_professional_installer:
          type: boolean
        is_super:
          type: boolean
    SiteDto:
      properties:
        name:
          type: string
        _id:
          type: string
        permissions:
          type: array
          items:
            type: string
        desc:
          type: string
        role:
          type: string
        attr_hidden_id:
          type: string
        device_count:
          type: integer
          format: int64
        attr_no_delete:
          type: boolean
    SystemDto:
      properties:
        version:
          type: string
        device_id:
          type: string
        super_permissions:
          type: array
          items:
            type: string
        multiple_sites_supported:
          type: boolean
        host_meta:
          $ref: "#/components/schemas/ModelMetaDto"
    FingerprintEngineDefinitionsDto: {}
    UnifiDeviceDetailsDto:
      properties:
        is_wired:
          type: boolean
        uplink_device:
          $ref: "#/components/schemas/UplinkDeviceDto"
    UplinkDeviceDto:
      properties:
        name:
          type: string
        uri:
          type: string
        mac:
          type: string
    DeviceInfo:
      properties:
        status:
          $ref: "#/components/schemas/JsonNode"
        apps:
          $ref: "#/components/schemas/JsonNode"
        info:
          $ref: "#/components/schemas/JsonNode"
        core_data:
          $ref: "#/components/schemas/JsonNode"
    AlarmManagerSiteData:
      properties:
        value:
          type: string
        label:
          type: string
    AlarmManagerScopePickListEntry:
      properties:
        value:
          type: string
        label:
          type: string
        image:
          $ref: "#/components/schemas/AlarmManifestImage"
        metadata:
          $ref: "#/components/schemas/AlarmManagerScopePickListMetadata"
        disabled:
          type: boolean
    AlarmManagerScopePickListMetadata:
      properties:
        id:
          type: string
        site_id:
          type: string
        provides:
          type: array
          items:
            type: string
    AlarmManifestImage:
      properties:
        type:
          type: string
          enum:
          - uic
          - svg
          - uidb
          - guid
          - url
        value:
          type: string
