# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'DpiApp',
    'Meta',
]

@pulumi.output_type
class DpiApp(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 apps: Optional[Sequence[builtins.int]] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 blocked: Optional[builtins.bool] = None,
                 cats: Optional[Sequence[builtins.int]] = None,
                 enabled: Optional[builtins.bool] = None,
                 log: Optional[builtins.bool] = None,
                 name: Optional[builtins.str] = None,
                 qos_rate_max_down: Optional[builtins.int] = None,
                 qos_rate_max_up: Optional[builtins.int] = None,
                 site_id: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if apps is not None:
            pulumi.set(__self__, "apps", apps)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if blocked is not None:
            pulumi.set(__self__, "blocked", blocked)
        if cats is not None:
            pulumi.set(__self__, "cats", cats)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if log is not None:
            pulumi.set(__self__, "log", log)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if qos_rate_max_down is not None:
            pulumi.set(__self__, "qos_rate_max_down", qos_rate_max_down)
        if qos_rate_max_up is not None:
            pulumi.set(__self__, "qos_rate_max_up", qos_rate_max_up)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def apps(self) -> Optional[Sequence[builtins.int]]:
        return pulumi.get(self, "apps")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter
    def blocked(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "blocked")

    @property
    @pulumi.getter
    def cats(self) -> Optional[Sequence[builtins.int]]:
        return pulumi.get(self, "cats")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def log(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "log")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="qosRateMaxDown")
    def qos_rate_max_down(self) -> Optional[builtins.int]:
        return pulumi.get(self, "qos_rate_max_down")

    @property
    @pulumi.getter(name="qosRateMaxUp")
    def qos_rate_max_up(self) -> Optional[builtins.int]:
        return pulumi.get(self, "qos_rate_max_up")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")


@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


