# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetWanNetworkGroupResult',
    'AwaitableGetWanNetworkGroupResult',
    'get_wan_network_group',
    'get_wan_network_group_output',
]

@pulumi.output_type
class GetWanNetworkGroupResult:
    def __init__(__self__, wan_network_groups=None):
        if wan_network_groups and not isinstance(wan_network_groups, list):
            raise TypeError("Expected argument 'wan_network_groups' to be a list")
        pulumi.set(__self__, "wan_network_groups", wan_network_groups)

    @property
    @pulumi.getter(name="wanNetworkGroups")
    def wan_network_groups(self) -> Optional[Sequence['outputs.WanNetworkGroupInfo']]:
        return pulumi.get(self, "wan_network_groups")


class AwaitableGetWanNetworkGroupResult(GetWanNetworkGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWanNetworkGroupResult(
            wan_network_groups=self.wan_network_groups)


def get_wan_network_group(site_name: Optional[builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWanNetworkGroupResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:networkgroups:getWanNetworkGroup', __args__, opts=opts, typ=GetWanNetworkGroupResult).value

    return AwaitableGetWanNetworkGroupResult(
        wan_network_groups=pulumi.get(__ret__, 'wan_network_groups'))
def get_wan_network_group_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWanNetworkGroupResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:networkgroups:getWanNetworkGroup', __args__, opts=opts, typ=GetWanNetworkGroupResult)
    return __ret__.apply(lambda __response__: GetWanNetworkGroupResult(
        wan_network_groups=pulumi.get(__response__, 'wan_network_groups')))
