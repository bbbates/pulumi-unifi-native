# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'DynamicDNS',
    'Meta',
]

@pulumi.output_type
class DynamicDNS(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 custom_service: Optional[builtins.str] = None,
                 host_name: Optional[builtins.str] = None,
                 interface: Optional[builtins.str] = None,
                 login: Optional[builtins.str] = None,
                 options: Optional[Sequence[builtins.str]] = None,
                 server: Optional[builtins.str] = None,
                 service: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 x_password: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if custom_service is not None:
            pulumi.set(__self__, "custom_service", custom_service)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if login is not None:
            pulumi.set(__self__, "login", login)
        if options is not None:
            pulumi.set(__self__, "options", options)
        if server is not None:
            pulumi.set(__self__, "server", server)
        if service is not None:
            pulumi.set(__self__, "service", service)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if x_password is not None:
            pulumi.set(__self__, "x_password", x_password)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter(name="customService")
    def custom_service(self) -> Optional[builtins.str]:
        return pulumi.get(self, "custom_service")

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "host_name")

    @property
    @pulumi.getter
    def interface(self) -> Optional[builtins.str]:
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter
    def login(self) -> Optional[builtins.str]:
        return pulumi.get(self, "login")

    @property
    @pulumi.getter
    def options(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "options")

    @property
    @pulumi.getter
    def server(self) -> Optional[builtins.str]:
        return pulumi.get(self, "server")

    @property
    @pulumi.getter
    def service(self) -> Optional[builtins.str]:
        return pulumi.get(self, "service")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="xPassword")
    def x_password(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_password")


@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


