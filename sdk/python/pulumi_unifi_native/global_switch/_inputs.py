# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'SettingGlobalSwitchAclL3IsolationArgs',
    'SettingGlobalSwitchAclL3IsolationArgsDict',
]

MYPY = False

if not MYPY:
    class SettingGlobalSwitchAclL3IsolationArgsDict(TypedDict):
        destination_networks: NotRequired[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]
        source_network: NotRequired[pulumi.Input[builtins.str]]
elif False:
    SettingGlobalSwitchAclL3IsolationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class SettingGlobalSwitchAclL3IsolationArgs:
    def __init__(__self__, *,
                 destination_networks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 source_network: Optional[pulumi.Input[builtins.str]] = None):
        if destination_networks is not None:
            pulumi.set(__self__, "destination_networks", destination_networks)
        if source_network is not None:
            pulumi.set(__self__, "source_network", source_network)

    @property
    @pulumi.getter(name="destinationNetworks")
    def destination_networks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        return pulumi.get(self, "destination_networks")

    @destination_networks.setter
    def destination_networks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "destination_networks", value)

    @property
    @pulumi.getter(name="sourceNetwork")
    def source_network(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "source_network")

    @source_network.setter
    def source_network(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "source_network", value)


