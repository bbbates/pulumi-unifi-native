# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'StaticDNS',
]

@pulumi.output_type
class StaticDNS(dict):
    def __init__(__self__, *,
                 key: builtins.str,
                 value: builtins.str,
                 id: Optional[builtins.str] = None,
                 enabled: Optional[builtins.bool] = None,
                 port: Optional[builtins.int] = None,
                 priority: Optional[builtins.int] = None,
                 record_type: Optional['StaticDNSRecordType'] = None,
                 ttl: Optional[builtins.int] = None,
                 weight: Optional[builtins.int] = None):
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if record_type is not None:
            pulumi.set(__self__, "record_type", record_type)
        if ttl is not None:
            pulumi.set(__self__, "ttl", ttl)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @property
    @pulumi.getter
    def key(self) -> builtins.str:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> builtins.str:
        return pulumi.get(self, "value")

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def priority(self) -> Optional[builtins.int]:
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="recordType")
    def record_type(self) -> Optional['StaticDNSRecordType']:
        return pulumi.get(self, "record_type")

    @property
    @pulumi.getter
    def ttl(self) -> Optional[builtins.int]:
        return pulumi.get(self, "ttl")

    @property
    @pulumi.getter
    def weight(self) -> Optional[builtins.int]:
        return pulumi.get(self, "weight")


