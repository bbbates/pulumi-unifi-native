# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetHotspotInfoResult',
    'AwaitableGetHotspotInfoResult',
    'get_hotspot_info',
    'get_hotspot_info_output',
]

@pulumi.output_type
class GetHotspotInfoResult:
    def __init__(__self__, show_hotspot_manager=None):
        if show_hotspot_manager and not isinstance(show_hotspot_manager, bool):
            raise TypeError("Expected argument 'show_hotspot_manager' to be a bool")
        pulumi.set(__self__, "show_hotspot_manager", show_hotspot_manager)

    @property
    @pulumi.getter(name="showHotspotManager")
    def show_hotspot_manager(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "show_hotspot_manager")


class AwaitableGetHotspotInfoResult(GetHotspotInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHotspotInfoResult(
            show_hotspot_manager=self.show_hotspot_manager)


def get_hotspot_info(site_name: Optional[builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHotspotInfoResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:info:getHotspotInfo', __args__, opts=opts, typ=GetHotspotInfoResult).value

    return AwaitableGetHotspotInfoResult(
        show_hotspot_manager=pulumi.get(__ret__, 'show_hotspot_manager'))
def get_hotspot_info_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetHotspotInfoResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:info:getHotspotInfo', __args__, opts=opts, typ=GetHotspotInfoResult)
    return __ret__.apply(lambda __response__: GetHotspotInfoResult(
        show_hotspot_manager=pulumi.get(__response__, 'show_hotspot_manager')))
