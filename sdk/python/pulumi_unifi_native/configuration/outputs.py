# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'WanInterfaceConfigurationDto',
]

@pulumi.output_type
class WanInterfaceConfigurationDto(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "wanNetworkgroup":
            suggest = "wan_networkgroup"
        elif key == "wanSla":
            suggest = "wan_sla"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in WanInterfaceConfigurationDto. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        WanInterfaceConfigurationDto.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        WanInterfaceConfigurationDto.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 mode: Optional['WanInterfaceConfigurationDtoMode'] = None,
                 name: Optional[builtins.str] = None,
                 priority: Optional[builtins.int] = None,
                 wan_networkgroup: Optional['WanInterfaceConfigurationDtoWanNetworkgroup'] = None,
                 wan_sla: Optional[builtins.str] = None,
                 weight: Optional[builtins.int] = None):
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if wan_networkgroup is not None:
            pulumi.set(__self__, "wan_networkgroup", wan_networkgroup)
        if wan_sla is not None:
            pulumi.set(__self__, "wan_sla", wan_sla)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @property
    @pulumi.getter
    def mode(self) -> Optional['WanInterfaceConfigurationDtoMode']:
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def priority(self) -> Optional[builtins.int]:
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="wanNetworkgroup")
    def wan_networkgroup(self) -> Optional['WanInterfaceConfigurationDtoWanNetworkgroup']:
        return pulumi.get(self, "wan_networkgroup")

    @property
    @pulumi.getter(name="wanSla")
    def wan_sla(self) -> Optional[builtins.str]:
        return pulumi.get(self, "wan_sla")

    @property
    @pulumi.getter
    def weight(self) -> Optional[builtins.int]:
        return pulumi.get(self, "weight")


