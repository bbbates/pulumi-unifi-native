# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Void',
]

@pulumi.output_type
class Void(dict):
    def __init__(__self__, *,
                 device_mac: Optional[builtins.str] = None,
                 wireless_downlink_macs: Optional[Sequence[builtins.str]] = None,
                 wireless_uplink_mac: Optional[builtins.str] = None):
        if device_mac is not None:
            pulumi.set(__self__, "device_mac", device_mac)
        if wireless_downlink_macs is not None:
            pulumi.set(__self__, "wireless_downlink_macs", wireless_downlink_macs)
        if wireless_uplink_mac is not None:
            pulumi.set(__self__, "wireless_uplink_mac", wireless_uplink_mac)

    @property
    @pulumi.getter(name="deviceMac")
    def device_mac(self) -> Optional[builtins.str]:
        return pulumi.get(self, "device_mac")

    @property
    @pulumi.getter(name="wirelessDownlinkMacs")
    def wireless_downlink_macs(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "wireless_downlink_macs")

    @property
    @pulumi.getter(name="wirelessUplinkMac")
    def wireless_uplink_mac(self) -> Optional[builtins.str]:
        return pulumi.get(self, "wireless_uplink_mac")


