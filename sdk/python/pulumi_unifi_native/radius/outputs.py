# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Meta',
    'SettingRadius',
]

@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


@pulumi.output_type
class SettingRadius(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 accounting_enabled: Optional[builtins.bool] = None,
                 acct_port: Optional[builtins.int] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 auth_port: Optional[builtins.int] = None,
                 configure_whole_network: Optional[builtins.bool] = None,
                 enabled: Optional[builtins.bool] = None,
                 interim_update_interval: Optional[builtins.int] = None,
                 key: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 tunneled_reply: Optional[builtins.bool] = None,
                 x_secret: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if accounting_enabled is not None:
            pulumi.set(__self__, "accounting_enabled", accounting_enabled)
        if acct_port is not None:
            pulumi.set(__self__, "acct_port", acct_port)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if auth_port is not None:
            pulumi.set(__self__, "auth_port", auth_port)
        if configure_whole_network is not None:
            pulumi.set(__self__, "configure_whole_network", configure_whole_network)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if interim_update_interval is not None:
            pulumi.set(__self__, "interim_update_interval", interim_update_interval)
        if key is not None:
            pulumi.set(__self__, "key", key)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if tunneled_reply is not None:
            pulumi.set(__self__, "tunneled_reply", tunneled_reply)
        if x_secret is not None:
            pulumi.set(__self__, "x_secret", x_secret)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="accountingEnabled")
    def accounting_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "accounting_enabled")

    @property
    @pulumi.getter(name="acctPort")
    def acct_port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "acct_port")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter(name="authPort")
    def auth_port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "auth_port")

    @property
    @pulumi.getter(name="configureWholeNetwork")
    def configure_whole_network(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "configure_whole_network")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="interimUpdateInterval")
    def interim_update_interval(self) -> Optional[builtins.int]:
        return pulumi.get(self, "interim_update_interval")

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="tunneledReply")
    def tunneled_reply(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "tunneled_reply")

    @property
    @pulumi.getter(name="xSecret")
    def x_secret(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_secret")


