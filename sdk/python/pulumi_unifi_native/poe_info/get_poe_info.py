# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPoeInfoResult',
    'AwaitableGetPoeInfoResult',
    'get_poe_info',
    'get_poe_info_output',
]

@pulumi.output_type
class GetPoeInfoResult:
    def __init__(__self__, poe_host_device_info=None):
        if poe_host_device_info and not isinstance(poe_host_device_info, dict):
            raise TypeError("Expected argument 'poe_host_device_info' to be a dict")
        pulumi.set(__self__, "poe_host_device_info", poe_host_device_info)

    @property
    @pulumi.getter(name="poeHostDeviceInfo")
    def poe_host_device_info(self) -> Optional['outputs.PoeHostDeviceDto']:
        return pulumi.get(self, "poe_host_device_info")


class AwaitableGetPoeInfoResult(GetPoeInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPoeInfoResult(
            poe_host_device_info=self.poe_host_device_info)


def get_poe_info(site_name: Optional[builtins.str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPoeInfoResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:poe-info:getPoeInfo', __args__, opts=opts, typ=GetPoeInfoResult).value

    return AwaitableGetPoeInfoResult(
        poe_host_device_info=pulumi.get(__ret__, 'poe_host_device_info'))
def get_poe_info_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPoeInfoResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:poe-info:getPoeInfo', __args__, opts=opts, typ=GetPoeInfoResult)
    return __ret__.apply(lambda __response__: GetPoeInfoResult(
        poe_host_device_info=pulumi.get(__response__, 'poe_host_device_info')))
