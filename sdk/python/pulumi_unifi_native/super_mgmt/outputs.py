# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Meta',
    'SettingSuperMgmt',
]

@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


@pulumi.output_type
class SettingSuperMgmt(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 _data_retention_time_in_hours_for5minutes_scale: Optional[builtins.int] = None,
                 analytics_disapproved_for: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 auto_upgrade: Optional[builtins.bool] = None,
                 autobackup_cron_expr: Optional[builtins.str] = None,
                 autobackup_days: Optional[builtins.int] = None,
                 autobackup_enabled: Optional[builtins.bool] = None,
                 autobackup_gcs_bucket: Optional[builtins.str] = None,
                 autobackup_gcs_certificate_path: Optional[builtins.str] = None,
                 autobackup_local_path: Optional[builtins.str] = None,
                 autobackup_max_files: Optional[builtins.int] = None,
                 autobackup_post_actions: Optional[Sequence[builtins.str]] = None,
                 autobackup_timezone: Optional[builtins.str] = None,
                 backup_to_cloud_enabled: Optional[builtins.bool] = None,
                 contact_info_city: Optional[builtins.str] = None,
                 contact_info_company_name: Optional[builtins.str] = None,
                 contact_info_country: Optional[builtins.str] = None,
                 contact_info_full_name: Optional[builtins.str] = None,
                 contact_info_phone_number: Optional[builtins.str] = None,
                 contact_info_shipping_address1: Optional[builtins.str] = None,
                 contact_info_shipping_address2: Optional[builtins.str] = None,
                 contact_info_state: Optional[builtins.str] = None,
                 contact_info_zip: Optional[builtins.str] = None,
                 data_retention_setting_preference: Optional[builtins.str] = None,
                 data_retention_time_in_hours_for_daily_scale: Optional[builtins.int] = None,
                 data_retention_time_in_hours_for_hourly_scale: Optional[builtins.int] = None,
                 data_retention_time_in_hours_for_monthly_scale: Optional[builtins.int] = None,
                 data_retention_time_in_hours_for_others: Optional[builtins.int] = None,
                 default_site_device_auth_password_alert: Optional[builtins.str] = None,
                 discoverable: Optional[builtins.bool] = None,
                 enable_analytics: Optional[builtins.bool] = None,
                 google_maps_api_key: Optional[builtins.str] = None,
                 image_maps_use_google_engine: Optional[builtins.bool] = None,
                 key: Optional[builtins.str] = None,
                 led_enabled: Optional[builtins.bool] = None,
                 live_chat: Optional[builtins.str] = None,
                 live_updates: Optional[builtins.str] = None,
                 minimum_usable_hd_space: Optional[builtins.int] = None,
                 minimum_usable_sd_space: Optional[builtins.int] = None,
                 multiple_sites_enabled: Optional[builtins.bool] = None,
                 override_inform_host: Optional[builtins.bool] = None,
                 override_inform_host_location: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 store_enabled: Optional[builtins.str] = None,
                 time_series_per_client_stats_enabled: Optional[builtins.bool] = None,
                 x_ssh_password: Optional[builtins.str] = None,
                 x_ssh_username: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if _data_retention_time_in_hours_for5minutes_scale is not None:
            pulumi.set(__self__, "_data_retention_time_in_hours_for5minutes_scale", _data_retention_time_in_hours_for5minutes_scale)
        if analytics_disapproved_for is not None:
            pulumi.set(__self__, "analytics_disapproved_for", analytics_disapproved_for)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if auto_upgrade is not None:
            pulumi.set(__self__, "auto_upgrade", auto_upgrade)
        if autobackup_cron_expr is not None:
            pulumi.set(__self__, "autobackup_cron_expr", autobackup_cron_expr)
        if autobackup_days is not None:
            pulumi.set(__self__, "autobackup_days", autobackup_days)
        if autobackup_enabled is not None:
            pulumi.set(__self__, "autobackup_enabled", autobackup_enabled)
        if autobackup_gcs_bucket is not None:
            pulumi.set(__self__, "autobackup_gcs_bucket", autobackup_gcs_bucket)
        if autobackup_gcs_certificate_path is not None:
            pulumi.set(__self__, "autobackup_gcs_certificate_path", autobackup_gcs_certificate_path)
        if autobackup_local_path is not None:
            pulumi.set(__self__, "autobackup_local_path", autobackup_local_path)
        if autobackup_max_files is not None:
            pulumi.set(__self__, "autobackup_max_files", autobackup_max_files)
        if autobackup_post_actions is not None:
            pulumi.set(__self__, "autobackup_post_actions", autobackup_post_actions)
        if autobackup_timezone is not None:
            pulumi.set(__self__, "autobackup_timezone", autobackup_timezone)
        if backup_to_cloud_enabled is not None:
            pulumi.set(__self__, "backup_to_cloud_enabled", backup_to_cloud_enabled)
        if contact_info_city is not None:
            pulumi.set(__self__, "contact_info_city", contact_info_city)
        if contact_info_company_name is not None:
            pulumi.set(__self__, "contact_info_company_name", contact_info_company_name)
        if contact_info_country is not None:
            pulumi.set(__self__, "contact_info_country", contact_info_country)
        if contact_info_full_name is not None:
            pulumi.set(__self__, "contact_info_full_name", contact_info_full_name)
        if contact_info_phone_number is not None:
            pulumi.set(__self__, "contact_info_phone_number", contact_info_phone_number)
        if contact_info_shipping_address1 is not None:
            pulumi.set(__self__, "contact_info_shipping_address1", contact_info_shipping_address1)
        if contact_info_shipping_address2 is not None:
            pulumi.set(__self__, "contact_info_shipping_address2", contact_info_shipping_address2)
        if contact_info_state is not None:
            pulumi.set(__self__, "contact_info_state", contact_info_state)
        if contact_info_zip is not None:
            pulumi.set(__self__, "contact_info_zip", contact_info_zip)
        if data_retention_setting_preference is not None:
            pulumi.set(__self__, "data_retention_setting_preference", data_retention_setting_preference)
        if data_retention_time_in_hours_for_daily_scale is not None:
            pulumi.set(__self__, "data_retention_time_in_hours_for_daily_scale", data_retention_time_in_hours_for_daily_scale)
        if data_retention_time_in_hours_for_hourly_scale is not None:
            pulumi.set(__self__, "data_retention_time_in_hours_for_hourly_scale", data_retention_time_in_hours_for_hourly_scale)
        if data_retention_time_in_hours_for_monthly_scale is not None:
            pulumi.set(__self__, "data_retention_time_in_hours_for_monthly_scale", data_retention_time_in_hours_for_monthly_scale)
        if data_retention_time_in_hours_for_others is not None:
            pulumi.set(__self__, "data_retention_time_in_hours_for_others", data_retention_time_in_hours_for_others)
        if default_site_device_auth_password_alert is not None:
            pulumi.set(__self__, "default_site_device_auth_password_alert", default_site_device_auth_password_alert)
        if discoverable is not None:
            pulumi.set(__self__, "discoverable", discoverable)
        if enable_analytics is not None:
            pulumi.set(__self__, "enable_analytics", enable_analytics)
        if google_maps_api_key is not None:
            pulumi.set(__self__, "google_maps_api_key", google_maps_api_key)
        if image_maps_use_google_engine is not None:
            pulumi.set(__self__, "image_maps_use_google_engine", image_maps_use_google_engine)
        if key is not None:
            pulumi.set(__self__, "key", key)
        if led_enabled is not None:
            pulumi.set(__self__, "led_enabled", led_enabled)
        if live_chat is not None:
            pulumi.set(__self__, "live_chat", live_chat)
        if live_updates is not None:
            pulumi.set(__self__, "live_updates", live_updates)
        if minimum_usable_hd_space is not None:
            pulumi.set(__self__, "minimum_usable_hd_space", minimum_usable_hd_space)
        if minimum_usable_sd_space is not None:
            pulumi.set(__self__, "minimum_usable_sd_space", minimum_usable_sd_space)
        if multiple_sites_enabled is not None:
            pulumi.set(__self__, "multiple_sites_enabled", multiple_sites_enabled)
        if override_inform_host is not None:
            pulumi.set(__self__, "override_inform_host", override_inform_host)
        if override_inform_host_location is not None:
            pulumi.set(__self__, "override_inform_host_location", override_inform_host_location)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if store_enabled is not None:
            pulumi.set(__self__, "store_enabled", store_enabled)
        if time_series_per_client_stats_enabled is not None:
            pulumi.set(__self__, "time_series_per_client_stats_enabled", time_series_per_client_stats_enabled)
        if x_ssh_password is not None:
            pulumi.set(__self__, "x_ssh_password", x_ssh_password)
        if x_ssh_username is not None:
            pulumi.set(__self__, "x_ssh_username", x_ssh_username)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="_dataRetentionTimeInHoursFor5minutesScale")
    def _data_retention_time_in_hours_for5minutes_scale(self) -> Optional[builtins.int]:
        return pulumi.get(self, "_data_retention_time_in_hours_for5minutes_scale")

    @property
    @pulumi.getter(name="analyticsDisapprovedFor")
    def analytics_disapproved_for(self) -> Optional[builtins.str]:
        return pulumi.get(self, "analytics_disapproved_for")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter(name="autoUpgrade")
    def auto_upgrade(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "auto_upgrade")

    @property
    @pulumi.getter(name="autobackupCronExpr")
    def autobackup_cron_expr(self) -> Optional[builtins.str]:
        return pulumi.get(self, "autobackup_cron_expr")

    @property
    @pulumi.getter(name="autobackupDays")
    def autobackup_days(self) -> Optional[builtins.int]:
        return pulumi.get(self, "autobackup_days")

    @property
    @pulumi.getter(name="autobackupEnabled")
    def autobackup_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "autobackup_enabled")

    @property
    @pulumi.getter(name="autobackupGcsBucket")
    def autobackup_gcs_bucket(self) -> Optional[builtins.str]:
        return pulumi.get(self, "autobackup_gcs_bucket")

    @property
    @pulumi.getter(name="autobackupGcsCertificatePath")
    def autobackup_gcs_certificate_path(self) -> Optional[builtins.str]:
        return pulumi.get(self, "autobackup_gcs_certificate_path")

    @property
    @pulumi.getter(name="autobackupLocalPath")
    def autobackup_local_path(self) -> Optional[builtins.str]:
        return pulumi.get(self, "autobackup_local_path")

    @property
    @pulumi.getter(name="autobackupMaxFiles")
    def autobackup_max_files(self) -> Optional[builtins.int]:
        return pulumi.get(self, "autobackup_max_files")

    @property
    @pulumi.getter(name="autobackupPostActions")
    def autobackup_post_actions(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "autobackup_post_actions")

    @property
    @pulumi.getter(name="autobackupTimezone")
    def autobackup_timezone(self) -> Optional[builtins.str]:
        return pulumi.get(self, "autobackup_timezone")

    @property
    @pulumi.getter(name="backupToCloudEnabled")
    def backup_to_cloud_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "backup_to_cloud_enabled")

    @property
    @pulumi.getter(name="contactInfoCity")
    def contact_info_city(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_city")

    @property
    @pulumi.getter(name="contactInfoCompanyName")
    def contact_info_company_name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_company_name")

    @property
    @pulumi.getter(name="contactInfoCountry")
    def contact_info_country(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_country")

    @property
    @pulumi.getter(name="contactInfoFullName")
    def contact_info_full_name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_full_name")

    @property
    @pulumi.getter(name="contactInfoPhoneNumber")
    def contact_info_phone_number(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_phone_number")

    @property
    @pulumi.getter(name="contactInfoShippingAddress1")
    def contact_info_shipping_address1(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_shipping_address1")

    @property
    @pulumi.getter(name="contactInfoShippingAddress2")
    def contact_info_shipping_address2(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_shipping_address2")

    @property
    @pulumi.getter(name="contactInfoState")
    def contact_info_state(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_state")

    @property
    @pulumi.getter(name="contactInfoZip")
    def contact_info_zip(self) -> Optional[builtins.str]:
        return pulumi.get(self, "contact_info_zip")

    @property
    @pulumi.getter(name="dataRetentionSettingPreference")
    def data_retention_setting_preference(self) -> Optional[builtins.str]:
        return pulumi.get(self, "data_retention_setting_preference")

    @property
    @pulumi.getter(name="dataRetentionTimeInHoursForDailyScale")
    def data_retention_time_in_hours_for_daily_scale(self) -> Optional[builtins.int]:
        return pulumi.get(self, "data_retention_time_in_hours_for_daily_scale")

    @property
    @pulumi.getter(name="dataRetentionTimeInHoursForHourlyScale")
    def data_retention_time_in_hours_for_hourly_scale(self) -> Optional[builtins.int]:
        return pulumi.get(self, "data_retention_time_in_hours_for_hourly_scale")

    @property
    @pulumi.getter(name="dataRetentionTimeInHoursForMonthlyScale")
    def data_retention_time_in_hours_for_monthly_scale(self) -> Optional[builtins.int]:
        return pulumi.get(self, "data_retention_time_in_hours_for_monthly_scale")

    @property
    @pulumi.getter(name="dataRetentionTimeInHoursForOthers")
    def data_retention_time_in_hours_for_others(self) -> Optional[builtins.int]:
        return pulumi.get(self, "data_retention_time_in_hours_for_others")

    @property
    @pulumi.getter(name="defaultSiteDeviceAuthPasswordAlert")
    def default_site_device_auth_password_alert(self) -> Optional[builtins.str]:
        return pulumi.get(self, "default_site_device_auth_password_alert")

    @property
    @pulumi.getter
    def discoverable(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "discoverable")

    @property
    @pulumi.getter(name="enableAnalytics")
    def enable_analytics(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enable_analytics")

    @property
    @pulumi.getter(name="googleMapsApiKey")
    def google_maps_api_key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "google_maps_api_key")

    @property
    @pulumi.getter(name="imageMapsUseGoogleEngine")
    def image_maps_use_google_engine(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "image_maps_use_google_engine")

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter(name="ledEnabled")
    def led_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "led_enabled")

    @property
    @pulumi.getter(name="liveChat")
    def live_chat(self) -> Optional[builtins.str]:
        return pulumi.get(self, "live_chat")

    @property
    @pulumi.getter(name="liveUpdates")
    def live_updates(self) -> Optional[builtins.str]:
        return pulumi.get(self, "live_updates")

    @property
    @pulumi.getter(name="minimumUsableHdSpace")
    def minimum_usable_hd_space(self) -> Optional[builtins.int]:
        return pulumi.get(self, "minimum_usable_hd_space")

    @property
    @pulumi.getter(name="minimumUsableSdSpace")
    def minimum_usable_sd_space(self) -> Optional[builtins.int]:
        return pulumi.get(self, "minimum_usable_sd_space")

    @property
    @pulumi.getter(name="multipleSitesEnabled")
    def multiple_sites_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "multiple_sites_enabled")

    @property
    @pulumi.getter(name="overrideInformHost")
    def override_inform_host(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "override_inform_host")

    @property
    @pulumi.getter(name="overrideInformHostLocation")
    def override_inform_host_location(self) -> Optional[builtins.str]:
        return pulumi.get(self, "override_inform_host_location")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="storeEnabled")
    def store_enabled(self) -> Optional[builtins.str]:
        return pulumi.get(self, "store_enabled")

    @property
    @pulumi.getter(name="timeSeriesPerClientStatsEnabled")
    def time_series_per_client_stats_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "time_series_per_client_stats_enabled")

    @property
    @pulumi.getter(name="xSshPassword")
    def x_ssh_password(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_ssh_password")

    @property
    @pulumi.getter(name="xSshUsername")
    def x_ssh_username(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_ssh_username")


