# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_unifi_native.account as __account
    account = __account
    import pulumi_unifi_native.acl_rules as __acl_rules
    acl_rules = __acl_rules
    import pulumi_unifi_native.apgroups as __apgroups
    apgroups = __apgroups
    import pulumi_unifi_native.auto_speedtest as __auto_speedtest
    auto_speedtest = __auto_speedtest
    import pulumi_unifi_native.baresip as __baresip
    baresip = __baresip
    import pulumi_unifi_native.broadcast as __broadcast
    broadcast = __broadcast
    import pulumi_unifi_native.broadcastgroup as __broadcastgroup
    broadcastgroup = __broadcastgroup
    import pulumi_unifi_native.channelplan as __channelplan
    channelplan = __channelplan
    import pulumi_unifi_native.config as __config
    config = __config
    import pulumi_unifi_native.configuration as __configuration
    configuration = __configuration
    import pulumi_unifi_native.connectivity as __connectivity
    connectivity = __connectivity
    import pulumi_unifi_native.content_filtering as __content_filtering
    content_filtering = __content_filtering
    import pulumi_unifi_native.country as __country
    country = __country
    import pulumi_unifi_native.dashboard as __dashboard
    dashboard = __dashboard
    import pulumi_unifi_native.details as __details
    details = __details
    import pulumi_unifi_native.device as __device
    device = __device
    import pulumi_unifi_native.devices as __devices
    devices = __devices
    import pulumi_unifi_native.dhcpoption as __dhcpoption
    dhcpoption = __dhcpoption
    import pulumi_unifi_native.doh as __doh
    doh = __doh
    import pulumi_unifi_native.dpi as __dpi
    dpi = __dpi
    import pulumi_unifi_native.dpiapp as __dpiapp
    dpiapp = __dpiapp
    import pulumi_unifi_native.dpigroup as __dpigroup
    dpigroup = __dpigroup
    import pulumi_unifi_native.dynamicdns as __dynamicdns
    dynamicdns = __dynamicdns
    import pulumi_unifi_native.element_adopt as __element_adopt
    element_adopt = __element_adopt
    import pulumi_unifi_native.ether_lighting as __ether_lighting
    ether_lighting = __ether_lighting
    import pulumi_unifi_native.evaluation_score as __evaluation_score
    evaluation_score = __evaluation_score
    import pulumi_unifi_native.features as __features
    features = __features
    import pulumi_unifi_native.fingerprint_override as __fingerprint_override
    fingerprint_override = __fingerprint_override
    import pulumi_unifi_native.fingerprint_overrides as __fingerprint_overrides
    fingerprint_overrides = __fingerprint_overrides
    import pulumi_unifi_native.firewall_app_blocks as __firewall_app_blocks
    firewall_app_blocks = __firewall_app_blocks
    import pulumi_unifi_native.firewall_policies as __firewall_policies
    firewall_policies = __firewall_policies
    import pulumi_unifi_native.firewallgroup as __firewallgroup
    firewallgroup = __firewallgroup
    import pulumi_unifi_native.firewallrule as __firewallrule
    firewallrule = __firewallrule
    import pulumi_unifi_native.floorplan as __floorplan
    floorplan = __floorplan
    import pulumi_unifi_native.general_info as __general_info
    general_info = __general_info
    import pulumi_unifi_native.global_ap as __global_ap
    global_ap = __global_ap
    import pulumi_unifi_native.global_nat as __global_nat
    global_nat = __global_nat
    import pulumi_unifi_native.global_switch as __global_switch
    global_switch = __global_switch
    import pulumi_unifi_native.guest_access as __guest_access
    guest_access = __guest_access
    import pulumi_unifi_native.heatmap as __heatmap
    heatmap = __heatmap
    import pulumi_unifi_native.heatmappoint as __heatmappoint
    heatmappoint = __heatmappoint
    import pulumi_unifi_native.hotspot2conf as __hotspot2conf
    hotspot2conf = __hotspot2conf
    import pulumi_unifi_native.hotspotop as __hotspotop
    hotspotop = __hotspotop
    import pulumi_unifi_native.hotspotpackage as __hotspotpackage
    hotspotpackage = __hotspotpackage
    import pulumi_unifi_native.info as __info
    info = __info
    import pulumi_unifi_native.ips as __ips
    ips = __ips
    import pulumi_unifi_native.lcm as __lcm
    lcm = __lcm
    import pulumi_unifi_native.locale as __locale
    locale = __locale
    import pulumi_unifi_native.magic_site_to_site_vpn as __magic_site_to_site_vpn
    magic_site_to_site_vpn = __magic_site_to_site_vpn
    import pulumi_unifi_native.map as __map
    map = __map
    import pulumi_unifi_native.mclag_groups as __mclag_groups
    mclag_groups = __mclag_groups
    import pulumi_unifi_native.mdns as __mdns
    mdns = __mdns
    import pulumi_unifi_native.mediafile as __mediafile
    mediafile = __mediafile
    import pulumi_unifi_native.mgmt as __mgmt
    mgmt = __mgmt
    import pulumi_unifi_native.micro_segment_group as __micro_segment_group
    micro_segment_group = __micro_segment_group
    import pulumi_unifi_native.micro_segment_groups as __micro_segment_groups
    micro_segment_groups = __micro_segment_groups
    import pulumi_unifi_native.models as __models
    models = __models
    import pulumi_unifi_native.nat as __nat
    nat = __nat
    import pulumi_unifi_native.netflow as __netflow
    netflow = __netflow
    import pulumi_unifi_native.network as __network
    network = __network
    import pulumi_unifi_native.network_members_group as __network_members_group
    network_members_group = __network_members_group
    import pulumi_unifi_native.network_members_groups as __network_members_groups
    network_members_groups = __network_members_groups
    import pulumi_unifi_native.network_optimization as __network_optimization
    network_optimization = __network_optimization
    import pulumi_unifi_native.networkconf as __networkconf
    networkconf = __networkconf
    import pulumi_unifi_native.networkgroups as __networkgroups
    networkgroups = __networkgroups
    import pulumi_unifi_native.ntp as __ntp
    ntp = __ntp
    import pulumi_unifi_native.poe_info as __poe_info
    poe_info = __poe_info
    import pulumi_unifi_native.porta as __porta
    porta = __porta
    import pulumi_unifi_native.portconf as __portconf
    portconf = __portconf
    import pulumi_unifi_native.portforward as __portforward
    portforward = __portforward
    import pulumi_unifi_native.power as __power
    power = __power
    import pulumi_unifi_native.predefined as __predefined
    predefined = __predefined
    import pulumi_unifi_native.profiles as __profiles
    profiles = __profiles
    import pulumi_unifi_native.qos_rules as __qos_rules
    qos_rules = __qos_rules
    import pulumi_unifi_native.radio_ai as __radio_ai
    radio_ai = __radio_ai
    import pulumi_unifi_native.radius as __radius
    radius = __radius
    import pulumi_unifi_native.radius_server as __radius_server
    radius_server = __radius_server
    import pulumi_unifi_native.radiusprofile as __radiusprofile
    radiusprofile = __radiusprofile
    import pulumi_unifi_native.router as __router
    router = __router
    import pulumi_unifi_native.routing as __routing
    routing = __routing
    import pulumi_unifi_native.rsyslogd as __rsyslogd
    rsyslogd = __rsyslogd
    import pulumi_unifi_native.scheduletask as __scheduletask
    scheduletask = __scheduletask
    import pulumi_unifi_native.shape as __shape
    shape = __shape
    import pulumi_unifi_native.snmp as __snmp
    snmp = __snmp
    import pulumi_unifi_native.spatialrecord as __spatialrecord
    spatialrecord = __spatialrecord
    import pulumi_unifi_native.ssl_inspection as __ssl_inspection
    ssl_inspection = __ssl_inspection
    import pulumi_unifi_native.stacking as __stacking
    stacking = __stacking
    import pulumi_unifi_native.static_dns as __static_dns
    static_dns = __static_dns
    import pulumi_unifi_native.super_cloudaccess as __super_cloudaccess
    super_cloudaccess = __super_cloudaccess
    import pulumi_unifi_native.super_events as __super_events
    super_events = __super_events
    import pulumi_unifi_native.super_fwupdate as __super_fwupdate
    super_fwupdate = __super_fwupdate
    import pulumi_unifi_native.super_identity as __super_identity
    super_identity = __super_identity
    import pulumi_unifi_native.super_mail as __super_mail
    super_mail = __super_mail
    import pulumi_unifi_native.super_mgmt as __super_mgmt
    super_mgmt = __super_mgmt
    import pulumi_unifi_native.super_sdn as __super_sdn
    super_sdn = __super_sdn
    import pulumi_unifi_native.super_smtp as __super_smtp
    super_smtp = __super_smtp
    import pulumi_unifi_native.tag as __tag
    tag = __tag
    import pulumi_unifi_native.teleport as __teleport
    teleport = __teleport
    import pulumi_unifi_native.traffic_flow as __traffic_flow
    traffic_flow = __traffic_flow
    import pulumi_unifi_native.trafficroutes as __trafficroutes
    trafficroutes = __trafficroutes
    import pulumi_unifi_native.trafficrule as __trafficrule
    trafficrule = __trafficrule
    import pulumi_unifi_native.trafficrules as __trafficrules
    trafficrules = __trafficrules
    import pulumi_unifi_native.user as __user
    user = __user
    import pulumi_unifi_native.usergroup as __usergroup
    usergroup = __usergroup
    import pulumi_unifi_native.usg as __usg
    usg = __usg
    import pulumi_unifi_native.usw as __usw
    usw = __usw
    import pulumi_unifi_native.virtualdevice as __virtualdevice
    virtualdevice = __virtualdevice
    import pulumi_unifi_native.vpn_server as __vpn_server
    vpn_server = __vpn_server
    import pulumi_unifi_native.wan_slas as __wan_slas
    wan_slas = __wan_slas
    import pulumi_unifi_native.wifiman as __wifiman
    wifiman = __wifiman
    import pulumi_unifi_native.wlan_capabilities as __wlan_capabilities
    wlan_capabilities = __wlan_capabilities
    import pulumi_unifi_native.wlanconf as __wlanconf
    wlanconf = __wlanconf
    import pulumi_unifi_native.wlangroup as __wlangroup
    wlangroup = __wlangroup
    import pulumi_unifi_native.zone as __zone
    zone = __zone
else:
    account = _utilities.lazy_import('pulumi_unifi_native.account')
    acl_rules = _utilities.lazy_import('pulumi_unifi_native.acl_rules')
    apgroups = _utilities.lazy_import('pulumi_unifi_native.apgroups')
    auto_speedtest = _utilities.lazy_import('pulumi_unifi_native.auto_speedtest')
    baresip = _utilities.lazy_import('pulumi_unifi_native.baresip')
    broadcast = _utilities.lazy_import('pulumi_unifi_native.broadcast')
    broadcastgroup = _utilities.lazy_import('pulumi_unifi_native.broadcastgroup')
    channelplan = _utilities.lazy_import('pulumi_unifi_native.channelplan')
    config = _utilities.lazy_import('pulumi_unifi_native.config')
    configuration = _utilities.lazy_import('pulumi_unifi_native.configuration')
    connectivity = _utilities.lazy_import('pulumi_unifi_native.connectivity')
    content_filtering = _utilities.lazy_import('pulumi_unifi_native.content_filtering')
    country = _utilities.lazy_import('pulumi_unifi_native.country')
    dashboard = _utilities.lazy_import('pulumi_unifi_native.dashboard')
    details = _utilities.lazy_import('pulumi_unifi_native.details')
    device = _utilities.lazy_import('pulumi_unifi_native.device')
    devices = _utilities.lazy_import('pulumi_unifi_native.devices')
    dhcpoption = _utilities.lazy_import('pulumi_unifi_native.dhcpoption')
    doh = _utilities.lazy_import('pulumi_unifi_native.doh')
    dpi = _utilities.lazy_import('pulumi_unifi_native.dpi')
    dpiapp = _utilities.lazy_import('pulumi_unifi_native.dpiapp')
    dpigroup = _utilities.lazy_import('pulumi_unifi_native.dpigroup')
    dynamicdns = _utilities.lazy_import('pulumi_unifi_native.dynamicdns')
    element_adopt = _utilities.lazy_import('pulumi_unifi_native.element_adopt')
    ether_lighting = _utilities.lazy_import('pulumi_unifi_native.ether_lighting')
    evaluation_score = _utilities.lazy_import('pulumi_unifi_native.evaluation_score')
    features = _utilities.lazy_import('pulumi_unifi_native.features')
    fingerprint_override = _utilities.lazy_import('pulumi_unifi_native.fingerprint_override')
    fingerprint_overrides = _utilities.lazy_import('pulumi_unifi_native.fingerprint_overrides')
    firewall_app_blocks = _utilities.lazy_import('pulumi_unifi_native.firewall_app_blocks')
    firewall_policies = _utilities.lazy_import('pulumi_unifi_native.firewall_policies')
    firewallgroup = _utilities.lazy_import('pulumi_unifi_native.firewallgroup')
    firewallrule = _utilities.lazy_import('pulumi_unifi_native.firewallrule')
    floorplan = _utilities.lazy_import('pulumi_unifi_native.floorplan')
    general_info = _utilities.lazy_import('pulumi_unifi_native.general_info')
    global_ap = _utilities.lazy_import('pulumi_unifi_native.global_ap')
    global_nat = _utilities.lazy_import('pulumi_unifi_native.global_nat')
    global_switch = _utilities.lazy_import('pulumi_unifi_native.global_switch')
    guest_access = _utilities.lazy_import('pulumi_unifi_native.guest_access')
    heatmap = _utilities.lazy_import('pulumi_unifi_native.heatmap')
    heatmappoint = _utilities.lazy_import('pulumi_unifi_native.heatmappoint')
    hotspot2conf = _utilities.lazy_import('pulumi_unifi_native.hotspot2conf')
    hotspotop = _utilities.lazy_import('pulumi_unifi_native.hotspotop')
    hotspotpackage = _utilities.lazy_import('pulumi_unifi_native.hotspotpackage')
    info = _utilities.lazy_import('pulumi_unifi_native.info')
    ips = _utilities.lazy_import('pulumi_unifi_native.ips')
    lcm = _utilities.lazy_import('pulumi_unifi_native.lcm')
    locale = _utilities.lazy_import('pulumi_unifi_native.locale')
    magic_site_to_site_vpn = _utilities.lazy_import('pulumi_unifi_native.magic_site_to_site_vpn')
    map = _utilities.lazy_import('pulumi_unifi_native.map')
    mclag_groups = _utilities.lazy_import('pulumi_unifi_native.mclag_groups')
    mdns = _utilities.lazy_import('pulumi_unifi_native.mdns')
    mediafile = _utilities.lazy_import('pulumi_unifi_native.mediafile')
    mgmt = _utilities.lazy_import('pulumi_unifi_native.mgmt')
    micro_segment_group = _utilities.lazy_import('pulumi_unifi_native.micro_segment_group')
    micro_segment_groups = _utilities.lazy_import('pulumi_unifi_native.micro_segment_groups')
    models = _utilities.lazy_import('pulumi_unifi_native.models')
    nat = _utilities.lazy_import('pulumi_unifi_native.nat')
    netflow = _utilities.lazy_import('pulumi_unifi_native.netflow')
    network = _utilities.lazy_import('pulumi_unifi_native.network')
    network_members_group = _utilities.lazy_import('pulumi_unifi_native.network_members_group')
    network_members_groups = _utilities.lazy_import('pulumi_unifi_native.network_members_groups')
    network_optimization = _utilities.lazy_import('pulumi_unifi_native.network_optimization')
    networkconf = _utilities.lazy_import('pulumi_unifi_native.networkconf')
    networkgroups = _utilities.lazy_import('pulumi_unifi_native.networkgroups')
    ntp = _utilities.lazy_import('pulumi_unifi_native.ntp')
    poe_info = _utilities.lazy_import('pulumi_unifi_native.poe_info')
    porta = _utilities.lazy_import('pulumi_unifi_native.porta')
    portconf = _utilities.lazy_import('pulumi_unifi_native.portconf')
    portforward = _utilities.lazy_import('pulumi_unifi_native.portforward')
    power = _utilities.lazy_import('pulumi_unifi_native.power')
    predefined = _utilities.lazy_import('pulumi_unifi_native.predefined')
    profiles = _utilities.lazy_import('pulumi_unifi_native.profiles')
    qos_rules = _utilities.lazy_import('pulumi_unifi_native.qos_rules')
    radio_ai = _utilities.lazy_import('pulumi_unifi_native.radio_ai')
    radius = _utilities.lazy_import('pulumi_unifi_native.radius')
    radius_server = _utilities.lazy_import('pulumi_unifi_native.radius_server')
    radiusprofile = _utilities.lazy_import('pulumi_unifi_native.radiusprofile')
    router = _utilities.lazy_import('pulumi_unifi_native.router')
    routing = _utilities.lazy_import('pulumi_unifi_native.routing')
    rsyslogd = _utilities.lazy_import('pulumi_unifi_native.rsyslogd')
    scheduletask = _utilities.lazy_import('pulumi_unifi_native.scheduletask')
    shape = _utilities.lazy_import('pulumi_unifi_native.shape')
    snmp = _utilities.lazy_import('pulumi_unifi_native.snmp')
    spatialrecord = _utilities.lazy_import('pulumi_unifi_native.spatialrecord')
    ssl_inspection = _utilities.lazy_import('pulumi_unifi_native.ssl_inspection')
    stacking = _utilities.lazy_import('pulumi_unifi_native.stacking')
    static_dns = _utilities.lazy_import('pulumi_unifi_native.static_dns')
    super_cloudaccess = _utilities.lazy_import('pulumi_unifi_native.super_cloudaccess')
    super_events = _utilities.lazy_import('pulumi_unifi_native.super_events')
    super_fwupdate = _utilities.lazy_import('pulumi_unifi_native.super_fwupdate')
    super_identity = _utilities.lazy_import('pulumi_unifi_native.super_identity')
    super_mail = _utilities.lazy_import('pulumi_unifi_native.super_mail')
    super_mgmt = _utilities.lazy_import('pulumi_unifi_native.super_mgmt')
    super_sdn = _utilities.lazy_import('pulumi_unifi_native.super_sdn')
    super_smtp = _utilities.lazy_import('pulumi_unifi_native.super_smtp')
    tag = _utilities.lazy_import('pulumi_unifi_native.tag')
    teleport = _utilities.lazy_import('pulumi_unifi_native.teleport')
    traffic_flow = _utilities.lazy_import('pulumi_unifi_native.traffic_flow')
    trafficroutes = _utilities.lazy_import('pulumi_unifi_native.trafficroutes')
    trafficrule = _utilities.lazy_import('pulumi_unifi_native.trafficrule')
    trafficrules = _utilities.lazy_import('pulumi_unifi_native.trafficrules')
    user = _utilities.lazy_import('pulumi_unifi_native.user')
    usergroup = _utilities.lazy_import('pulumi_unifi_native.usergroup')
    usg = _utilities.lazy_import('pulumi_unifi_native.usg')
    usw = _utilities.lazy_import('pulumi_unifi_native.usw')
    virtualdevice = _utilities.lazy_import('pulumi_unifi_native.virtualdevice')
    vpn_server = _utilities.lazy_import('pulumi_unifi_native.vpn_server')
    wan_slas = _utilities.lazy_import('pulumi_unifi_native.wan_slas')
    wifiman = _utilities.lazy_import('pulumi_unifi_native.wifiman')
    wlan_capabilities = _utilities.lazy_import('pulumi_unifi_native.wlan_capabilities')
    wlanconf = _utilities.lazy_import('pulumi_unifi_native.wlanconf')
    wlangroup = _utilities.lazy_import('pulumi_unifi_native.wlangroup')
    zone = _utilities.lazy_import('pulumi_unifi_native.zone')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "unifi-native",
  "mod": "account",
  "fqn": "pulumi_unifi_native.account",
  "classes": {
   "unifi-native:account:Account": "Account"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "acl-rules",
  "fqn": "pulumi_unifi_native.acl_rules",
  "classes": {
   "unifi-native:acl-rules:AclRule": "AclRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "apgroups",
  "fqn": "pulumi_unifi_native.apgroups",
  "classes": {
   "unifi-native:apgroups:ApGroup": "ApGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "auto_speedtest",
  "fqn": "pulumi_unifi_native.auto_speedtest",
  "classes": {
   "unifi-native:auto_speedtest:SettingAutoSpeedtest": "SettingAutoSpeedtest"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "baresip",
  "fqn": "pulumi_unifi_native.baresip",
  "classes": {
   "unifi-native:baresip:SettingBaresip": "SettingBaresip"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "broadcast",
  "fqn": "pulumi_unifi_native.broadcast",
  "classes": {
   "unifi-native:broadcast:SettingBroadcast": "SettingBroadcast"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "broadcastgroup",
  "fqn": "pulumi_unifi_native.broadcastgroup",
  "classes": {
   "unifi-native:broadcastgroup:BroadcastGroup": "BroadcastGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "channelplan",
  "fqn": "pulumi_unifi_native.channelplan",
  "classes": {
   "unifi-native:channelplan:ChannelPlan": "ChannelPlan"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "configuration",
  "fqn": "pulumi_unifi_native.configuration",
  "classes": {
   "unifi-native:configuration:WanLoadBalancingConfiguration": "WanLoadBalancingConfiguration"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "connectivity",
  "fqn": "pulumi_unifi_native.connectivity",
  "classes": {
   "unifi-native:connectivity:SettingConnectivity": "SettingConnectivity"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "content-filtering",
  "fqn": "pulumi_unifi_native.content_filtering",
  "classes": {
   "unifi-native:content-filtering:ContentFilteringRule": "ContentFilteringRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "country",
  "fqn": "pulumi_unifi_native.country",
  "classes": {
   "unifi-native:country:SettingCountry": "SettingCountry"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dashboard",
  "fqn": "pulumi_unifi_native.dashboard",
  "classes": {
   "unifi-native:dashboard:Dashboard": "Dashboard",
   "unifi-native:dashboard:SettingDashboard": "SettingDashboard"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "device",
  "fqn": "pulumi_unifi_native.device",
  "classes": {
   "unifi-native:device:Device": "Device"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dhcpoption",
  "fqn": "pulumi_unifi_native.dhcpoption",
  "classes": {
   "unifi-native:dhcpoption:DHCPOption": "DHCPOption"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "doh",
  "fqn": "pulumi_unifi_native.doh",
  "classes": {
   "unifi-native:doh:SettingDoh": "SettingDoh"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dpi",
  "fqn": "pulumi_unifi_native.dpi",
  "classes": {
   "unifi-native:dpi:SettingDpi": "SettingDpi"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dpiapp",
  "fqn": "pulumi_unifi_native.dpiapp",
  "classes": {
   "unifi-native:dpiapp:DpiApp": "DpiApp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dpigroup",
  "fqn": "pulumi_unifi_native.dpigroup",
  "classes": {
   "unifi-native:dpigroup:DpiGroup": "DpiGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "dynamicdns",
  "fqn": "pulumi_unifi_native.dynamicdns",
  "classes": {
   "unifi-native:dynamicdns:DynamicDNS": "DynamicDNS"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "element_adopt",
  "fqn": "pulumi_unifi_native.element_adopt",
  "classes": {
   "unifi-native:element_adopt:SettingElementAdopt": "SettingElementAdopt"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "ether_lighting",
  "fqn": "pulumi_unifi_native.ether_lighting",
  "classes": {
   "unifi-native:ether_lighting:SettingEtherLighting": "SettingEtherLighting"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "evaluation_score",
  "fqn": "pulumi_unifi_native.evaluation_score",
  "classes": {
   "unifi-native:evaluation_score:SettingEvaluationScore": "SettingEvaluationScore"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "fingerprint_override",
  "fqn": "pulumi_unifi_native.fingerprint_override",
  "classes": {
   "unifi-native:fingerprint_override:OverrideFingerprint": "OverrideFingerprint"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "firewall-app-blocks",
  "fqn": "pulumi_unifi_native.firewall_app_blocks",
  "classes": {
   "unifi-native:firewall-app-blocks:UpdateSimpleAppBlockRule": "UpdateSimpleAppBlockRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "firewall-policies",
  "fqn": "pulumi_unifi_native.firewall_policies",
  "classes": {
   "unifi-native:firewall-policies:FirewallPolicy": "FirewallPolicy"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "firewallgroup",
  "fqn": "pulumi_unifi_native.firewallgroup",
  "classes": {
   "unifi-native:firewallgroup:FirewallGroup": "FirewallGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "firewallrule",
  "fqn": "pulumi_unifi_native.firewallrule",
  "classes": {
   "unifi-native:firewallrule:FirewallRule": "FirewallRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "floorplan",
  "fqn": "pulumi_unifi_native.floorplan",
  "classes": {
   "unifi-native:floorplan:FloorPlan": "FloorPlan"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "global_ap",
  "fqn": "pulumi_unifi_native.global_ap",
  "classes": {
   "unifi-native:global_ap:SettingGlobalAp": "SettingGlobalAp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "global_nat",
  "fqn": "pulumi_unifi_native.global_nat",
  "classes": {
   "unifi-native:global_nat:SettingGlobalNat": "SettingGlobalNat"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "global_switch",
  "fqn": "pulumi_unifi_native.global_switch",
  "classes": {
   "unifi-native:global_switch:SettingGlobalSwitch": "SettingGlobalSwitch"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "guest_access",
  "fqn": "pulumi_unifi_native.guest_access",
  "classes": {
   "unifi-native:guest_access:SettingGuestAcces": "SettingGuestAcces"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "heatmap",
  "fqn": "pulumi_unifi_native.heatmap",
  "classes": {
   "unifi-native:heatmap:HeatMap": "HeatMap"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "heatmappoint",
  "fqn": "pulumi_unifi_native.heatmappoint",
  "classes": {
   "unifi-native:heatmappoint:HeatMapPoint": "HeatMapPoint"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "hotspot2conf",
  "fqn": "pulumi_unifi_native.hotspot2conf",
  "classes": {
   "unifi-native:hotspot2conf:Hotspot2Conf": "Hotspot2Conf"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "hotspotop",
  "fqn": "pulumi_unifi_native.hotspotop",
  "classes": {
   "unifi-native:hotspotop:HotspotOp": "HotspotOp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "hotspotpackage",
  "fqn": "pulumi_unifi_native.hotspotpackage",
  "classes": {
   "unifi-native:hotspotpackage:HotspotPackage": "HotspotPackage"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "ips",
  "fqn": "pulumi_unifi_native.ips",
  "classes": {
   "unifi-native:ips:SettingIps": "SettingIps"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "lcm",
  "fqn": "pulumi_unifi_native.lcm",
  "classes": {
   "unifi-native:lcm:SettingLcm": "SettingLcm"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "locale",
  "fqn": "pulumi_unifi_native.locale",
  "classes": {
   "unifi-native:locale:SettingLocale": "SettingLocale"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "magic_site_to_site_vpn",
  "fqn": "pulumi_unifi_native.magic_site_to_site_vpn",
  "classes": {
   "unifi-native:magic_site_to_site_vpn:SettingMagicSiteToSiteVpn": "SettingMagicSiteToSiteVpn"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "map",
  "fqn": "pulumi_unifi_native.map",
  "classes": {
   "unifi-native:map:Map": "Map"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "mclag-groups",
  "fqn": "pulumi_unifi_native.mclag_groups",
  "classes": {
   "unifi-native:mclag-groups:McLagGroup": "McLagGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "mdns",
  "fqn": "pulumi_unifi_native.mdns",
  "classes": {
   "unifi-native:mdns:SettingMdn": "SettingMdn"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "mediafile",
  "fqn": "pulumi_unifi_native.mediafile",
  "classes": {
   "unifi-native:mediafile:MediaFile": "MediaFile"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "mgmt",
  "fqn": "pulumi_unifi_native.mgmt",
  "classes": {
   "unifi-native:mgmt:SettingMgmt": "SettingMgmt"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "micro-segment-group",
  "fqn": "pulumi_unifi_native.micro_segment_group",
  "classes": {
   "unifi-native:micro-segment-group:MicroSegmentGroup": "MicroSegmentGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "nat",
  "fqn": "pulumi_unifi_native.nat",
  "classes": {
   "unifi-native:nat:NatRule": "NatRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "netflow",
  "fqn": "pulumi_unifi_native.netflow",
  "classes": {
   "unifi-native:netflow:SettingNetflow": "SettingNetflow"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "network",
  "fqn": "pulumi_unifi_native.network",
  "classes": {
   "unifi-native:network:GlobalConfig": "GlobalConfig"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "network-members-group",
  "fqn": "pulumi_unifi_native.network_members_group",
  "classes": {
   "unifi-native:network-members-group:NetworkMembersGroup": "NetworkMembersGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "network_optimization",
  "fqn": "pulumi_unifi_native.network_optimization",
  "classes": {
   "unifi-native:network_optimization:SettingNetworkOptimization": "SettingNetworkOptimization"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "networkconf",
  "fqn": "pulumi_unifi_native.networkconf",
  "classes": {
   "unifi-native:networkconf:Network": "Network"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "ntp",
  "fqn": "pulumi_unifi_native.ntp",
  "classes": {
   "unifi-native:ntp:SettingNtp": "SettingNtp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "porta",
  "fqn": "pulumi_unifi_native.porta",
  "classes": {
   "unifi-native:porta:SettingPorta": "SettingPorta"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "portconf",
  "fqn": "pulumi_unifi_native.portconf",
  "classes": {
   "unifi-native:portconf:PortProfile": "PortProfile"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "portforward",
  "fqn": "pulumi_unifi_native.portforward",
  "classes": {
   "unifi-native:portforward:PortForward": "PortForward"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "predefined",
  "fqn": "pulumi_unifi_native.predefined",
  "classes": {
   "unifi-native:predefined:PreDefinedFirewallPolicy": "PreDefinedFirewallPolicy"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "profiles",
  "fqn": "pulumi_unifi_native.profiles",
  "classes": {
   "unifi-native:profiles:RadiusProfile": "RadiusProfile"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "qos-rules",
  "fqn": "pulumi_unifi_native.qos_rules",
  "classes": {
   "unifi-native:qos-rules:QosRule": "QosRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "radio_ai",
  "fqn": "pulumi_unifi_native.radio_ai",
  "classes": {
   "unifi-native:radio_ai:SettingRadioAi": "SettingRadioAi"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "radius",
  "fqn": "pulumi_unifi_native.radius",
  "classes": {
   "unifi-native:radius:SettingRadiu": "SettingRadiu"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "radius-server",
  "fqn": "pulumi_unifi_native.radius_server",
  "classes": {
   "unifi-native:radius-server:UpdateDefaultRadiusConfiguration": "UpdateDefaultRadiusConfiguration"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "radiusprofile",
  "fqn": "pulumi_unifi_native.radiusprofile",
  "classes": {
   "unifi-native:radiusprofile:RADIUSProfile": "RADIUSProfile"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "router",
  "fqn": "pulumi_unifi_native.router",
  "classes": {
   "unifi-native:router:OspfRouter": "OspfRouter"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "routing",
  "fqn": "pulumi_unifi_native.routing",
  "classes": {
   "unifi-native:routing:Routing": "Routing"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "rsyslogd",
  "fqn": "pulumi_unifi_native.rsyslogd",
  "classes": {
   "unifi-native:rsyslogd:SettingRsyslogd": "SettingRsyslogd"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "scheduletask",
  "fqn": "pulumi_unifi_native.scheduletask",
  "classes": {
   "unifi-native:scheduletask:ScheduleTask": "ScheduleTask"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "snmp",
  "fqn": "pulumi_unifi_native.snmp",
  "classes": {
   "unifi-native:snmp:SettingSnmp": "SettingSnmp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "spatialrecord",
  "fqn": "pulumi_unifi_native.spatialrecord",
  "classes": {
   "unifi-native:spatialrecord:SpatialRecord": "SpatialRecord"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "ssl_inspection",
  "fqn": "pulumi_unifi_native.ssl_inspection",
  "classes": {
   "unifi-native:ssl_inspection:SettingSslInspection": "SettingSslInspection"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "stacking",
  "fqn": "pulumi_unifi_native.stacking",
  "classes": {
   "unifi-native:stacking:StackingGroup": "StackingGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "static-dns",
  "fqn": "pulumi_unifi_native.static_dns",
  "classes": {
   "unifi-native:static-dns:StaticDnsEntry": "StaticDnsEntry"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_cloudaccess",
  "fqn": "pulumi_unifi_native.super_cloudaccess",
  "classes": {
   "unifi-native:super_cloudaccess:SettingSuperCloudacces": "SettingSuperCloudacces"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_events",
  "fqn": "pulumi_unifi_native.super_events",
  "classes": {
   "unifi-native:super_events:SettingSuperEvent": "SettingSuperEvent"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_fwupdate",
  "fqn": "pulumi_unifi_native.super_fwupdate",
  "classes": {
   "unifi-native:super_fwupdate:SettingSuperFw": "SettingSuperFw"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_identity",
  "fqn": "pulumi_unifi_native.super_identity",
  "classes": {
   "unifi-native:super_identity:SettingSuperIdentity": "SettingSuperIdentity"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_mail",
  "fqn": "pulumi_unifi_native.super_mail",
  "classes": {
   "unifi-native:super_mail:SettingSuperMail": "SettingSuperMail"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_mgmt",
  "fqn": "pulumi_unifi_native.super_mgmt",
  "classes": {
   "unifi-native:super_mgmt:SettingSuperMgmt": "SettingSuperMgmt"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_sdn",
  "fqn": "pulumi_unifi_native.super_sdn",
  "classes": {
   "unifi-native:super_sdn:SettingSuperSdn": "SettingSuperSdn"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "super_smtp",
  "fqn": "pulumi_unifi_native.super_smtp",
  "classes": {
   "unifi-native:super_smtp:SettingSuperSmtp": "SettingSuperSmtp"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "tag",
  "fqn": "pulumi_unifi_native.tag",
  "classes": {
   "unifi-native:tag:Tag": "Tag"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "teleport",
  "fqn": "pulumi_unifi_native.teleport",
  "classes": {
   "unifi-native:teleport:SettingTeleport": "SettingTeleport"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "traffic_flow",
  "fqn": "pulumi_unifi_native.traffic_flow",
  "classes": {
   "unifi-native:traffic_flow:SettingTrafficFlow": "SettingTrafficFlow"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "trafficroutes",
  "fqn": "pulumi_unifi_native.trafficroutes",
  "classes": {
   "unifi-native:trafficroutes:TrafficRoute": "TrafficRoute"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "trafficrules",
  "fqn": "pulumi_unifi_native.trafficrules",
  "classes": {
   "unifi-native:trafficrules:TrafficRule": "TrafficRule"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "user",
  "fqn": "pulumi_unifi_native.user",
  "classes": {
   "unifi-native:user:User": "User"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "usergroup",
  "fqn": "pulumi_unifi_native.usergroup",
  "classes": {
   "unifi-native:usergroup:UserGroup": "UserGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "usg",
  "fqn": "pulumi_unifi_native.usg",
  "classes": {
   "unifi-native:usg:SettingUsg": "SettingUsg"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "usw",
  "fqn": "pulumi_unifi_native.usw",
  "classes": {
   "unifi-native:usw:SettingUsw": "SettingUsw"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "virtualdevice",
  "fqn": "pulumi_unifi_native.virtualdevice",
  "classes": {
   "unifi-native:virtualdevice:VirtualDevice": "VirtualDevice"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "vpn-server",
  "fqn": "pulumi_unifi_native.vpn_server",
  "classes": {
   "unifi-native:vpn-server:UpdateVpnConfiguration": "UpdateVpnConfiguration"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "wan-slas",
  "fqn": "pulumi_unifi_native.wan_slas",
  "classes": {
   "unifi-native:wan-slas:WanSla": "WanSla"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "wlanconf",
  "fqn": "pulumi_unifi_native.wlanconf",
  "classes": {
   "unifi-native:wlanconf:Wlan": "Wlan"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "wlangroup",
  "fqn": "pulumi_unifi_native.wlangroup",
  "classes": {
   "unifi-native:wlangroup:WLANGroup": "WLANGroup"
  }
 },
 {
  "pkg": "unifi-native",
  "mod": "zone",
  "fqn": "pulumi_unifi_native.zone",
  "classes": {
   "unifi-native:zone:FirewallZone": "FirewallZone"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "unifi-native",
  "token": "pulumi:providers:unifi-native",
  "fqn": "pulumi_unifi_native",
  "class": "Provider"
 }
]
"""
)
