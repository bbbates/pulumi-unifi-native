# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Meta',
    'SettingRsyslogd',
]

@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


@pulumi.output_type
class SettingRsyslogd(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 contents: Optional[Sequence[builtins.str]] = None,
                 debug: Optional[builtins.bool] = None,
                 enabled: Optional[builtins.bool] = None,
                 ip: Optional[builtins.str] = None,
                 key: Optional[builtins.str] = None,
                 log_all_contents: Optional[builtins.bool] = None,
                 netconsole_enabled: Optional[builtins.bool] = None,
                 netconsole_host: Optional[builtins.str] = None,
                 netconsole_port: Optional[builtins.int] = None,
                 port: Optional[builtins.int] = None,
                 site_id: Optional[builtins.str] = None,
                 this_controller: Optional[builtins.bool] = None,
                 this_controller_encrypted_only: Optional[builtins.bool] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if contents is not None:
            pulumi.set(__self__, "contents", contents)
        if debug is not None:
            pulumi.set(__self__, "debug", debug)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if key is not None:
            pulumi.set(__self__, "key", key)
        if log_all_contents is not None:
            pulumi.set(__self__, "log_all_contents", log_all_contents)
        if netconsole_enabled is not None:
            pulumi.set(__self__, "netconsole_enabled", netconsole_enabled)
        if netconsole_host is not None:
            pulumi.set(__self__, "netconsole_host", netconsole_host)
        if netconsole_port is not None:
            pulumi.set(__self__, "netconsole_port", netconsole_port)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if this_controller is not None:
            pulumi.set(__self__, "this_controller", this_controller)
        if this_controller_encrypted_only is not None:
            pulumi.set(__self__, "this_controller_encrypted_only", this_controller_encrypted_only)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter
    def contents(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "contents")

    @property
    @pulumi.getter
    def debug(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "debug")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def ip(self) -> Optional[builtins.str]:
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter(name="logAllContents")
    def log_all_contents(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "log_all_contents")

    @property
    @pulumi.getter(name="netconsoleEnabled")
    def netconsole_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "netconsole_enabled")

    @property
    @pulumi.getter(name="netconsoleHost")
    def netconsole_host(self) -> Optional[builtins.str]:
        return pulumi.get(self, "netconsole_host")

    @property
    @pulumi.getter(name="netconsolePort")
    def netconsole_port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "netconsole_port")

    @property
    @pulumi.getter
    def port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="thisController")
    def this_controller(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "this_controller")

    @property
    @pulumi.getter(name="thisControllerEncryptedOnly")
    def this_controller_encrypted_only(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "this_controller_encrypted_only")


