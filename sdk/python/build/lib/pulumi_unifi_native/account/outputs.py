# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Account',
    'Meta',
]

@pulumi.output_type
class Account(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 filter_ids: Optional[Sequence[builtins.str]] = None,
                 ip: Optional[builtins.str] = None,
                 name: Optional[builtins.str] = None,
                 networkconf_id: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 tunnel_config_type: Optional[builtins.str] = None,
                 tunnel_medium_type: Optional[builtins.int] = None,
                 tunnel_type: Optional[builtins.int] = None,
                 ulp_user_id: Optional[builtins.str] = None,
                 vlan: Optional[builtins.int] = None,
                 x_password: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if filter_ids is not None:
            pulumi.set(__self__, "filter_ids", filter_ids)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if networkconf_id is not None:
            pulumi.set(__self__, "networkconf_id", networkconf_id)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if tunnel_config_type is not None:
            pulumi.set(__self__, "tunnel_config_type", tunnel_config_type)
        if tunnel_medium_type is not None:
            pulumi.set(__self__, "tunnel_medium_type", tunnel_medium_type)
        if tunnel_type is not None:
            pulumi.set(__self__, "tunnel_type", tunnel_type)
        if ulp_user_id is not None:
            pulumi.set(__self__, "ulp_user_id", ulp_user_id)
        if vlan is not None:
            pulumi.set(__self__, "vlan", vlan)
        if x_password is not None:
            pulumi.set(__self__, "x_password", x_password)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter(name="filterIds")
    def filter_ids(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "filter_ids")

    @property
    @pulumi.getter
    def ip(self) -> Optional[builtins.str]:
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkconfId")
    def networkconf_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "networkconf_id")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="tunnelConfigType")
    def tunnel_config_type(self) -> Optional[builtins.str]:
        return pulumi.get(self, "tunnel_config_type")

    @property
    @pulumi.getter(name="tunnelMediumType")
    def tunnel_medium_type(self) -> Optional[builtins.int]:
        return pulumi.get(self, "tunnel_medium_type")

    @property
    @pulumi.getter(name="tunnelType")
    def tunnel_type(self) -> Optional[builtins.int]:
        return pulumi.get(self, "tunnel_type")

    @property
    @pulumi.getter(name="ulpUserId")
    def ulp_user_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "ulp_user_id")

    @property
    @pulumi.getter
    def vlan(self) -> Optional[builtins.int]:
        return pulumi.get(self, "vlan")

    @property
    @pulumi.getter(name="xPassword")
    def x_password(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_password")


@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


