# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'ListModelsResult',
    'AwaitableListModelsResult',
    'list_models',
    'list_models_output',
]

@pulumi.output_type
class ListModelsResult:
    def __init__(__self__, models_of_all_available_devices=None):
        if models_of_all_available_devices and not isinstance(models_of_all_available_devices, list):
            raise TypeError("Expected argument 'models_of_all_available_devices' to be a list")
        pulumi.set(__self__, "models_of_all_available_devices", models_of_all_available_devices)

    @property
    @pulumi.getter(name="ModelsOfAllAvailableDevices")
    def models_of_all_available_devices(self) -> Optional[Sequence['outputs.ModelMetaDto']]:
        return pulumi.get(self, "models_of_all_available_devices")


class AwaitableListModelsResult(ListModelsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListModelsResult(
            models_of_all_available_devices=self.models_of_all_available_devices)


def list_models(site_name: Optional[builtins.str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListModelsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:models:listModels', __args__, opts=opts, typ=ListModelsResult).value

    return AwaitableListModelsResult(
        models_of_all_available_devices=pulumi.get(__ret__, 'models_of_all_available_devices'))
def list_models_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ListModelsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:models:listModels', __args__, opts=opts, typ=ListModelsResult)
    return __ret__.apply(lambda __response__: ListModelsResult(
        models_of_all_available_devices=pulumi.get(__response__, 'models_of_all_available_devices')))
