# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Meta',
    'SettingSuperSmtp',
]

@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


@pulumi.output_type
class SettingSuperSmtp(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 enabled: Optional[builtins.bool] = None,
                 host: Optional[builtins.str] = None,
                 key: Optional[builtins.str] = None,
                 port: Optional[builtins.int] = None,
                 sender: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 use_auth: Optional[builtins.bool] = None,
                 use_sender: Optional[builtins.bool] = None,
                 use_ssl: Optional[builtins.bool] = None,
                 username: Optional[builtins.str] = None,
                 x_password: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if host is not None:
            pulumi.set(__self__, "host", host)
        if key is not None:
            pulumi.set(__self__, "key", key)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if sender is not None:
            pulumi.set(__self__, "sender", sender)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if use_auth is not None:
            pulumi.set(__self__, "use_auth", use_auth)
        if use_sender is not None:
            pulumi.set(__self__, "use_sender", use_sender)
        if use_ssl is not None:
            pulumi.set(__self__, "use_ssl", use_ssl)
        if username is not None:
            pulumi.set(__self__, "username", username)
        if x_password is not None:
            pulumi.set(__self__, "x_password", x_password)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def host(self) -> Optional[builtins.str]:
        return pulumi.get(self, "host")

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def port(self) -> Optional[builtins.int]:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def sender(self) -> Optional[builtins.str]:
        return pulumi.get(self, "sender")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="useAuth")
    def use_auth(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "use_auth")

    @property
    @pulumi.getter(name="useSender")
    def use_sender(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "use_sender")

    @property
    @pulumi.getter(name="useSsl")
    def use_ssl(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "use_ssl")

    @property
    @pulumi.getter
    def username(self) -> Optional[builtins.str]:
        return pulumi.get(self, "username")

    @property
    @pulumi.getter(name="xPassword")
    def x_password(self) -> Optional[builtins.str]:
        return pulumi.get(self, "x_password")


