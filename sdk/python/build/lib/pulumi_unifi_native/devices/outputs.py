# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'LocalDNS',
    'WifiManDevice',
]

@pulumi.output_type
class LocalDNS(dict):
    def __init__(__self__, *,
                 hostname: Optional[builtins.str] = None,
                 ip_address: Optional[builtins.str] = None,
                 mac_address: Optional[builtins.str] = None,
                 name: Optional[builtins.str] = None):
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[builtins.str]:
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[builtins.str]:
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[builtins.str]:
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")


@pulumi.output_type
class WifiManDevice(dict):
    def __init__(__self__, *,
                 experience: Optional[builtins.int] = None,
                 hostname: Optional[builtins.str] = None,
                 icon_device_id: Optional[builtins.int] = None,
                 icon_device_uidb_id: Optional[builtins.str] = None,
                 icon_engine_id: Optional[builtins.int] = None,
                 ip: Optional[builtins.str] = None,
                 link_download_rate_kbps: Optional[builtins.int] = None,
                 link_upload_rate_kbps: Optional[builtins.int] = None,
                 mac: Optional[builtins.str] = None,
                 model: Optional[builtins.str] = None,
                 name: Optional[builtins.str] = None,
                 radio_protocol: Optional[builtins.str] = None,
                 signal: Optional[builtins.int] = None):
        if experience is not None:
            pulumi.set(__self__, "experience", experience)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if icon_device_id is not None:
            pulumi.set(__self__, "icon_device_id", icon_device_id)
        if icon_device_uidb_id is not None:
            pulumi.set(__self__, "icon_device_uidb_id", icon_device_uidb_id)
        if icon_engine_id is not None:
            pulumi.set(__self__, "icon_engine_id", icon_engine_id)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if link_download_rate_kbps is not None:
            pulumi.set(__self__, "link_download_rate_kbps", link_download_rate_kbps)
        if link_upload_rate_kbps is not None:
            pulumi.set(__self__, "link_upload_rate_kbps", link_upload_rate_kbps)
        if mac is not None:
            pulumi.set(__self__, "mac", mac)
        if model is not None:
            pulumi.set(__self__, "model", model)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if radio_protocol is not None:
            pulumi.set(__self__, "radio_protocol", radio_protocol)
        if signal is not None:
            pulumi.set(__self__, "signal", signal)

    @property
    @pulumi.getter
    def experience(self) -> Optional[builtins.int]:
        return pulumi.get(self, "experience")

    @property
    @pulumi.getter
    def hostname(self) -> Optional[builtins.str]:
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter(name="iconDeviceId")
    def icon_device_id(self) -> Optional[builtins.int]:
        return pulumi.get(self, "icon_device_id")

    @property
    @pulumi.getter(name="iconDeviceUidbId")
    def icon_device_uidb_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "icon_device_uidb_id")

    @property
    @pulumi.getter(name="iconEngineId")
    def icon_engine_id(self) -> Optional[builtins.int]:
        return pulumi.get(self, "icon_engine_id")

    @property
    @pulumi.getter
    def ip(self) -> Optional[builtins.str]:
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter(name="linkDownloadRateKbps")
    def link_download_rate_kbps(self) -> Optional[builtins.int]:
        return pulumi.get(self, "link_download_rate_kbps")

    @property
    @pulumi.getter(name="linkUploadRateKbps")
    def link_upload_rate_kbps(self) -> Optional[builtins.int]:
        return pulumi.get(self, "link_upload_rate_kbps")

    @property
    @pulumi.getter
    def mac(self) -> Optional[builtins.str]:
        return pulumi.get(self, "mac")

    @property
    @pulumi.getter
    def model(self) -> Optional[builtins.str]:
        return pulumi.get(self, "model")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="radioProtocol")
    def radio_protocol(self) -> Optional[builtins.str]:
        return pulumi.get(self, "radio_protocol")

    @property
    @pulumi.getter
    def signal(self) -> Optional[builtins.int]:
        return pulumi.get(self, "signal")


