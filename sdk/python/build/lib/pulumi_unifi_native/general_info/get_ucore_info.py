# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetUcoreInfoResult',
    'AwaitableGetUcoreInfoResult',
    'get_ucore_info',
    'get_ucore_info_output',
]

@pulumi.output_type
class GetUcoreInfoResult:
    def __init__(__self__, cloud_access_enabled=None, cloud_backup_enabled=None):
        if cloud_access_enabled and not isinstance(cloud_access_enabled, bool):
            raise TypeError("Expected argument 'cloud_access_enabled' to be a bool")
        pulumi.set(__self__, "cloud_access_enabled", cloud_access_enabled)
        if cloud_backup_enabled and not isinstance(cloud_backup_enabled, bool):
            raise TypeError("Expected argument 'cloud_backup_enabled' to be a bool")
        pulumi.set(__self__, "cloud_backup_enabled", cloud_backup_enabled)

    @property
    @pulumi.getter(name="cloudAccessEnabled")
    def cloud_access_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "cloud_access_enabled")

    @property
    @pulumi.getter(name="cloudBackupEnabled")
    def cloud_backup_enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "cloud_backup_enabled")


class AwaitableGetUcoreInfoResult(GetUcoreInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUcoreInfoResult(
            cloud_access_enabled=self.cloud_access_enabled,
            cloud_backup_enabled=self.cloud_backup_enabled)


def get_ucore_info(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUcoreInfoResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:general-info:getUcoreInfo', __args__, opts=opts, typ=GetUcoreInfoResult).value

    return AwaitableGetUcoreInfoResult(
        cloud_access_enabled=pulumi.get(__ret__, 'cloud_access_enabled'),
        cloud_backup_enabled=pulumi.get(__ret__, 'cloud_backup_enabled'))
def get_ucore_info_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetUcoreInfoResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:general-info:getUcoreInfo', __args__, opts=opts, typ=GetUcoreInfoResult)
    return __ret__.apply(lambda __response__: GetUcoreInfoResult(
        cloud_access_enabled=pulumi.get(__response__, 'cloud_access_enabled'),
        cloud_backup_enabled=pulumi.get(__response__, 'cloud_backup_enabled')))
