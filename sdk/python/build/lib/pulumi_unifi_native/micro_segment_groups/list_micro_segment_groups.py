# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'ListMicroSegmentGroupsResult',
    'AwaitableListMicroSegmentGroupsResult',
    'list_micro_segment_groups',
    'list_micro_segment_groups_output',
]

@pulumi.output_type
class ListMicroSegmentGroupsResult:
    def __init__(__self__, items=None):
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.MicroSegmentGroupDto']:
        return pulumi.get(self, "items")


class AwaitableListMicroSegmentGroupsResult(ListMicroSegmentGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListMicroSegmentGroupsResult(
            items=self.items)


def list_micro_segment_groups(site_name: Optional[builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListMicroSegmentGroupsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:micro-segment-groups:listMicroSegmentGroups', __args__, opts=opts, typ=ListMicroSegmentGroupsResult).value

    return AwaitableListMicroSegmentGroupsResult(
        items=pulumi.get(__ret__, 'items'))
def list_micro_segment_groups_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ListMicroSegmentGroupsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:micro-segment-groups:listMicroSegmentGroups', __args__, opts=opts, typ=ListMicroSegmentGroupsResult)
    return __ret__.apply(lambda __response__: ListMicroSegmentGroupsResult(
        items=pulumi.get(__response__, 'items')))
