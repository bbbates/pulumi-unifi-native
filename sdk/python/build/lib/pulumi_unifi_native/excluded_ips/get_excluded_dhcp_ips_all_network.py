# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetExcludedDhcpIpsAllNetworkResult',
    'AwaitableGetExcludedDhcpIpsAllNetworkResult',
    'get_excluded_dhcp_ips_all_network',
    'get_excluded_dhcp_ips_all_network_output',
]

@pulumi.output_type
class GetExcludedDhcpIpsAllNetworkResult:
    def __init__(__self__, excluded_ip_client_info=None, unidentified_excluded_ip_info=None):
        if excluded_ip_client_info and not isinstance(excluded_ip_client_info, list):
            raise TypeError("Expected argument 'excluded_ip_client_info' to be a list")
        pulumi.set(__self__, "excluded_ip_client_info", excluded_ip_client_info)
        if unidentified_excluded_ip_info and not isinstance(unidentified_excluded_ip_info, list):
            raise TypeError("Expected argument 'unidentified_excluded_ip_info' to be a list")
        pulumi.set(__self__, "unidentified_excluded_ip_info", unidentified_excluded_ip_info)

    @property
    @pulumi.getter(name="excludedIpClientInfo")
    def excluded_ip_client_info(self) -> Optional[Sequence['outputs.ClientExcludedIpDto']]:
        return pulumi.get(self, "excluded_ip_client_info")

    @property
    @pulumi.getter(name="unidentifiedExcludedIpInfo")
    def unidentified_excluded_ip_info(self) -> Optional[Sequence['outputs.ReportedExcludedIpDto']]:
        return pulumi.get(self, "unidentified_excluded_ip_info")


class AwaitableGetExcludedDhcpIpsAllNetworkResult(GetExcludedDhcpIpsAllNetworkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExcludedDhcpIpsAllNetworkResult(
            excluded_ip_client_info=self.excluded_ip_client_info,
            unidentified_excluded_ip_info=self.unidentified_excluded_ip_info)


def get_excluded_dhcp_ips_all_network(site_name: Optional[builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExcludedDhcpIpsAllNetworkResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('unifi-native:excluded-ips:getExcludedDhcpIpsAllNetwork', __args__, opts=opts, typ=GetExcludedDhcpIpsAllNetworkResult).value

    return AwaitableGetExcludedDhcpIpsAllNetworkResult(
        excluded_ip_client_info=pulumi.get(__ret__, 'excluded_ip_client_info'),
        unidentified_excluded_ip_info=pulumi.get(__ret__, 'unidentified_excluded_ip_info'))
def get_excluded_dhcp_ips_all_network_output(site_name: Optional[pulumi.Input[builtins.str]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetExcludedDhcpIpsAllNetworkResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['siteName'] = site_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('unifi-native:excluded-ips:getExcludedDhcpIpsAllNetwork', __args__, opts=opts, typ=GetExcludedDhcpIpsAllNetworkResult)
    return __ret__.apply(lambda __response__: GetExcludedDhcpIpsAllNetworkResult(
        excluded_ip_client_info=pulumi.get(__response__, 'excluded_ip_client_info'),
        unidentified_excluded_ip_info=pulumi.get(__response__, 'unidentified_excluded_ip_info')))
