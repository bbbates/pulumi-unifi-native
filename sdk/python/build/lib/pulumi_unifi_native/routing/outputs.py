# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'Meta',
    'Routing',
]

@pulumi.output_type
class Meta(dict):
    def __init__(__self__, *,
                 msg: Optional[builtins.str] = None,
                 rc: Optional[builtins.str] = None):
        if msg is not None:
            pulumi.set(__self__, "msg", msg)
        if rc is not None:
            pulumi.set(__self__, "rc", rc)

    @property
    @pulumi.getter
    def msg(self) -> Optional[builtins.str]:
        return pulumi.get(self, "msg")

    @property
    @pulumi.getter
    def rc(self) -> Optional[builtins.str]:
        return pulumi.get(self, "rc")


@pulumi.output_type
class Routing(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 attr_hidden: Optional[builtins.bool] = None,
                 attr_hidden_id: Optional[builtins.str] = None,
                 attr_no_delete: Optional[builtins.bool] = None,
                 attr_no_edit: Optional[builtins.bool] = None,
                 enabled: Optional[builtins.bool] = None,
                 gateway_device: Optional[builtins.str] = None,
                 gateway_type: Optional[builtins.str] = None,
                 name: Optional[builtins.str] = None,
                 site_id: Optional[builtins.str] = None,
                 static_route_distance: Optional[builtins.int] = None,
                 static_route_interface: Optional[builtins.str] = None,
                 static_route_network: Optional[builtins.str] = None,
                 static_route_nexthop: Optional[builtins.str] = None,
                 static_route_type: Optional[builtins.str] = None,
                 type: Optional[builtins.str] = None):
        if id is not None:
            pulumi.set(__self__, "id", id)
        if attr_hidden is not None:
            pulumi.set(__self__, "attr_hidden", attr_hidden)
        if attr_hidden_id is not None:
            pulumi.set(__self__, "attr_hidden_id", attr_hidden_id)
        if attr_no_delete is not None:
            pulumi.set(__self__, "attr_no_delete", attr_no_delete)
        if attr_no_edit is not None:
            pulumi.set(__self__, "attr_no_edit", attr_no_edit)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if gateway_device is not None:
            pulumi.set(__self__, "gateway_device", gateway_device)
        if gateway_type is not None:
            pulumi.set(__self__, "gateway_type", gateway_type)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if site_id is not None:
            pulumi.set(__self__, "site_id", site_id)
        if static_route_distance is not None:
            pulumi.set(__self__, "static_route_distance", static_route_distance)
        if static_route_interface is not None:
            pulumi.set(__self__, "static_route_interface", static_route_interface)
        if static_route_network is not None:
            pulumi.set(__self__, "static_route_network", static_route_network)
        if static_route_nexthop is not None:
            pulumi.set(__self__, "static_route_nexthop", static_route_nexthop)
        if static_route_type is not None:
            pulumi.set(__self__, "static_route_type", static_route_type)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="Id")
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="attrHidden")
    def attr_hidden(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_hidden")

    @property
    @pulumi.getter(name="attrHiddenId")
    def attr_hidden_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "attr_hidden_id")

    @property
    @pulumi.getter(name="attrNoDelete")
    def attr_no_delete(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_delete")

    @property
    @pulumi.getter(name="attrNoEdit")
    def attr_no_edit(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "attr_no_edit")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="gatewayDevice")
    def gateway_device(self) -> Optional[builtins.str]:
        return pulumi.get(self, "gateway_device")

    @property
    @pulumi.getter(name="gatewayType")
    def gateway_type(self) -> Optional[builtins.str]:
        return pulumi.get(self, "gateway_type")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="staticRouteDistance")
    def static_route_distance(self) -> Optional[builtins.int]:
        return pulumi.get(self, "static_route_distance")

    @property
    @pulumi.getter(name="staticRouteInterface")
    def static_route_interface(self) -> Optional[builtins.str]:
        return pulumi.get(self, "static_route_interface")

    @property
    @pulumi.getter(name="staticRouteNetwork")
    def static_route_network(self) -> Optional[builtins.str]:
        return pulumi.get(self, "static_route_network")

    @property
    @pulumi.getter(name="staticRouteNexthop")
    def static_route_nexthop(self) -> Optional[builtins.str]:
        return pulumi.get(self, "static_route_nexthop")

    @property
    @pulumi.getter(name="staticRouteType")
    def static_route_type(self) -> Optional[builtins.str]:
        return pulumi.get(self, "static_route_type")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        return pulumi.get(self, "type")


