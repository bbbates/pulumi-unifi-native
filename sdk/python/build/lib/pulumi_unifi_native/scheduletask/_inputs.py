# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ScheduleTaskUpgradeTargetsArgs',
    'ScheduleTaskUpgradeTargetsArgsDict',
]

MYPY = False

if not MYPY:
    class ScheduleTaskUpgradeTargetsArgsDict(TypedDict):
        mac: NotRequired[pulumi.Input[builtins.str]]
elif False:
    ScheduleTaskUpgradeTargetsArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ScheduleTaskUpgradeTargetsArgs:
    def __init__(__self__, *,
                 mac: Optional[pulumi.Input[builtins.str]] = None):
        if mac is not None:
            pulumi.set(__self__, "mac", mac)

    @property
    @pulumi.getter
    def mac(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "mac")

    @mac.setter
    def mac(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "mac", value)


